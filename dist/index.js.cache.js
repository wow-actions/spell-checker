(()=>{var __webpack_modules__={7351:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.issue=t.issueCommand=void 0;const o=i(r(2037));const l=r(5278);function issueCommand(e,t,r){const a=new Command(e,t,r);process.stdout.write(a.toString()+o.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const d="::";class Command{constructor(e,t,r){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=r}toString(){let e=d+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const r in this.properties){if(this.properties.hasOwnProperty(r)){const a=this.properties[r];if(a){if(t){t=false}else{e+=","}e+=`${r}=${escapeProperty(a)}`}}}}e+=`${d}${escapeData(this.message)}`;return e}}function escapeData(e){return l.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return l.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},2186:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var o=this&&this.__awaiter||function(e,t,r,a){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(a.next(e))}catch(e){n(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.getIDToken=t.getState=t.saveState=t.group=t.endGroup=t.startGroup=t.info=t.notice=t.warning=t.error=t.debug=t.isDebug=t.setFailed=t.setCommandEcho=t.setOutput=t.getBooleanInput=t.getMultilineInput=t.getInput=t.addPath=t.setSecret=t.exportVariable=t.ExitCode=void 0;const l=r(7351);const d=r(717);const u=r(5278);const c=i(r(2037));const h=i(r(1017));const g=r(8041);var v;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(v=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){const r=u.toCommandValue(t);process.env[e]=r;const a=process.env["GITHUB_ENV"]||"";if(a){return d.issueFileCommand("ENV",d.prepareKeyValueMessage(e,t))}l.issueCommand("set-env",{name:e},r)}t.exportVariable=exportVariable;function setSecret(e){l.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){const t=process.env["GITHUB_PATH"]||"";if(t){d.issueFileCommand("PATH",e)}else{l.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${h.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const r=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!r){throw new Error(`Input required and not supplied: ${e}`)}if(t&&t.trimWhitespace===false){return r}return r.trim()}t.getInput=getInput;function getMultilineInput(e,t){const r=getInput(e,t).split("\n").filter((e=>e!==""));if(t&&t.trimWhitespace===false){return r}return r.map((e=>e.trim()))}t.getMultilineInput=getMultilineInput;function getBooleanInput(e,t){const r=["true","True","TRUE"];const a=["false","False","FALSE"];const n=getInput(e,t);if(r.includes(n))return true;if(a.includes(n))return false;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n`+`Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}t.getBooleanInput=getBooleanInput;function setOutput(e,t){const r=process.env["GITHUB_OUTPUT"]||"";if(r){return d.issueFileCommand("OUTPUT",d.prepareKeyValueMessage(e,t))}process.stdout.write(c.EOL);l.issueCommand("set-output",{name:e},u.toCommandValue(t))}t.setOutput=setOutput;function setCommandEcho(e){l.issue("echo",e?"on":"off")}t.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=v.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){l.issueCommand("debug",{},e)}t.debug=debug;function error(e,t={}){l.issueCommand("error",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.error=error;function warning(e,t={}){l.issueCommand("warning",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.warning=warning;function notice(e,t={}){l.issueCommand("notice",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.notice=notice;function info(e){process.stdout.write(e+c.EOL)}t.info=info;function startGroup(e){l.issue("group",e)}t.startGroup=startGroup;function endGroup(){l.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return o(this,void 0,void 0,(function*(){startGroup(e);let r;try{r=yield t()}finally{endGroup()}return r}))}t.group=group;function saveState(e,t){const r=process.env["GITHUB_STATE"]||"";if(r){return d.issueFileCommand("STATE",d.prepareKeyValueMessage(e,t))}l.issueCommand("save-state",{name:e},u.toCommandValue(t))}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState;function getIDToken(e){return o(this,void 0,void 0,(function*(){return yield g.OidcClient.getIDToken(e)}))}t.getIDToken=getIDToken;var w=r(1327);Object.defineProperty(t,"summary",{enumerable:true,get:function(){return w.summary}});var b=r(1327);Object.defineProperty(t,"markdownSummary",{enumerable:true,get:function(){return b.markdownSummary}});var y=r(2981);Object.defineProperty(t,"toPosixPath",{enumerable:true,get:function(){return y.toPosixPath}});Object.defineProperty(t,"toWin32Path",{enumerable:true,get:function(){return y.toWin32Path}});Object.defineProperty(t,"toPlatformPath",{enumerable:true,get:function(){return y.toPlatformPath}})},717:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.prepareKeyValueMessage=t.issueFileCommand=void 0;const o=i(r(7147));const l=i(r(2037));const d=r(5840);const u=r(5278);function issueFileCommand(e,t){const r=process.env[`GITHUB_${e}`];if(!r){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!o.existsSync(r)){throw new Error(`Missing file at path: ${r}`)}o.appendFileSync(r,`${u.toCommandValue(t)}${l.EOL}`,{encoding:"utf8"})}t.issueFileCommand=issueFileCommand;function prepareKeyValueMessage(e,t){const r=`ghadelimiter_${d.v4()}`;const a=u.toCommandValue(t);if(e.includes(r)){throw new Error(`Unexpected input: name should not contain the delimiter "${r}"`)}if(a.includes(r)){throw new Error(`Unexpected input: value should not contain the delimiter "${r}"`)}return`${e}<<${r}${l.EOL}${a}${l.EOL}${r}`}t.prepareKeyValueMessage=prepareKeyValueMessage},8041:function(e,t,r){"use strict";var a=this&&this.__awaiter||function(e,t,r,a){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(a.next(e))}catch(e){n(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.OidcClient=void 0;const n=r(6255);const i=r(5526);const o=r(2186);class OidcClient{static createHttpClient(e=true,t=10){const r={allowRetries:e,maxRetries:t};return new n.HttpClient("actions/oidc-client",[new i.BearerCredentialHandler(OidcClient.getRequestToken())],r)}static getRequestToken(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable")}return e}static getIDTokenUrl(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable")}return e}static getCall(e){var t;return a(this,void 0,void 0,(function*(){const r=OidcClient.createHttpClient();const a=yield r.getJson(e).catch((e=>{throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.result.message}`)}));const n=(t=a.result)===null||t===void 0?void 0:t.value;if(!n){throw new Error("Response json body do not have ID Token field")}return n}))}static getIDToken(e){return a(this,void 0,void 0,(function*(){try{let t=OidcClient.getIDTokenUrl();if(e){const r=encodeURIComponent(e);t=`${t}&audience=${r}`}o.debug(`ID token url is ${t}`);const r=yield OidcClient.getCall(t);o.setSecret(r);return r}catch(e){throw new Error(`Error message: ${e.message}`)}}))}}t.OidcClient=OidcClient},2981:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.toPlatformPath=t.toWin32Path=t.toPosixPath=void 0;const o=i(r(1017));function toPosixPath(e){return e.replace(/[\\]/g,"/")}t.toPosixPath=toPosixPath;function toWin32Path(e){return e.replace(/[/]/g,"\\")}t.toWin32Path=toWin32Path;function toPlatformPath(e){return e.replace(/[/\\]/g,o.sep)}t.toPlatformPath=toPlatformPath},1327:function(e,t,r){"use strict";var a=this&&this.__awaiter||function(e,t,r,a){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(a.next(e))}catch(e){n(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.summary=t.markdownSummary=t.SUMMARY_DOCS_URL=t.SUMMARY_ENV_VAR=void 0;const n=r(2037);const i=r(7147);const{access:o,appendFile:l,writeFile:d}=i.promises;t.SUMMARY_ENV_VAR="GITHUB_STEP_SUMMARY";t.SUMMARY_DOCS_URL="https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";class Summary{constructor(){this._buffer=""}filePath(){return a(this,void 0,void 0,(function*(){if(this._filePath){return this._filePath}const e=process.env[t.SUMMARY_ENV_VAR];if(!e){throw new Error(`Unable to find environment variable for $${t.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`)}try{yield o(e,i.constants.R_OK|i.constants.W_OK)}catch(t){throw new Error(`Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`)}this._filePath=e;return this._filePath}))}wrap(e,t,r={}){const a=Object.entries(r).map((([e,t])=>` ${e}="${t}"`)).join("");if(!t){return`<${e}${a}>`}return`<${e}${a}>${t}</${e}>`}write(e){return a(this,void 0,void 0,(function*(){const t=!!(e===null||e===void 0?void 0:e.overwrite);const r=yield this.filePath();const a=t?d:l;yield a(r,this._buffer,{encoding:"utf8"});return this.emptyBuffer()}))}clear(){return a(this,void 0,void 0,(function*(){return this.emptyBuffer().write({overwrite:true})}))}stringify(){return this._buffer}isEmptyBuffer(){return this._buffer.length===0}emptyBuffer(){this._buffer="";return this}addRaw(e,t=false){this._buffer+=e;return t?this.addEOL():this}addEOL(){return this.addRaw(n.EOL)}addCodeBlock(e,t){const r=Object.assign({},t&&{lang:t});const a=this.wrap("pre",this.wrap("code",e),r);return this.addRaw(a).addEOL()}addList(e,t=false){const r=t?"ol":"ul";const a=e.map((e=>this.wrap("li",e))).join("");const n=this.wrap(r,a);return this.addRaw(n).addEOL()}addTable(e){const t=e.map((e=>{const t=e.map((e=>{if(typeof e==="string"){return this.wrap("td",e)}const{header:t,data:r,colspan:a,rowspan:n}=e;const i=t?"th":"td";const o=Object.assign(Object.assign({},a&&{colspan:a}),n&&{rowspan:n});return this.wrap(i,r,o)})).join("");return this.wrap("tr",t)})).join("");const r=this.wrap("table",t);return this.addRaw(r).addEOL()}addDetails(e,t){const r=this.wrap("details",this.wrap("summary",e)+t);return this.addRaw(r).addEOL()}addImage(e,t,r){const{width:a,height:n}=r||{};const i=Object.assign(Object.assign({},a&&{width:a}),n&&{height:n});const o=this.wrap("img",null,Object.assign({src:e,alt:t},i));return this.addRaw(o).addEOL()}addHeading(e,t){const r=`h${t}`;const a=["h1","h2","h3","h4","h5","h6"].includes(r)?r:"h1";const n=this.wrap(a,e);return this.addRaw(n).addEOL()}addSeparator(){const e=this.wrap("hr",null);return this.addRaw(e).addEOL()}addBreak(){const e=this.wrap("br",null);return this.addRaw(e).addEOL()}addQuote(e,t){const r=Object.assign({},t&&{cite:t});const a=this.wrap("blockquote",e,r);return this.addRaw(a).addEOL()}addLink(e,t){const r=this.wrap("a",e,{href:t});return this.addRaw(r).addEOL()}}const u=new Summary;t.markdownSummary=u;t.summary=u},5278:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toCommandProperties=t.toCommandValue=void 0;function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}t.toCommandValue=toCommandValue;function toCommandProperties(e){if(!Object.keys(e).length){return{}}return{title:e.title,file:e.file,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}}t.toCommandProperties=toCommandProperties},4087:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Context=void 0;const a=r(7147);const n=r(2037);class Context{constructor(){var e,t,r;this.payload={};if(process.env.GITHUB_EVENT_PATH){if(a.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(a.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${n.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR;this.job=process.env.GITHUB_JOB;this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10);this.runId=parseInt(process.env.GITHUB_RUN_ID,10);this.apiUrl=(e=process.env.GITHUB_API_URL)!==null&&e!==void 0?e:`https://api.github.com`;this.serverUrl=(t=process.env.GITHUB_SERVER_URL)!==null&&t!==void 0?t:`https://github.com`;this.graphqlUrl=(r=process.env.GITHUB_GRAPHQL_URL)!==null&&r!==void 0?r:`https://api.github.com/graphql`}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:t}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=Context},5438:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokit=t.context=void 0;const o=i(r(4087));const l=r(3030);t.context=new o.Context;function getOctokit(e,t,...r){const a=l.GitHub.plugin(...r);return new a(l.getOctokitOptions(e,t))}t.getOctokit=getOctokit},7914:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getApiBaseUrl=t.getProxyAgent=t.getAuthString=void 0;const o=i(r(6255));function getAuthString(e,t){if(!e&&!t.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&t.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof t.auth==="string"?t.auth:`token ${e}`}t.getAuthString=getAuthString;function getProxyAgent(e){const t=new o.HttpClient;return t.getAgent(e)}t.getProxyAgent=getProxyAgent;function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}t.getApiBaseUrl=getApiBaseUrl},3030:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokitOptions=t.GitHub=t.defaults=t.context=void 0;const o=i(r(4087));const l=i(r(7914));const d=r(6762);const u=r(3044);const c=r(4193);t.context=new o.Context;const h=l.getApiBaseUrl();t.defaults={baseUrl:h,request:{agent:l.getProxyAgent(h)}};t.GitHub=d.Octokit.plugin(u.restEndpointMethods,c.paginateRest).defaults(t.defaults);function getOctokitOptions(e,t){const r=Object.assign({},t||{});const a=l.getAuthString(e,r);if(a){r.auth=a}return r}t.getOctokitOptions=getOctokitOptions},5526:function(e,t){"use strict";var r=this&&this.__awaiter||function(e,t,r,a){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(a.next(e))}catch(e){n(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.PersonalAccessTokenCredentialHandler=t.BearerCredentialHandler=t.BasicCredentialHandler=void 0;class BasicCredentialHandler{constructor(e,t){this.username=e;this.password=t}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BasicCredentialHandler=BasicCredentialHandler;class BearerCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Bearer ${this.token}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BearerCredentialHandler=BearerCredentialHandler;class PersonalAccessTokenCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.PersonalAccessTokenCredentialHandler=PersonalAccessTokenCredentialHandler},6255:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var o=this&&this.__awaiter||function(e,t,r,a){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(a.next(e))}catch(e){n(e)}}function rejected(e){try{step(a["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.HttpClient=t.isHttps=t.HttpClientResponse=t.HttpClientError=t.getProxyUrl=t.MediaTypes=t.Headers=t.HttpCodes=void 0;const l=i(r(3685));const d=i(r(5687));const u=i(r(9835));const c=i(r(4294));var h;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(h=t.HttpCodes||(t.HttpCodes={}));var g;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(g=t.Headers||(t.Headers={}));var v;(function(e){e["ApplicationJson"]="application/json"})(v=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){const t=u.getProxyUrl(new URL(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const w=[h.MovedPermanently,h.ResourceMoved,h.SeeOther,h.TemporaryRedirect,h.PermanentRedirect];const b=[h.BadGateway,h.ServiceUnavailable,h.GatewayTimeout];const y=["OPTIONS","GET","DELETE","HEAD"];const k=10;const E=5;class HttpClientError extends Error{constructor(e,t){super(e);this.name="HttpClientError";this.statusCode=t;Object.setPrototypeOf(this,HttpClientError.prototype)}}t.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return o(this,void 0,void 0,(function*(){return new Promise((e=>o(this,void 0,void 0,(function*(){let t=Buffer.alloc(0);this.message.on("data",(e=>{t=Buffer.concat([t,e])}));this.message.on("end",(()=>{e(t.toString())}))}))))}))}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){const t=new URL(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,r){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=r;if(r){if(r.ignoreSslError!=null){this._ignoreSslError=r.ignoreSslError}this._socketTimeout=r.socketTimeout;if(r.allowRedirects!=null){this._allowRedirects=r.allowRedirects}if(r.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=r.allowRedirectDowngrade}if(r.maxRedirects!=null){this._maxRedirects=Math.max(r.maxRedirects,0)}if(r.keepAlive!=null){this._keepAlive=r.keepAlive}if(r.allowRetries!=null){this._allowRetries=r.allowRetries}if(r.maxRetries!=null){this._maxRetries=r.maxRetries}}}options(e,t){return o(this,void 0,void 0,(function*(){return this.request("OPTIONS",e,null,t||{})}))}get(e,t){return o(this,void 0,void 0,(function*(){return this.request("GET",e,null,t||{})}))}del(e,t){return o(this,void 0,void 0,(function*(){return this.request("DELETE",e,null,t||{})}))}post(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("POST",e,t,r||{})}))}patch(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("PATCH",e,t,r||{})}))}put(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("PUT",e,t,r||{})}))}head(e,t){return o(this,void 0,void 0,(function*(){return this.request("HEAD",e,null,t||{})}))}sendStream(e,t,r,a){return o(this,void 0,void 0,(function*(){return this.request(e,t,r,a)}))}getJson(e,t={}){return o(this,void 0,void 0,(function*(){t[g.Accept]=this._getExistingOrDefaultHeader(t,g.Accept,v.ApplicationJson);const r=yield this.get(e,t);return this._processResponse(r,this.requestOptions)}))}postJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const a=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,v.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,v.ApplicationJson);const n=yield this.post(e,a,r);return this._processResponse(n,this.requestOptions)}))}putJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const a=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,v.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,v.ApplicationJson);const n=yield this.put(e,a,r);return this._processResponse(n,this.requestOptions)}))}patchJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const a=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,v.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,v.ApplicationJson);const n=yield this.patch(e,a,r);return this._processResponse(n,this.requestOptions)}))}request(e,t,r,a){return o(this,void 0,void 0,(function*(){if(this._disposed){throw new Error("Client has already been disposed.")}const n=new URL(t);let i=this._prepareRequest(e,n,a);const o=this._allowRetries&&y.includes(e)?this._maxRetries+1:1;let l=0;let d;do{d=yield this.requestRaw(i,r);if(d&&d.message&&d.message.statusCode===h.Unauthorized){let e;for(const t of this.handlers){if(t.canHandleAuthentication(d)){e=t;break}}if(e){return e.handleAuthentication(this,i,r)}else{return d}}let t=this._maxRedirects;while(d.message.statusCode&&w.includes(d.message.statusCode)&&this._allowRedirects&&t>0){const o=d.message.headers["location"];if(!o){break}const l=new URL(o);if(n.protocol==="https:"&&n.protocol!==l.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}yield d.readBody();if(l.hostname!==n.hostname){for(const e in a){if(e.toLowerCase()==="authorization"){delete a[e]}}}i=this._prepareRequest(e,l,a);d=yield this.requestRaw(i,r);t--}if(!d.message.statusCode||!b.includes(d.message.statusCode)){return d}l+=1;if(l<o){yield d.readBody();yield this._performExponentialBackoff(l)}}while(l<o);return d}))}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return o(this,void 0,void 0,(function*(){return new Promise(((r,a)=>{function callbackForResult(e,t){if(e){a(e)}else if(!t){a(new Error("Unknown error"))}else{r(t)}}this.requestRawWithCallback(e,t,callbackForResult)}))}))}requestRawWithCallback(e,t,r){if(typeof t==="string"){if(!e.options.headers){e.options.headers={}}e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let a=false;function handleResult(e,t){if(!a){a=true;r(e,t)}}const n=e.httpModule.request(e.options,(e=>{const t=new HttpClientResponse(e);handleResult(undefined,t)}));let i;n.on("socket",(e=>{i=e}));n.setTimeout(this._socketTimeout||3*6e4,(()=>{if(i){i.end()}handleResult(new Error(`Request timeout: ${e.options.path}`))}));n.on("error",(function(e){handleResult(e)}));if(t&&typeof t==="string"){n.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",(function(){n.end()}));t.pipe(n)}else{n.end()}}getAgent(e){const t=new URL(e);return this._getAgent(t)}_prepareRequest(e,t,r){const a={};a.parsedUrl=t;const n=a.parsedUrl.protocol==="https:";a.httpModule=n?d:l;const i=n?443:80;a.options={};a.options.host=a.parsedUrl.hostname;a.options.port=a.parsedUrl.port?parseInt(a.parsedUrl.port):i;a.options.path=(a.parsedUrl.pathname||"")+(a.parsedUrl.search||"");a.options.method=e;a.options.headers=this._mergeHeaders(r);if(this.userAgent!=null){a.options.headers["user-agent"]=this.userAgent}a.options.agent=this._getAgent(a.parsedUrl);if(this.handlers){for(const e of this.handlers){e.prepareRequest(a.options)}}return a}_mergeHeaders(e){if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e||{}))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,t,r){let a;if(this.requestOptions&&this.requestOptions.headers){a=lowercaseKeys(this.requestOptions.headers)[t]}return e[t]||a||r}_getAgent(e){let t;const r=u.getProxyUrl(e);const a=r&&r.hostname;if(this._keepAlive&&a){t=this._proxyAgent}if(this._keepAlive&&!a){t=this._agent}if(t){return t}const n=e.protocol==="https:";let i=100;if(this.requestOptions){i=this.requestOptions.maxSockets||l.globalAgent.maxSockets}if(r&&r.hostname){const e={maxSockets:i,keepAlive:this._keepAlive,proxy:Object.assign(Object.assign({},(r.username||r.password)&&{proxyAuth:`${r.username}:${r.password}`}),{host:r.hostname,port:r.port})};let a;const o=r.protocol==="https:";if(n){a=o?c.httpsOverHttps:c.httpsOverHttp}else{a=o?c.httpOverHttps:c.httpOverHttp}t=a(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:i};t=n?new d.Agent(e):new l.Agent(e);this._agent=t}if(!t){t=n?d.globalAgent:l.globalAgent}if(n&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){return o(this,void 0,void 0,(function*(){e=Math.min(k,e);const t=E*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),t)))}))}_processResponse(e,t){return o(this,void 0,void 0,(function*(){return new Promise(((r,a)=>o(this,void 0,void 0,(function*(){const n=e.message.statusCode||0;const i={statusCode:n,result:null,headers:{}};if(n===h.NotFound){r(i)}function dateTimeDeserializer(e,t){if(typeof t==="string"){const e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}let o;let l;try{l=yield e.readBody();if(l&&l.length>0){if(t&&t.deserializeDates){o=JSON.parse(l,dateTimeDeserializer)}else{o=JSON.parse(l)}i.result=o}i.headers=e.message.headers}catch(e){}if(n>299){let e;if(o&&o.message){e=o.message}else if(l&&l.length>0){e=l}else{e=`Failed request: (${n})`}const t=new HttpClientError(e,n);t.result=i.result;a(t)}else{r(i)}}))))}))}}t.HttpClient=HttpClient;const lowercaseKeys=e=>Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})},9835:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.checkBypass=t.getProxyUrl=void 0;function getProxyUrl(e){const t=e.protocol==="https:";if(checkBypass(e)){return undefined}const r=(()=>{if(t){return process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{return process.env["http_proxy"]||process.env["HTTP_PROXY"]}})();if(r){return new URL(r)}else{return undefined}}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}const t=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!t){return false}let r;if(e.port){r=Number(e.port)}else if(e.protocol==="http:"){r=80}else if(e.protocol==="https:"){r=443}const a=[e.hostname.toUpperCase()];if(typeof r==="number"){a.push(`${a[0]}:${r}`)}for(const e of t.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(a.some((t=>t===e))){return true}}return false}t.checkBypass=checkBypass},334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const r=/^v1\./;const a=/^ghs_/;const n=/^ghu_/;async function auth(e){const t=e.split(/\./).length===3;const i=r.test(e)||a.test(e);const o=n.test(e);const l=t?"app":i?"installation":o?"user-to-server":"oauth";return{type:"token",token:e,tokenType:l}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,t,r,a){const n=t.endpoint.merge(r,a);n.headers.authorization=withAuthorizationPrefix(e);return t(n)}const i=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};t.createTokenAuth=i},6762:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var a=r(5030);var n=r(3682);var i=r(6234);var o=r(8467);var l=r(334);function _objectWithoutPropertiesLoose(e,t){if(e==null)return{};var r={};var a=Object.keys(e);var n,i;for(i=0;i<a.length;i++){n=a[i];if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}function _objectWithoutProperties(e,t){if(e==null)return{};var r=_objectWithoutPropertiesLoose(e,t);var a,n;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++){a=i[n];if(t.indexOf(a)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,a))continue;r[a]=e[a]}}return r}const d="3.6.0";const u=["authStrategy"];class Octokit{constructor(e={}){const t=new n.Collection;const r={baseUrl:i.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};r.headers["user-agent"]=[e.userAgent,`octokit-core.js/${d} ${a.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){r.baseUrl=e.baseUrl}if(e.previews){r.mediaType.previews=e.previews}if(e.timeZone){r.headers["time-zone"]=e.timeZone}this.request=i.request.defaults(r);this.graphql=o.withCustomRequest(this.request).defaults(r);this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=t;if(!e.authStrategy){if(!e.auth){this.auth=async()=>({type:"unauthenticated"})}else{const r=l.createTokenAuth(e.auth);t.wrap("request",r.hook);this.auth=r}}else{const{authStrategy:r}=e,a=_objectWithoutProperties(e,u);const n=r(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},e.auth));t.wrap("request",n.hook);this.auth=n}const c=this.constructor;c.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}static defaults(e){const t=class extends(this){constructor(...t){const r=t[0]||{};if(typeof e==="function"){super(e(r));return}super(Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:`${r.userAgent} ${e.userAgent}`}:null))}};return t}static plugin(...e){var t;const r=this.plugins;const a=(t=class extends(this){},t.plugins=r.concat(e.filter((e=>!r.includes(e)))),t);return a}}Octokit.VERSION=d;Octokit.plugins=[];t.Octokit=Octokit},9440:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var a=r(3287);var n=r(5030);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((t,r)=>{t[r.toLowerCase()]=e[r];return t}),{})}function mergeDeep(e,t){const r=Object.assign({},e);Object.keys(t).forEach((n=>{if(a.isPlainObject(t[n])){if(!(n in e))Object.assign(r,{[n]:t[n]});else r[n]=mergeDeep(e[n],t[n])}else{Object.assign(r,{[n]:t[n]})}}));return r}function removeUndefinedProperties(e){for(const t in e){if(e[t]===undefined){delete e[t]}}return e}function merge(e,t,r){if(typeof t==="string"){let[e,a]=t.split(" ");r=Object.assign(a?{method:e,url:a}:{url:e},r)}else{r=Object.assign({},t)}r.headers=lowercaseKeys(r.headers);removeUndefinedProperties(r);removeUndefinedProperties(r.headers);const a=mergeDeep(e||{},r);if(e&&e.mediaType.previews.length){a.mediaType.previews=e.mediaType.previews.filter((e=>!a.mediaType.previews.includes(e))).concat(a.mediaType.previews)}a.mediaType.previews=a.mediaType.previews.map((e=>e.replace(/-preview/,"")));return a}function addQueryParameters(e,t){const r=/\?/.test(e)?"&":"?";const a=Object.keys(t);if(a.length===0){return e}return e+r+a.map((e=>{if(e==="q"){return"q="+t.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(t[e])}`})).join("&")}const i=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(i);if(!t){return[]}return t.map(removeNonChars).reduce(((e,t)=>e.concat(t)),[])}function omit(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,r)=>{t[r]=e[r];return t}),{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,t,r){t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t);if(r){return encodeUnreserved(r)+"="+t}else{return t}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,r,a){var n=e[r],i=[];if(isDefined(n)&&n!==""){if(typeof n==="string"||typeof n==="number"||typeof n==="boolean"){n=n.toString();if(a&&a!=="*"){n=n.substring(0,parseInt(a,10))}i.push(encodeValue(t,n,isKeyOperator(t)?r:""))}else{if(a==="*"){if(Array.isArray(n)){n.filter(isDefined).forEach((function(e){i.push(encodeValue(t,e,isKeyOperator(t)?r:""))}))}else{Object.keys(n).forEach((function(e){if(isDefined(n[e])){i.push(encodeValue(t,n[e],e))}}))}}else{const e=[];if(Array.isArray(n)){n.filter(isDefined).forEach((function(r){e.push(encodeValue(t,r))}))}else{Object.keys(n).forEach((function(r){if(isDefined(n[r])){e.push(encodeUnreserved(r));e.push(encodeValue(t,n[r].toString()))}}))}if(isKeyOperator(t)){i.push(encodeUnreserved(r)+"="+e.join(","))}else if(e.length!==0){i.push(e.join(","))}}}}else{if(t===";"){if(isDefined(n)){i.push(encodeUnreserved(r))}}else if(n===""&&(t==="&"||t==="?")){i.push(encodeUnreserved(r)+"=")}else if(n===""){i.push("")}}return i}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,a,n){if(a){let e="";const n=[];if(r.indexOf(a.charAt(0))!==-1){e=a.charAt(0);a=a.substr(1)}a.split(/,/g).forEach((function(r){var a=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);n.push(getValues(t,e,a[1],a[2]||a[3]))}));if(e&&e!=="+"){var i=",";if(e==="?"){i="&"}else if(e!=="#"){i=e}return(n.length!==0?e:"")+n.join(i)}else{return n.join(",")}}else{return encodeReserved(n)}}))}function parse(e){let t=e.method.toUpperCase();let r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let a=Object.assign({},e.headers);let n;let i=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const o=extractUrlVariableNames(r);r=parseUrl(r).expand(i);if(!/^http/.test(r)){r=e.baseUrl+r}const l=Object.keys(e).filter((e=>o.includes(e))).concat("baseUrl");const d=omit(i,l);const u=/application\/octet-stream/i.test(a.accept);if(!u){if(e.mediaType.format){a.accept=a.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(e.mediaType.previews.length){const t=a.accept.match(/[\w-]+(?=-preview)/g)||[];a.accept=t.concat(e.mediaType.previews).map((t=>{const r=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${r}`})).join(",")}}if(["GET","HEAD"].includes(t)){r=addQueryParameters(r,d)}else{if("data"in d){n=d.data}else{if(Object.keys(d).length){n=d}else{a["content-length"]=0}}}if(!a["content-type"]&&typeof n!=="undefined"){a["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(t)&&typeof n==="undefined"){n=""}return Object.assign({method:t,url:r,headers:a},typeof n!=="undefined"?{body:n}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,r){return parse(merge(e,t,r))}function withDefaults(e,t){const r=merge(e,t);const a=endpointWithDefaults.bind(null,r);return Object.assign(a,{DEFAULTS:r,defaults:withDefaults.bind(null,r),merge:merge.bind(null,r),parse:parse})}const o="6.0.12";const l=`octokit-endpoint.js/${o} ${n.getUserAgent()}`;const d={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":l},mediaType:{format:"",previews:[]}};const u=withDefaults(null,d);t.endpoint=u},8467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var a=r(3758);var n=r(5030);const i="4.8.0";function _buildMessageForResponseErrors(e){return`Request failed due to following response errors:\n`+e.errors.map((e=>` - ${e.message}`)).join("\n")}class GraphqlResponseError extends Error{constructor(e,t,r){super(_buildMessageForResponseErrors(r));this.request=e;this.headers=t;this.response=r;this.name="GraphqlResponseError";this.errors=r.errors;this.data=r.data;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const o=["method","baseUrl","url","headers","request","query","mediaType"];const l=["query","method","url"];const d=/\/api\/v3\/?$/;function graphql(e,t,r){if(r){if(typeof t==="string"&&"query"in r){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}for(const e in r){if(!l.includes(e))continue;return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}}const a=typeof t==="string"?Object.assign({query:t},r):t;const n=Object.keys(a).reduce(((e,t)=>{if(o.includes(t)){e[t]=a[t];return e}if(!e.variables){e.variables={}}e.variables[t]=a[t];return e}),{});const i=a.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(d.test(i)){n.url=i.replace(d,"/api/graphql")}return e(n).then((e=>{if(e.data.errors){const t={};for(const r of Object.keys(e.headers)){t[r]=e.headers[r]}throw new GraphqlResponseError(n,t,e.data)}return e.data.data}))}function withDefaults(e,t){const r=e.defaults(t);const newApi=(e,t)=>graphql(r,e,t);return Object.assign(newApi,{defaults:withDefaults.bind(null,r),endpoint:a.request.endpoint})}const u=withDefaults(a.request,{headers:{"user-agent":`octokit-graphql.js/${i} ${n.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}t.GraphqlResponseError=GraphqlResponseError;t.graphql=u;t.withCustomRequest=withCustomRequest},3758:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=r(9440);var n=r(5030);var i=r(3287);var o=_interopDefault(r(5655));var l=r(537);const d="5.6.1";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){const t=e.request&&e.request.log?e.request.log:console;if(i.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let r={};let a;let n;const d=e.request&&e.request.fetch||o;return d(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async i=>{n=i.url;a=i.status;for(const e of i.headers){r[e[0]]=e[1]}if("deprecation"in r){const a=r.link&&r.link.match(/<([^>]+)>; rel="deprecation"/);const n=a&&a.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${r.sunset}${n?`. See ${n}`:""}`)}if(a===204||a===205){return}if(e.method==="HEAD"){if(a<400){return}throw new l.RequestError(i.statusText,a,{response:{url:n,status:a,headers:r,data:undefined},request:e})}if(a===304){throw new l.RequestError("Not modified",a,{response:{url:n,status:a,headers:r,data:await getResponseData(i)},request:e})}if(a>=400){const t=await getResponseData(i);const o=new l.RequestError(toErrorMessage(t),a,{response:{url:n,status:a,headers:r,data:t},request:e});throw o}return getResponseData(i)})).then((e=>({status:a,url:n,headers:r,data:e}))).catch((t=>{if(t instanceof l.RequestError)throw t;throw new l.RequestError(t.message,500,{request:e})}))}async function getResponseData(e){const t=e.headers.get("content-type");if(/application\/json/.test(t)){return e.json()}if(!t||/^text\/|charset=utf-8$/.test(t)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`}return e.message}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,t){const r=e.defaults(t);const newApi=function(e,t){const a=r.merge(e,t);if(!a.request||!a.request.hook){return fetchWrapper(r.parse(a))}const request=(e,t)=>fetchWrapper(r.parse(r.merge(e,t)));Object.assign(request,{endpoint:r,defaults:withDefaults.bind(null,r)});return a.request.hook(request,a)};return Object.assign(newApi,{endpoint:r,defaults:withDefaults.bind(null,r)})}const u=withDefaults(a.endpoint,{headers:{"user-agent":`octokit-request.js/${d} ${n.getUserAgent()}`}});t.request=u},5655:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=_interopDefault(r(2781));var n=_interopDefault(r(3685));var i=_interopDefault(r(7310));var o=r(8665);var l=_interopDefault(r(5687));var d=_interopDefault(r(9796));const u=a.Readable;const c=Symbol("buffer");const h=Symbol("type");class Blob{constructor(){this[h]="";const e=arguments[0];const t=arguments[1];const r=[];let a=0;if(e){const t=e;const n=Number(t.length);for(let e=0;e<n;e++){const n=t[e];let i;if(n instanceof Buffer){i=n}else if(ArrayBuffer.isView(n)){i=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){i=Buffer.from(n)}else if(n instanceof Blob){i=n[c]}else{i=Buffer.from(typeof n==="string"?n:String(n))}a+=i.length;r.push(i)}}this[c]=Buffer.concat(r);let n=t&&t.type!==undefined&&String(t.type).toLowerCase();if(n&&!/[^\u0020-\u007E]/.test(n)){this[h]=n}}get size(){return this[c].length}get type(){return this[h]}text(){return Promise.resolve(this[c].toString())}arrayBuffer(){const e=this[c];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new u;e._read=function(){};e.push(this[c]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const r=arguments[1];let a,n;if(t===undefined){a=0}else if(t<0){a=Math.max(e+t,0)}else{a=Math.min(t,e)}if(r===undefined){n=e}else if(r<0){n=Math.max(e+r,0)}else{n=Math.min(r,e)}const i=Math.max(n-a,0);const o=this[c];const l=o.slice(a,a+i);const d=new Blob([],{type:arguments[2]});d[c]=l;return d}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,r){Error.call(this,e);this.message=e;this.type=t;if(r){this.code=this.errno=r.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let g;try{g=r(2877).convert}catch(e){}const v=Symbol("Body internals");const w=a.PassThrough;function Body(e){var t=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=r.size;let i=n===undefined?0:n;var o=r.timeout;let l=o===undefined?0:o;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof a);else{e=Buffer.from(String(e))}this[v]={body:e,disturbed:false,error:null};this.size=i;this.timeout=l;if(e instanceof a){e.on("error",(function(e){const r=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[v].error=r}))}}Body.prototype={get body(){return this[v].body},get bodyUsed(){return this[v].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[c]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,r)}}};function consumeBody(){var e=this;if(this[v].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[v].disturbed=true;if(this[v].error){return Body.Promise.reject(this[v].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof a)){return Body.Promise.resolve(Buffer.alloc(0))}let r=[];let n=0;let i=false;return new Body.Promise((function(a,o){let l;if(e.timeout){l=setTimeout((function(){i=true;o(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){i=true;o(t)}else{o(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(i||t===null){return}if(e.size&&n+t.length>e.size){i=true;o(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=t.length;r.push(t)}));t.on("end",(function(){if(i){return}clearTimeout(l);try{a(Buffer.concat(r,n))}catch(t){o(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof g!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const r=t.get("content-type");let a="utf-8";let n,i;if(r){n=/charset=([^;]*)/i.exec(r)}i=e.slice(0,1024).toString();if(!n&&i){n=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)}if(!n&&i){n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i);if(!n){n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&i){n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)}if(n){a=n.pop();if(a==="gb2312"||a==="gbk"){a="gb18030"}}return g(e,"UTF-8",a).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,r;let n=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof a&&typeof n.getBoundary!=="function"){t=new w;r=new w;n.pipe(t);n.pipe(r);e[v].body=t;n=r}return n}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof a){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const r=t.body;if(r===null){e.end()}else if(isBlob(r)){r.stream().pipe(e)}else if(Buffer.isBuffer(r)){e.write(r);e.end()}else{r.pipe(e)}}Body.Promise=global.Promise;const b=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const y=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(b.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(y.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const r in e){if(r.toLowerCase()===t){return r}}return undefined}const k=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[k]=Object.create(null);if(e instanceof Headers){const t=e.raw();const r=Object.keys(t);for(const e of r){for(const r of t[e]){this.append(e,r)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const r=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}r.push(Array.from(t))}for(const e of r){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const r=e[t];this.append(t,r)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[k],e);if(t===undefined){return null}return this[k][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let r=getHeaders(this);let a=0;while(a<r.length){var n=r[a];const i=n[0],o=n[1];e.call(t,o,i,this);r=getHeaders(this);a++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[k],e);this[k][r!==undefined?r:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[k],e);if(r!==undefined){this[k][r].push(t)}else{this[k][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[k],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[k],e);if(t!==undefined){delete this[k][t]}}raw(){return this[k]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const r=Object.keys(e[k]).sort();return r.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[k][t].join(", ")}:function(t){return[t.toLowerCase(),e[k][t].join(", ")]})}const E=Symbol("internal");function createHeadersIterator(e,t){const r=Object.create(D);r[E]={target:e,kind:t,index:0};return r}const D=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==D){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[E];const t=e.target,r=e.kind,a=e.index;const n=getHeaders(t,r);const i=n.length;if(a>=i){return{value:undefined,done:true}}this[E].index=a+1;return{value:n[a],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(D,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[k]);const r=find(e[k],"Host");if(r!==undefined){t[r]=t[r][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const r of Object.keys(e)){if(b.test(r)){continue}if(Array.isArray(e[r])){for(const a of e[r]){if(y.test(a)){continue}if(t[k][r]===undefined){t[k][r]=[a]}else{t[k][r].push(a)}}}else if(!y.test(e[r])){t[k][r]=[e[r]]}}return t}const _=Symbol("Response internals");const A=n.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const r=t.status||200;const a=new Headers(t.headers);if(e!=null&&!a.has("Content-Type")){const t=extractContentType(e);if(t){a.append("Content-Type",t)}}this[_]={url:t.url,status:r,statusText:t.statusText||A[r],headers:a,counter:t.counter}}get url(){return this[_].url||""}get status(){return this[_].status}get ok(){return this[_].status>=200&&this[_].status<300}get redirected(){return this[_].counter>0}get statusText(){return this[_].statusText}get headers(){return this[_].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const S=Symbol("Request internals");const x=i.parse;const C=i.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){const t=new o.URL(e);return{path:t.pathname,pathname:t.pathname,hostname:t.hostname,protocol:t.protocol,port:t.port,hash:t.hash,search:t.search,query:t.query,href:t.href}}return x(e)}const T="destroy"in a.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[S]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let r;if(!isRequest(e)){if(e&&e.href){r=parseURL(e.href)}else{r=parseURL(`${e}`)}e={}}else{r=parseURL(e.url)}let a=t.method||e.method||"GET";a=a.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(a==="GET"||a==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,n,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new Headers(t.headers||e.headers||{});if(n!=null&&!i.has("Content-Type")){const e=extractContentType(n);if(e){i.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in t)o=t.signal;if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[S]={method:a,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:r,signal:o};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[S].method}get url(){return C(this[S].parsedURL)}get headers(){return this[S].headers}get redirect(){return this[S].redirect}get signal(){return this[S].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[S].parsedURL;const r=new Headers(e[S].headers);if(!r.has("Accept")){r.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof a.Readable&&!T){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){n="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){n=String(t)}}if(n){r.set("Content-Length",n)}if(!r.has("User-Agent")){r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!r.has("Accept-Encoding")){r.set("Accept-Encoding","gzip,deflate")}let i=e.agent;if(typeof i==="function"){i=i(t)}if(!r.has("Connection")&&!i){r.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:i})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const F=a.PassThrough;const O=i.resolve;function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(r,i){const o=new Request(e,t);const u=getNodeRequestOptions(o);const c=(u.protocol==="https:"?l:n).request;const h=o.signal;let g=null;const v=function abort(){let e=new AbortError("The user aborted a request.");i(e);if(o.body&&o.body instanceof a.Readable){o.body.destroy(e)}if(!g||!g.body)return;g.body.emit("error",e)};if(h&&h.aborted){v();return}const w=function abortAndFinalize(){v();finalize()};const b=c(u);let y;if(h){h.addEventListener("abort",w)}function finalize(){b.abort();if(h)h.removeEventListener("abort",w);clearTimeout(y)}if(o.timeout){b.once("socket",(function(e){y=setTimeout((function(){i(new FetchError(`network timeout at: ${o.url}`,"request-timeout"));finalize()}),o.timeout)}))}b.on("error",(function(e){i(new FetchError(`request to ${o.url} failed, reason: ${e.message}`,"system",e));finalize()}));b.on("response",(function(e){clearTimeout(y);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const a=t.get("Location");const n=a===null?null:O(o.url,a);switch(o.redirect){case"error":i(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{t.set("Location",n)}catch(e){i(e)}}break;case"follow":if(n===null){break}if(o.counter>=o.follow){i(new FetchError(`maximum redirect reached at: ${o.url}`,"max-redirect"));finalize();return}const a={headers:new Headers(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(e.statusCode!==303&&o.body&&getTotalBytes(o)===null){i(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&o.method==="POST"){a.method="GET";a.body=undefined;a.headers.delete("content-length")}r(fetch(new Request(n,a)));finalize();return}}e.once("end",(function(){if(h)h.removeEventListener("abort",w)}));let a=e.pipe(new F);const n={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:o.size,timeout:o.timeout,counter:o.counter};const l=t.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||l===null||e.statusCode===204||e.statusCode===304){g=new Response(a,n);r(g);return}const u={flush:d.Z_SYNC_FLUSH,finishFlush:d.Z_SYNC_FLUSH};if(l=="gzip"||l=="x-gzip"){a=a.pipe(d.createGunzip(u));g=new Response(a,n);r(g);return}if(l=="deflate"||l=="x-deflate"){const t=e.pipe(new F);t.once("data",(function(e){if((e[0]&15)===8){a=a.pipe(d.createInflate())}else{a=a.pipe(d.createInflateRaw())}g=new Response(a,n);r(g)}));return}if(l=="br"&&typeof d.createBrotliDecompress==="function"){a=a.pipe(d.createBrotliDecompress());g=new Response(a,n);r(g);return}g=new Response(a,n);r(g)}));writeToStream(b,o)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},4193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const r="2.21.3";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function normalizePaginatedListResponse(e){if(!e.data){return _objectSpread2(_objectSpread2({},e),{},{data:[]})}const t="total_count"in e.data&&!("url"in e.data);if(!t)return e;const r=e.data.incomplete_results;const a=e.data.repository_selection;const n=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const i=Object.keys(e.data)[0];const o=e.data[i];e.data=o;if(typeof r!=="undefined"){e.data.incomplete_results=r}if(typeof a!=="undefined"){e.data.repository_selection=a}e.data.total_count=n;return e}function iterator(e,t,r){const a=typeof t==="function"?t.endpoint(r):e.request.endpoint(t,r);const n=typeof t==="function"?t:e.request;const i=a.method;const o=a.headers;let l=a.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!l)return{done:true};try{const e=await n({method:i,url:l,headers:o});const t=normalizePaginatedListResponse(e);l=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:t}}catch(e){if(e.status!==409)throw e;l="";return{value:{status:200,headers:{},data:[]}}}}})}}function paginate(e,t,r,a){if(typeof r==="function"){a=r;r=undefined}return gather(e,[],iterator(e,t,r)[Symbol.asyncIterator](),a)}function gather(e,t,r,a){return r.next().then((n=>{if(n.done){return t}let i=false;function done(){i=true}t=t.concat(a?a(n.value,done):n.value.data);if(i){return t}return gather(e,t,r,a)}))}const a=Object.assign(paginate,{iterator:iterator});const n=["GET /app/hook/deliveries","GET /app/installations","GET /applications/grants","GET /authorizations","GET /enterprises/{enterprise}/actions/permissions/organizations","GET /enterprises/{enterprise}/actions/runner-groups","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners","GET /enterprises/{enterprise}/actions/runners","GET /enterprises/{enterprise}/audit-log","GET /enterprises/{enterprise}/secret-scanning/alerts","GET /enterprises/{enterprise}/settings/billing/advanced-security","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /licenses","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/cache/usage-by-repository","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/audit-log","GET /orgs/{org}/blocks","GET /orgs/{org}/code-scanning/alerts","GET /orgs/{org}/codespaces","GET /orgs/{org}/credential-authorizations","GET /orgs/{org}/dependabot/secrets","GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories","GET /orgs/{org}/events","GET /orgs/{org}/external-groups","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/packages/{package_type}/{package_name}/versions","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/settings/billing/advanced-security","GET /orgs/{org}/team-sync/groups","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/caches","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/codespaces","GET /repos/{owner}/{repo}/codespaces/devcontainers","GET /repos/{owner}/{repo}/codespaces/secrets","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/status","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/dependabot/secrets","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/environments","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/git/matching-refs/{ref}","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/releases/{release_id}/reactions","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repos/{owner}/{repo}/topics","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/codespaces","GET /user/codespaces/secrets","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/packages/{package_type}/{package_name}/versions","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/packages","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function isPaginatingEndpoint(e){if(typeof e==="string"){return n.includes(e)}else{return false}}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=r;t.composePaginateRest=a;t.isPaginatingEndpoint=isPaginatingEndpoint;t.paginateRest=paginateRest;t.paginatingEndpoints=n},3044:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);if(t){a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}r.push.apply(r,a)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}const r={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForEnterprise:["GET /enterprises/{enterprise}/actions/cache/usage"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsDefaultWorkflowPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubAdvancedSecurityBillingGhe:["GET /enterprises/{enterprise}/settings/billing/advanced-security"],getGithubAdvancedSecurityBillingOrg:["GET /orgs/{org}/settings/billing/advanced-security"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{addCustomLabelsToSelfHostedRunnerForEnterprise:["POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],getServerStatistics:["GET /enterprise-installation/{enterprise_or_org}/server-statistics"],listLabelsForSelfHostedRunnerForEnterprise:["GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],removeAllCustomLabelsFromSelfHostedRunnerForEnterprise:["DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForEnterprise:["DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForEnterprise:["PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomRoles:["GET /organizations/{organization_id}/custom_roles"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableLfsForRepo:["DELETE /repos/{owner}/{repo}/lfs"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enableLfsForRepo:["PUT /repos/{owner}/{repo}/lfs"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const a="5.16.2";function endpointsToMethods(e,t){const r={};for(const[a,n]of Object.entries(t)){for(const[t,i]of Object.entries(n)){const[n,o,l]=i;const[d,u]=n.split(/ /);const c=Object.assign({method:d,url:u},o);if(!r[a]){r[a]={}}const h=r[a];if(l){h[t]=decorate(e,a,t,c,l);continue}h[t]=e.request.defaults(c)}}return r}function decorate(e,t,r,a,n){const i=e.request.defaults(a);function withDecorations(...a){let o=i.endpoint.merge(...a);if(n.mapToData){o=Object.assign({},o,{data:o[n.mapToData],[n.mapToData]:undefined});return i(o)}if(n.renamed){const[a,i]=n.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${a}.${i}()`)}if(n.deprecated){e.log.warn(n.deprecated)}if(n.renamedParameters){const o=i.endpoint.merge(...a);for(const[a,i]of Object.entries(n.renamedParameters)){if(a in o){e.log.warn(`"${a}" parameter is deprecated for "octokit.${t}.${r}()". Use "${i}" instead`);if(!(i in o)){o[i]=o[a]}delete o[a]}}return i(o)}return i(...a)}return Object.assign(withDecorations,i)}function restEndpointMethods(e){const t=endpointsToMethods(e,r);return{rest:t}}restEndpointMethods.VERSION=a;function legacyRestEndpointMethods(e){const t=endpointsToMethods(e,r);return _objectSpread2(_objectSpread2({},t),{},{rest:t})}legacyRestEndpointMethods.VERSION=a;t.legacyRestEndpointMethods=legacyRestEndpointMethods;t.restEndpointMethods=restEndpointMethods},537:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=r(8932);var n=_interopDefault(r(1223));const i=n((e=>console.warn(e)));const o=n((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,r){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=t;let n;if("headers"in r&&typeof r.headers!=="undefined"){n=r.headers}if("response"in r){this.response=r.response;n=r.response.headers}const l=Object.assign({},r.request);if(r.request.headers.authorization){l.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}l.url=l.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=l;Object.defineProperty(this,"code",{get(){i(new a.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return t}});Object.defineProperty(this,"headers",{get(){o(new a.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));return n||{}}})}}t.RequestError=RequestError},6234:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=r(9440);var n=r(5030);var i=r(3287);var o=_interopDefault(r(467));var l=r(537);const d="5.6.3";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){const t=e.request&&e.request.log?e.request.log:console;if(i.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let r={};let a;let n;const d=e.request&&e.request.fetch||o;return d(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async i=>{n=i.url;a=i.status;for(const e of i.headers){r[e[0]]=e[1]}if("deprecation"in r){const a=r.link&&r.link.match(/<([^>]+)>; rel="deprecation"/);const n=a&&a.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${r.sunset}${n?`. See ${n}`:""}`)}if(a===204||a===205){return}if(e.method==="HEAD"){if(a<400){return}throw new l.RequestError(i.statusText,a,{response:{url:n,status:a,headers:r,data:undefined},request:e})}if(a===304){throw new l.RequestError("Not modified",a,{response:{url:n,status:a,headers:r,data:await getResponseData(i)},request:e})}if(a>=400){const t=await getResponseData(i);const o=new l.RequestError(toErrorMessage(t),a,{response:{url:n,status:a,headers:r,data:t},request:e});throw o}return getResponseData(i)})).then((e=>({status:a,url:n,headers:r,data:e}))).catch((t=>{if(t instanceof l.RequestError)throw t;throw new l.RequestError(t.message,500,{request:e})}))}async function getResponseData(e){const t=e.headers.get("content-type");if(/application\/json/.test(t)){return e.json()}if(!t||/^text\/|charset=utf-8$/.test(t)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`}return e.message}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,t){const r=e.defaults(t);const newApi=function(e,t){const a=r.merge(e,t);if(!a.request||!a.request.hook){return fetchWrapper(r.parse(a))}const request=(e,t)=>fetchWrapper(r.parse(r.merge(e,t)));Object.assign(request,{endpoint:r,defaults:withDefaults.bind(null,r)});return a.request.hook(request,a)};return Object.assign(newApi,{endpoint:r,defaults:withDefaults.bind(null,r)})}const u=withDefaults(a.endpoint,{headers:{"user-agent":`octokit-request.js/${d} ${n.getUserAgent()}`}});t.request=u},9268:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.parseInputs=t.getObjectInput=void 0;var o=i(r(2186));var l=i(r(6374));var d=r(5821);function getBooleanInput(e,t){var r=t.type;var a=(0,d.getNames)(e);var n=[];for(var i=0;i<a.length;i++){var u=a[i];if(r==="boolean"){try{var c=o.getBooleanInput(u,t);if(typeof c==="boolean"){return c}}catch(e){n.push(e)}}else{try{var h=o.getInput(u,t);if(h){return l.booleanArray(h)}}catch(t){n.push(new TypeError('Input does not meet YAML 1.2 "Core Schema" specification: '.concat(e,"\n")+"Support boolean input list: `true | True | TRUE | false | False | FALSE`"))}}}if(t.defaultValue!=null){return t.defaultValue}if(n.length){throw n[0]}}function getMultilineInput(e,t){var r=(0,d.getNames)(e);var a=[];for(var n=0;n<r.length;n++){var i=r[n];try{var l=o.getInput(i,t);if(l){return o.getMultilineInput(i,t)}}catch(e){a.push(e)}}if(t.defaultValue!=null){return t.defaultValue}if(a.length){throw a[0]}}function getInput(e,t){var r=t.type;if(r==="boolean"||r==="booleanArray"){return getBooleanInput(e,t)}if(r==="stringArray"){return getMultilineInput(e,t)}var a=(0,d.getNames)(e);var n=[];var i=t.type;for(var u=0;u<a.length;u++){try{var c=a[u];var h=o.getInput(c,t);if(h){return l[i](h)}}catch(e){n.push(e)}}if(t.defaultValue!=null){return t.defaultValue}if(n.length){throw n[0]}}function getObjectInput(e,t){var r=[];var a=(0,d.getNames)(e);for(var n=0;n<a.length;n++){var i=a[n];try{var u=o.getInput(i,t);if(u){return l.json(u)}}catch(e){r.push(e)}}if(r.length){throw r[0]}}t.getObjectInput=getObjectInput;function parseInputs(e){return Object.keys(e).reduce((function(t,r){var a=e[r];t[r]=getInput(r,a);return t}),{})}t.parseInputs=parseInputs;t["default"]=parseInputs},6374:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.object=t.json=t.yaml=t.booleanArray=t.floatArray=t.intArray=t.words=t.booleanOrString=t.boolean=t.float=t.int=t.string=void 0;var n=a(r(1917));var i=a(r(4623));var o=a(r(4482));function string(e){return e}t.string=string;function int(e){return parseInt(e,10)}t.int=int;function float(e){return parseFloat(e)}t.float=float;function boolean(e){var t=["true","True","TRUE"];var r=["false","False","FALSE"];if(t.includes(e))return true;if(r.includes(e))return false;throw new Error}t.boolean=boolean;function booleanOrString(e){try{return boolean(e)}catch(t){return e}}t.booleanOrString=booleanOrString;function words(e){return e.replace(/[\n\r\s\t]+/g,",").split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0}))}t.words=words;function intArray(e){return words(e).map(int)}t.intArray=intArray;function floatArray(e){return words(e).map(float)}t.floatArray=floatArray;function booleanArray(e){return words(e).map(boolean)}t.booleanArray=booleanArray;function yaml(e){return n.default.load(e)}t.yaml=yaml;function json(e){return(0,i.default)((0,o.default)(e))}t.json=json;function object(e){var t=e.trim();if(t.startsWith("{")||t.startsWith("[")){return json(e)}return yaml(e)}t.object=object},5821:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.getNames=void 0;var n=a(r(8216));var i=a(r(7994));var o=a(r(9449));var l=a(r(6645));function getNames(e){var t=[e,(0,i.default)(e),(0,o.default)(e),(0,l.default)(e)];var r=(0,n.default)(t);return r}t.getNames=getNames},9047:(e,t,r)=>{const a=["absolutel","accidentall","additionall","allegedl","alternativel","angril","anxiousl","approximatel","awkwardl","badl","barel","beautifull","blindl","boldl","bravel","brightl","briskl","bristl","bubbl","busil","calml","carefull","carelessl","cautiousl","cheerfull","clearl","closel","coldl","completel","consequentl","correctl","courageousl","crinkl","cruell","crumbl","cuddl","currentl","daringl","deadl","definitel","deliberatel","doubtfull","dumbl","eagerl","earl","easil","elegantl","enormousl","enthusiasticall","equall","especiall","eventuall","exactl","exceedingl","exclusivel","extremel","fairl","faithfull","fatall","fiercel","finall","fondl","foolishl","fortunatel","frankl","franticall","generousl","gentl","giggl","gladl","gracefull","greedil","happil","hardl","hastil","healthil","heartil","helpfull","honestl","hourl","hungril","hurriedl","immediatel","impatientl","inadequatel","ingeniousl","innocentl","inquisitivel","interestingl","irritabl","jiggl","joyousl","justl","kindl","largel","latel","lazil","likel","literall","lonel","loosel","loudl","loudl","luckil","madl","man","mentall","mildl","mortall","mostl","mysteriousl","neatl","nervousl","noisil","normall","obedientl","occasionall","onl","openl","painfull","particularl","patientl","perfectl","politel","poorl","powerfull","presumabl","previousl","promptl","punctuall","quarterl","quickl","quietl","rapidl","rarel","reall","recentl","recklessl","regularl","relativel","reluctantl","remarkabl","repeatedl","rightfull","roughl","rudel","sadl","safel","selfishl","sensibl","seriousl","sharpl","shortl","shyl","significantl","silentl","simpl","sleepil","slowl","smartl","smell","smoothl","softl","solemnl","sparkl","speedil","stealthil","sternl","stupidl","substantiall","successfull","suddenl","surprisingl","suspiciousl","swiftl","tenderl","tensel","thoughtfull","tightl","timel","truthfull","unexpectedl","unfortunatel","usuall","ver","victoriousl","violentl","vivaciousl","warml","waverl","weakl","wearil","wildl","wisel","worldl","wrinkl"];const n=["just","maybe","stuff","things"];const i=new RegExp(`${"\\b("+"("}${a.join("|")})(y)`+`|(${n.join("|")}))\\b`,"gi");const o=r(4645);e.exports=function matchAdverbs(e){return o(i,e)}},4645:e=>{function matcher(e,t){const r=[];let a=e.exec(t);while(a){r.push({index:a.index,offset:a[0].length});a=e.exec(t)}return r}e.exports=matcher},2068:(e,t,r)=>{"use strict";e=r.nmd(e);const a=r(6931);const wrapAnsi16=(e,t)=>function(){const r=e.apply(a,arguments);return`[${r+t}m`};const wrapAnsi256=(e,t)=>function(){const r=e.apply(a,arguments);return`[${38+t};5;${r}m`};const wrapAnsi16m=(e,t)=>function(){const r=e.apply(a,arguments);return`[${38+t};2;${r[0]};${r[1]};${r[2]}m`};function assembleStyles(){const e=new Map;const t={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};t.color.grey=t.color.gray;for(const r of Object.keys(t)){const a=t[r];for(const r of Object.keys(a)){const n=a[r];t[r]={open:`[${n[0]}m`,close:`[${n[1]}m`};a[r]=t[r];e.set(n[0],n[1])}Object.defineProperty(t,r,{value:a,enumerable:false});Object.defineProperty(t,"codes",{value:e,enumerable:false})}const ansi2ansi=e=>e;const rgb2rgb=(e,t,r)=>[e,t,r];t.color.close="[39m";t.bgColor.close="[49m";t.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};t.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};t.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};t.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};t.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};t.bgColor.ansi16m={rgb:wrapAnsi16m(rgb2rgb,10)};for(let e of Object.keys(a)){if(typeof a[e]!=="object"){continue}const r=a[e];if(e==="ansi16"){e="ansi"}if("ansi16"in r){t.color.ansi[e]=wrapAnsi16(r.ansi16,0);t.bgColor.ansi[e]=wrapAnsi16(r.ansi16,10)}if("ansi256"in r){t.color.ansi256[e]=wrapAnsi256(r.ansi256,0);t.bgColor.ansi256[e]=wrapAnsi256(r.ansi256,10)}if("rgb"in r){t.color.ansi16m[e]=wrapAnsi16m(r.rgb,0);t.bgColor.ansi16m[e]=wrapAnsi16m(r.rgb,10)}}return t}Object.defineProperty(e,"exports",{enumerable:true,get:assembleStyles})},5768:(e,t,r)=>{e.exports=r(6196)().Promise},4549:e=>{"use strict";var t="@@any-promise/REGISTRATION",r=null;e.exports=function(e,a){return function register(n,i){n=n||null;i=i||{};var o=i.global!==false;if(r===null&&o){r=e[t]||null}if(r!==null&&n!==null&&r.implementation!==n){throw new Error('any-promise already defined as "'+r.implementation+'".  You can only register an implementation before the first '+' call to require("any-promise") and an implementation cannot be changed')}if(r===null){if(n!==null&&typeof i.Promise!=="undefined"){r={Promise:i.Promise,implementation:n}}else{r=a(n)}if(o){e[t]=r}}return r}}},6196:(e,t,r)=>{"use strict";e.exports=r(4549)(global,loadImplementation);function loadImplementation(e){var t=null;if(shouldPreferGlobalPromise(e)){t={Promise:global.Promise,implementation:"global.Promise"}}else if(e){var r=require(e);t={Promise:r.Promise||r,implementation:e}}else{t=tryAutoDetect()}if(t===null){throw new Error("Cannot find any-promise implementation nor"+" global.Promise. You must install polyfill or call"+' require("any-promise/register") with your preferred'+' implementation, e.g. require("any-promise/register/bluebird")'+' on application load prior to any require("any-promise").')}return t}function shouldPreferGlobalPromise(e){if(e){return e==="global.Promise"}else if(typeof global.Promise!=="undefined"){var t=/v(\d+)\.(\d+)\.(\d+)/.exec(process.version);return!(t&&+t[1]==0&&+t[2]<12)}return false}function tryAutoDetect(){var e=["es6-promise","promise","native-promise-only","bluebird","rsvp","when","q","pinkie","lie","vow"];var t=0,r=e.length;for(;t<r;t++){try{return loadImplementation(e[t])}catch(e){}}return null}},7122:e=>{"use strict";e.exports=iterate;var t={}.hasOwnProperty;function iterate(e,r,a){var n=-1;var i;if(!e){throw new Error("Iterate requires that |this| not be "+e)}if(!t.call(e,"length")){throw new Error("Iterate requires that |this| has a `length`")}if(typeof r!=="function"){throw new Error("`callback` must be a function")}while(++n<e.length){if(!(n in e)){continue}i=r.call(a,e[n],n,e);if(typeof i==="number"){if(i<0){n=0}n=i-1}}}},7888:function(e,t,r){e=r.nmd(e);(function(e,r){true?r(t):0})(this,(function(t){"use strict";function slice(e,t){t=t|0;var r=Math.max(e.length-t,0);var a=Array(r);for(var n=0;n<r;n++){a[n]=e[t+n]}return a}var apply=function(e){var t=slice(arguments,1);return function(){var r=slice(arguments);return e.apply(null,t.concat(r))}};var initialParams=function(e){return function(){var t=slice(arguments);var r=t.pop();e.call(this,t,r)}};function isObject(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}var r=typeof setImmediate==="function"&&setImmediate;var a=typeof process==="object"&&typeof process.nextTick==="function";function fallback(e){setTimeout(e,0)}function wrap(e){return function(t){var r=slice(arguments,1);e((function(){t.apply(null,r)}))}}var n;if(r){n=setImmediate}else if(a){n=process.nextTick}else{n=fallback}var i=wrap(n);function asyncify(e){return initialParams((function(t,r){var a;try{a=e.apply(this,t)}catch(e){return r(e)}if(isObject(a)&&typeof a.then==="function"){a.then((function(e){invokeCallback(r,null,e)}),(function(e){invokeCallback(r,e.message?e:new Error(e))}))}else{r(null,a)}}))}function invokeCallback(e,t,r){try{e(t,r)}catch(e){i(rethrow,e)}}function rethrow(e){throw e}var o=typeof Symbol==="function";function isAsync(e){return o&&e[Symbol.toStringTag]==="AsyncFunction"}function wrapAsync(e){return isAsync(e)?asyncify(e):e}function applyEach$1(e){return function(t){var r=slice(arguments,1);var a=initialParams((function(r,a){var n=this;return e(t,(function(e,t){wrapAsync(e).apply(n,r.concat(t))}),a)}));if(r.length){return a.apply(this,r)}else{return a}}}var l=typeof global=="object"&&global&&global.Object===Object&&global;var d=typeof self=="object"&&self&&self.Object===Object&&self;var u=l||d||Function("return this")();var c=u.Symbol;var h=Object.prototype;var g=h.hasOwnProperty;var v=h.toString;var w=c?c.toStringTag:undefined;function getRawTag(e){var t=g.call(e,w),r=e[w];try{e[w]=undefined;var a=true}catch(e){}var n=v.call(e);if(a){if(t){e[w]=r}else{delete e[w]}}return n}var b=Object.prototype;var y=b.toString;function objectToString(e){return y.call(e)}var k="[object Null]";var E="[object Undefined]";var D=c?c.toStringTag:undefined;function baseGetTag(e){if(e==null){return e===undefined?E:k}return D&&D in Object(e)?getRawTag(e):objectToString(e)}var _="[object AsyncFunction]";var A="[object Function]";var S="[object GeneratorFunction]";var x="[object Proxy]";function isFunction(e){if(!isObject(e)){return false}var t=baseGetTag(e);return t==A||t==S||t==_||t==x}var C=9007199254740991;function isLength(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=C}function isArrayLike(e){return e!=null&&isLength(e.length)&&!isFunction(e)}var T={};function noop(){}function once(e){return function(){if(e===null)return;var t=e;e=null;t.apply(this,arguments)}}var F=typeof Symbol==="function"&&Symbol.iterator;var getIterator=function(e){return F&&e[F]&&e[F]()};function baseTimes(e,t){var r=-1,a=Array(e);while(++r<e){a[r]=t(r)}return a}function isObjectLike(e){return e!=null&&typeof e=="object"}var O="[object Arguments]";function baseIsArguments(e){return isObjectLike(e)&&baseGetTag(e)==O}var P=Object.prototype;var L=P.hasOwnProperty;var R=P.propertyIsEnumerable;var B=baseIsArguments(function(){return arguments}())?baseIsArguments:function(e){return isObjectLike(e)&&L.call(e,"callee")&&!R.call(e,"callee")};var N=Array.isArray;function stubFalse(){return false}var j=typeof t=="object"&&t&&!t.nodeType&&t;var I=j&&"object"=="object"&&e&&!e.nodeType&&e;var q=I&&I.exports===j;var U=q?u.Buffer:undefined;var G=U?U.isBuffer:undefined;var V=G||stubFalse;var z=9007199254740991;var M=/^(?:0|[1-9]\d*)$/;function isIndex(e,t){var r=typeof e;t=t==null?z:t;return!!t&&(r=="number"||r!="symbol"&&M.test(e))&&(e>-1&&e%1==0&&e<t)}var H="[object Arguments]";var $="[object Array]";var W="[object Boolean]";var Y="[object Date]";var K="[object Error]";var J="[object Function]";var Z="[object Map]";var Q="[object Number]";var X="[object Object]";var ee="[object RegExp]";var te="[object Set]";var re="[object String]";var ae="[object WeakMap]";var ne="[object ArrayBuffer]";var ie="[object DataView]";var oe="[object Float32Array]";var se="[object Float64Array]";var pe="[object Int8Array]";var le="[object Int16Array]";var de="[object Int32Array]";var ue="[object Uint8Array]";var ce="[object Uint8ClampedArray]";var me="[object Uint16Array]";var fe="[object Uint32Array]";var he={};he[oe]=he[se]=he[pe]=he[le]=he[de]=he[ue]=he[ce]=he[me]=he[fe]=true;he[H]=he[$]=he[ne]=he[W]=he[ie]=he[Y]=he[K]=he[J]=he[Z]=he[Q]=he[X]=he[ee]=he[te]=he[re]=he[ae]=false;function baseIsTypedArray(e){return isObjectLike(e)&&isLength(e.length)&&!!he[baseGetTag(e)]}function baseUnary(e){return function(t){return e(t)}}var ge=typeof t=="object"&&t&&!t.nodeType&&t;var ve=ge&&"object"=="object"&&e&&!e.nodeType&&e;var we=ve&&ve.exports===ge;var be=we&&l.process;var ye=function(){try{var e=ve&&ve.require&&ve.require("util").types;if(e){return e}return be&&be.binding&&be.binding("util")}catch(e){}}();var ke=ye&&ye.isTypedArray;var Ee=ke?baseUnary(ke):baseIsTypedArray;var De=Object.prototype;var _e=De.hasOwnProperty;function arrayLikeKeys(e,t){var r=N(e),a=!r&&B(e),n=!r&&!a&&V(e),i=!r&&!a&&!n&&Ee(e),o=r||a||n||i,l=o?baseTimes(e.length,String):[],d=l.length;for(var u in e){if((t||_e.call(e,u))&&!(o&&(u=="length"||n&&(u=="offset"||u=="parent")||i&&(u=="buffer"||u=="byteLength"||u=="byteOffset")||isIndex(u,d)))){l.push(u)}}return l}var Ae=Object.prototype;function isPrototype(e){var t=e&&e.constructor,r=typeof t=="function"&&t.prototype||Ae;return e===r}function overArg(e,t){return function(r){return e(t(r))}}var Se=overArg(Object.keys,Object);var xe=Object.prototype;var Ce=xe.hasOwnProperty;function baseKeys(e){if(!isPrototype(e)){return Se(e)}var t=[];for(var r in Object(e)){if(Ce.call(e,r)&&r!="constructor"){t.push(r)}}return t}function keys(e){return isArrayLike(e)?arrayLikeKeys(e):baseKeys(e)}function createArrayIterator(e){var t=-1;var r=e.length;return function next(){return++t<r?{value:e[t],key:t}:null}}function createES2015Iterator(e){var t=-1;return function next(){var r=e.next();if(r.done)return null;t++;return{value:r.value,key:t}}}function createObjectIterator(e){var t=keys(e);var r=-1;var a=t.length;return function next(){var n=t[++r];if(n==="__proto__"){return next()}return r<a?{value:e[n],key:n}:null}}function iterator(e){if(isArrayLike(e)){return createArrayIterator(e)}var t=getIterator(e);return t?createES2015Iterator(t):createObjectIterator(e)}function onlyOnce(e){return function(){if(e===null)throw new Error("Callback was already called.");var t=e;e=null;t.apply(this,arguments)}}function _eachOfLimit(e){return function(t,r,a){a=once(a||noop);if(e<=0||!t){return a(null)}var n=iterator(t);var i=false;var o=0;var l=false;function iterateeCallback(e,t){o-=1;if(e){i=true;a(e)}else if(t===T||i&&o<=0){i=true;return a(null)}else if(!l){replenish()}}function replenish(){l=true;while(o<e&&!i){var t=n();if(t===null){i=true;if(o<=0){a(null)}return}o+=1;r(t.value,t.key,onlyOnce(iterateeCallback))}l=false}replenish()}}function eachOfLimit(e,t,r,a){_eachOfLimit(t)(e,wrapAsync(r),a)}function doLimit(e,t){return function(r,a,n){return e(r,t,a,n)}}function eachOfArrayLike(e,t,r){r=once(r||noop);var a=0,n=0,i=e.length;if(i===0){r(null)}function iteratorCallback(e,t){if(e){r(e)}else if(++n===i||t===T){r(null)}}for(;a<i;a++){t(e[a],a,onlyOnce(iteratorCallback))}}var Te=doLimit(eachOfLimit,Infinity);var eachOf=function(e,t,r){var a=isArrayLike(e)?eachOfArrayLike:Te;a(e,wrapAsync(t),r)};function doParallel(e){return function(t,r,a){return e(eachOf,t,wrapAsync(r),a)}}function _asyncMap(e,t,r,a){a=a||noop;t=t||[];var n=[];var i=0;var o=wrapAsync(r);e(t,(function(e,t,r){var a=i++;o(e,(function(e,t){n[a]=t;r(e)}))}),(function(e){a(e,n)}))}var Fe=doParallel(_asyncMap);var Oe=applyEach$1(Fe);function doParallelLimit(e){return function(t,r,a,n){return e(_eachOfLimit(r),t,wrapAsync(a),n)}}var Pe=doParallelLimit(_asyncMap);var Le=doLimit(Pe,1);var Re=applyEach$1(Le);function arrayEach(e,t){var r=-1,a=e==null?0:e.length;while(++r<a){if(t(e[r],r,e)===false){break}}return e}function createBaseFor(e){return function(t,r,a){var n=-1,i=Object(t),o=a(t),l=o.length;while(l--){var d=o[e?l:++n];if(r(i[d],d,i)===false){break}}return t}}var Be=createBaseFor();function baseForOwn(e,t){return e&&Be(e,t,keys)}function baseFindIndex(e,t,r,a){var n=e.length,i=r+(a?1:-1);while(a?i--:++i<n){if(t(e[i],i,e)){return i}}return-1}function baseIsNaN(e){return e!==e}function strictIndexOf(e,t,r){var a=r-1,n=e.length;while(++a<n){if(e[a]===t){return a}}return-1}function baseIndexOf(e,t,r){return t===t?strictIndexOf(e,t,r):baseFindIndex(e,baseIsNaN,r)}var auto=function(e,t,r){if(typeof t==="function"){r=t;t=null}r=once(r||noop);var a=keys(e);var n=a.length;if(!n){return r(null)}if(!t){t=n}var i={};var o=0;var l=false;var d=Object.create(null);var u=[];var c=[];var h={};baseForOwn(e,(function(t,r){if(!N(t)){enqueueTask(r,[t]);c.push(r);return}var a=t.slice(0,t.length-1);var n=a.length;if(n===0){enqueueTask(r,t);c.push(r);return}h[r]=n;arrayEach(a,(function(i){if(!e[i]){throw new Error("async.auto task `"+r+"` has a non-existent dependency `"+i+"` in "+a.join(", "))}addListener(i,(function(){n--;if(n===0){enqueueTask(r,t)}}))}))}));checkForDeadlocks();processQueue();function enqueueTask(e,t){u.push((function(){runTask(e,t)}))}function processQueue(){if(u.length===0&&o===0){return r(null,i)}while(u.length&&o<t){var e=u.shift();e()}}function addListener(e,t){var r=d[e];if(!r){r=d[e]=[]}r.push(t)}function taskComplete(e){var t=d[e]||[];arrayEach(t,(function(e){e()}));processQueue()}function runTask(e,t){if(l)return;var a=onlyOnce((function(t,a){o--;if(arguments.length>2){a=slice(arguments,1)}if(t){var n={};baseForOwn(i,(function(e,t){n[t]=e}));n[e]=a;l=true;d=Object.create(null);r(t,n)}else{i[e]=a;taskComplete(e)}}));o++;var n=wrapAsync(t[t.length-1]);if(t.length>1){n(i,a)}else{n(a)}}function checkForDeadlocks(){var e;var t=0;while(c.length){e=c.pop();t++;arrayEach(getDependents(e),(function(e){if(--h[e]===0){c.push(e)}}))}if(t!==n){throw new Error("async.auto cannot execute tasks due to a recursive dependency")}}function getDependents(t){var r=[];baseForOwn(e,(function(e,a){if(N(e)&&baseIndexOf(e,t,0)>=0){r.push(a)}}));return r}};function arrayMap(e,t){var r=-1,a=e==null?0:e.length,n=Array(a);while(++r<a){n[r]=t(e[r],r,e)}return n}var Ne="[object Symbol]";function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&baseGetTag(e)==Ne}var je=1/0;var Ie=c?c.prototype:undefined;var qe=Ie?Ie.toString:undefined;function baseToString(e){if(typeof e=="string"){return e}if(N(e)){return arrayMap(e,baseToString)+""}if(isSymbol(e)){return qe?qe.call(e):""}var t=e+"";return t=="0"&&1/e==-je?"-0":t}function baseSlice(e,t,r){var a=-1,n=e.length;if(t<0){t=-t>n?0:n+t}r=r>n?n:r;if(r<0){r+=n}n=t>r?0:r-t>>>0;t>>>=0;var i=Array(n);while(++a<n){i[a]=e[a+t]}return i}function castSlice(e,t,r){var a=e.length;r=r===undefined?a:r;return!t&&r>=a?e:baseSlice(e,t,r)}function charsEndIndex(e,t){var r=e.length;while(r--&&baseIndexOf(t,e[r],0)>-1){}return r}function charsStartIndex(e,t){var r=-1,a=e.length;while(++r<a&&baseIndexOf(t,e[r],0)>-1){}return r}function asciiToArray(e){return e.split("")}var Ue="\\ud800-\\udfff";var Ge="\\u0300-\\u036f";var Ve="\\ufe20-\\ufe2f";var ze="\\u20d0-\\u20ff";var Me=Ge+Ve+ze;var He="\\ufe0e\\ufe0f";var $e="\\u200d";var We=RegExp("["+$e+Ue+Me+He+"]");function hasUnicode(e){return We.test(e)}var Ye="\\ud800-\\udfff";var Ke="\\u0300-\\u036f";var Je="\\ufe20-\\ufe2f";var Ze="\\u20d0-\\u20ff";var Qe=Ke+Je+Ze;var Xe="\\ufe0e\\ufe0f";var et="["+Ye+"]";var tt="["+Qe+"]";var rt="\\ud83c[\\udffb-\\udfff]";var nt="(?:"+tt+"|"+rt+")";var it="[^"+Ye+"]";var ot="(?:\\ud83c[\\udde6-\\uddff]){2}";var st="[\\ud800-\\udbff][\\udc00-\\udfff]";var pt="\\u200d";var lt=nt+"?";var dt="["+Xe+"]?";var ut="(?:"+pt+"(?:"+[it,ot,st].join("|")+")"+dt+lt+")*";var ct=dt+lt+ut;var mt="(?:"+[it+tt+"?",tt,ot,st,et].join("|")+")";var ft=RegExp(rt+"(?="+rt+")|"+mt+ct,"g");function unicodeToArray(e){return e.match(ft)||[]}function stringToArray(e){return hasUnicode(e)?unicodeToArray(e):asciiToArray(e)}function toString(e){return e==null?"":baseToString(e)}var ht=/^\s+|\s+$/g;function trim(e,t,r){e=toString(e);if(e&&(r||t===undefined)){return e.replace(ht,"")}if(!e||!(t=baseToString(t))){return e}var a=stringToArray(e),n=stringToArray(t),i=charsStartIndex(a,n),o=charsEndIndex(a,n)+1;return castSlice(a,i,o).join("")}var gt=/^(?:async\s+)?(function)?\s*[^\(]*\(\s*([^\)]*)\)/m;var vt=/,/;var wt=/(=.+)?(\s*)$/;var bt=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;function parseParams(e){e=e.toString().replace(bt,"");e=e.match(gt)[2].replace(" ","");e=e?e.split(vt):[];e=e.map((function(e){return trim(e.replace(wt,""))}));return e}function autoInject(e,t){var r={};baseForOwn(e,(function(e,t){var a;var n=isAsync(e);var i=!n&&e.length===1||n&&e.length===0;if(N(e)){a=e.slice(0,-1);e=e[e.length-1];r[t]=a.concat(a.length>0?newTask:e)}else if(i){r[t]=e}else{a=parseParams(e);if(e.length===0&&!n&&a.length===0){throw new Error("autoInject task functions require explicit parameters.")}if(!n)a.pop();r[t]=a.concat(newTask)}function newTask(t,r){var n=arrayMap(a,(function(e){return t[e]}));n.push(r);wrapAsync(e).apply(null,n)}}));auto(r,t)}function DLL(){this.head=this.tail=null;this.length=0}function setInitial(e,t){e.length=1;e.head=e.tail=t}DLL.prototype.removeLink=function(e){if(e.prev)e.prev.next=e.next;else this.head=e.next;if(e.next)e.next.prev=e.prev;else this.tail=e.prev;e.prev=e.next=null;this.length-=1;return e};DLL.prototype.empty=function(){while(this.head)this.shift();return this};DLL.prototype.insertAfter=function(e,t){t.prev=e;t.next=e.next;if(e.next)e.next.prev=t;else this.tail=t;e.next=t;this.length+=1};DLL.prototype.insertBefore=function(e,t){t.prev=e.prev;t.next=e;if(e.prev)e.prev.next=t;else this.head=t;e.prev=t;this.length+=1};DLL.prototype.unshift=function(e){if(this.head)this.insertBefore(this.head,e);else setInitial(this,e)};DLL.prototype.push=function(e){if(this.tail)this.insertAfter(this.tail,e);else setInitial(this,e)};DLL.prototype.shift=function(){return this.head&&this.removeLink(this.head)};DLL.prototype.pop=function(){return this.tail&&this.removeLink(this.tail)};DLL.prototype.toArray=function(){var e=Array(this.length);var t=this.head;for(var r=0;r<this.length;r++){e[r]=t.data;t=t.next}return e};DLL.prototype.remove=function(e){var t=this.head;while(!!t){var r=t.next;if(e(t)){this.removeLink(t)}t=r}return this};function queue(e,t,r){if(t==null){t=1}else if(t===0){throw new Error("Concurrency must not be zero")}var a=wrapAsync(e);var n=0;var o=[];var l=false;function _insert(e,t,r){if(r!=null&&typeof r!=="function"){throw new Error("task callback must be a function")}u.started=true;if(!N(e)){e=[e]}if(e.length===0&&u.idle()){return i((function(){u.drain()}))}for(var a=0,n=e.length;a<n;a++){var o={data:e[a],callback:r||noop};if(t){u._tasks.unshift(o)}else{u._tasks.push(o)}}if(!l){l=true;i((function(){l=false;u.process()}))}}function _next(e){return function(t){n-=1;for(var r=0,a=e.length;r<a;r++){var i=e[r];var l=baseIndexOf(o,i,0);if(l===0){o.shift()}else if(l>0){o.splice(l,1)}i.callback.apply(i,arguments);if(t!=null){u.error(t,i.data)}}if(n<=u.concurrency-u.buffer){u.unsaturated()}if(u.idle()){u.drain()}u.process()}}var d=false;var u={_tasks:new DLL,concurrency:t,payload:r,saturated:noop,unsaturated:noop,buffer:t/4,empty:noop,drain:noop,error:noop,started:false,paused:false,push:function(e,t){_insert(e,false,t)},kill:function(){u.drain=noop;u._tasks.empty()},unshift:function(e,t){_insert(e,true,t)},remove:function(e){u._tasks.remove(e)},process:function(){if(d){return}d=true;while(!u.paused&&n<u.concurrency&&u._tasks.length){var e=[],t=[];var r=u._tasks.length;if(u.payload)r=Math.min(r,u.payload);for(var i=0;i<r;i++){var l=u._tasks.shift();e.push(l);o.push(l);t.push(l.data)}n+=1;if(u._tasks.length===0){u.empty()}if(n===u.concurrency){u.saturated()}var c=onlyOnce(_next(e));a(t,c)}d=false},length:function(){return u._tasks.length},running:function(){return n},workersList:function(){return o},idle:function(){return u._tasks.length+n===0},pause:function(){u.paused=true},resume:function(){if(u.paused===false){return}u.paused=false;i(u.process)}};return u}function cargo(e,t){return queue(e,1,t)}var yt=doLimit(eachOfLimit,1);function reduce(e,t,r,a){a=once(a||noop);var n=wrapAsync(r);yt(e,(function(e,r,a){n(t,e,(function(e,r){t=r;a(e)}))}),(function(e){a(e,t)}))}function seq(){var e=arrayMap(arguments,wrapAsync);return function(){var t=slice(arguments);var r=this;var a=t[t.length-1];if(typeof a=="function"){t.pop()}else{a=noop}reduce(e,t,(function(e,t,a){t.apply(r,e.concat((function(e){var t=slice(arguments,1);a(e,t)})))}),(function(e,t){a.apply(r,[e].concat(t))}))}}var compose=function(){return seq.apply(null,slice(arguments).reverse())};var kt=Array.prototype.concat;var concatLimit=function(e,t,r,a){a=a||noop;var n=wrapAsync(r);Pe(e,t,(function(e,t){n(e,(function(e){if(e)return t(e);return t(null,slice(arguments,1))}))}),(function(e,t){var r=[];for(var n=0;n<t.length;n++){if(t[n]){r=kt.apply(r,t[n])}}return a(e,r)}))};var Et=doLimit(concatLimit,Infinity);var Dt=doLimit(concatLimit,1);var constant=function(){var e=slice(arguments);var t=[null].concat(e);return function(){var e=arguments[arguments.length-1];return e.apply(this,t)}};function identity(e){return e}function _createTester(e,t){return function(r,a,n,i){i=i||noop;var o=false;var l;r(a,(function(r,a,i){n(r,(function(a,n){if(a){i(a)}else if(e(n)&&!l){o=true;l=t(true,r);i(null,T)}else{i()}}))}),(function(e){if(e){i(e)}else{i(null,o?l:t(false))}}))}}function _findGetResult(e,t){return t}var _t=doParallel(_createTester(identity,_findGetResult));var At=doParallelLimit(_createTester(identity,_findGetResult));var St=doLimit(At,1);function consoleFunc(e){return function(t){var r=slice(arguments,1);r.push((function(t){var r=slice(arguments,1);if(typeof console==="object"){if(t){if(console.error){console.error(t)}}else if(console[e]){arrayEach(r,(function(t){console[e](t)}))}}}));wrapAsync(t).apply(null,r)}}var xt=consoleFunc("dir");function doDuring(e,t,r){r=onlyOnce(r||noop);var a=wrapAsync(e);var n=wrapAsync(t);function next(e){if(e)return r(e);var t=slice(arguments,1);t.push(check);n.apply(this,t)}function check(e,t){if(e)return r(e);if(!t)return r(null);a(next)}check(null,true)}function doWhilst(e,t,r){r=onlyOnce(r||noop);var a=wrapAsync(e);var next=function(e){if(e)return r(e);var n=slice(arguments,1);if(t.apply(this,n))return a(next);r.apply(null,[null].concat(n))};a(next)}function doUntil(e,t,r){doWhilst(e,(function(){return!t.apply(this,arguments)}),r)}function during(e,t,r){r=onlyOnce(r||noop);var a=wrapAsync(t);var n=wrapAsync(e);function next(e){if(e)return r(e);n(check)}function check(e,t){if(e)return r(e);if(!t)return r(null);a(next)}n(check)}function _withoutIndex(e){return function(t,r,a){return e(t,a)}}function eachLimit(e,t,r){eachOf(e,_withoutIndex(wrapAsync(t)),r)}function eachLimit$1(e,t,r,a){_eachOfLimit(t)(e,_withoutIndex(wrapAsync(r)),a)}var Ct=doLimit(eachLimit$1,1);function ensureAsync(e){if(isAsync(e))return e;return initialParams((function(t,r){var a=true;t.push((function(){var e=arguments;if(a){i((function(){r.apply(null,e)}))}else{r.apply(null,e)}}));e.apply(this,t);a=false}))}function notId(e){return!e}var Tt=doParallel(_createTester(notId,notId));var Ft=doParallelLimit(_createTester(notId,notId));var Ot=doLimit(Ft,1);function baseProperty(e){return function(t){return t==null?undefined:t[e]}}function filterArray(e,t,r,a){var n=new Array(t.length);e(t,(function(e,t,a){r(e,(function(e,r){n[t]=!!r;a(e)}))}),(function(e){if(e)return a(e);var r=[];for(var i=0;i<t.length;i++){if(n[i])r.push(t[i])}a(null,r)}))}function filterGeneric(e,t,r,a){var n=[];e(t,(function(e,t,a){r(e,(function(r,i){if(r){a(r)}else{if(i){n.push({index:t,value:e})}a()}}))}),(function(e){if(e){a(e)}else{a(null,arrayMap(n.sort((function(e,t){return e.index-t.index})),baseProperty("value")))}}))}function _filter(e,t,r,a){var n=isArrayLike(t)?filterArray:filterGeneric;n(e,t,wrapAsync(r),a||noop)}var Pt=doParallel(_filter);var Lt=doParallelLimit(_filter);var Rt=doLimit(Lt,1);function forever(e,t){var r=onlyOnce(t||noop);var a=wrapAsync(ensureAsync(e));function next(e){if(e)return r(e);a(next)}next()}var groupByLimit=function(e,t,r,a){a=a||noop;var n=wrapAsync(r);Pe(e,t,(function(e,t){n(e,(function(r,a){if(r)return t(r);return t(null,{key:a,val:e})}))}),(function(e,t){var r={};var n=Object.prototype.hasOwnProperty;for(var i=0;i<t.length;i++){if(t[i]){var o=t[i].key;var l=t[i].val;if(n.call(r,o)){r[o].push(l)}else{r[o]=[l]}}}return a(e,r)}))};var Bt=doLimit(groupByLimit,Infinity);var Nt=doLimit(groupByLimit,1);var jt=consoleFunc("log");function mapValuesLimit(e,t,r,a){a=once(a||noop);var n={};var i=wrapAsync(r);eachOfLimit(e,t,(function(e,t,r){i(e,t,(function(e,a){if(e)return r(e);n[t]=a;r()}))}),(function(e){a(e,n)}))}var It=doLimit(mapValuesLimit,Infinity);var qt=doLimit(mapValuesLimit,1);function has(e,t){return t in e}function memoize(e,t){var r=Object.create(null);var a=Object.create(null);t=t||identity;var n=wrapAsync(e);var o=initialParams((function memoized(e,o){var l=t.apply(null,e);if(has(r,l)){i((function(){o.apply(null,r[l])}))}else if(has(a,l)){a[l].push(o)}else{a[l]=[o];n.apply(null,e.concat((function(){var e=slice(arguments);r[l]=e;var t=a[l];delete a[l];for(var n=0,i=t.length;n<i;n++){t[n].apply(null,e)}})))}}));o.memo=r;o.unmemoized=e;return o}var Ut;if(a){Ut=process.nextTick}else if(r){Ut=setImmediate}else{Ut=fallback}var Gt=wrap(Ut);function _parallel(e,t,r){r=r||noop;var a=isArrayLike(t)?[]:{};e(t,(function(e,t,r){wrapAsync(e)((function(e,n){if(arguments.length>2){n=slice(arguments,1)}a[t]=n;r(e)}))}),(function(e){r(e,a)}))}function parallelLimit(e,t){_parallel(eachOf,e,t)}function parallelLimit$1(e,t,r){_parallel(_eachOfLimit(t),e,r)}var queue$1=function(e,t){var r=wrapAsync(e);return queue((function(e,t){r(e[0],t)}),t,1)};var priorityQueue=function(e,t){var r=queue$1(e,t);r.push=function(e,t,a){if(a==null)a=noop;if(typeof a!=="function"){throw new Error("task callback must be a function")}r.started=true;if(!N(e)){e=[e]}if(e.length===0){return i((function(){r.drain()}))}t=t||0;var n=r._tasks.head;while(n&&t>=n.priority){n=n.next}for(var o=0,l=e.length;o<l;o++){var d={data:e[o],priority:t,callback:a};if(n){r._tasks.insertBefore(n,d)}else{r._tasks.push(d)}}i(r.process)};delete r.unshift;return r};function race(e,t){t=once(t||noop);if(!N(e))return t(new TypeError("First argument to race must be an array of functions"));if(!e.length)return t();for(var r=0,a=e.length;r<a;r++){wrapAsync(e[r])(t)}}function reduceRight(e,t,r,a){var n=slice(e).reverse();reduce(n,t,r,a)}function reflect(e){var t=wrapAsync(e);return initialParams((function reflectOn(e,r){e.push((function callback(e,t){if(e){r(null,{error:e})}else{var a;if(arguments.length<=2){a=t}else{a=slice(arguments,1)}r(null,{value:a})}}));return t.apply(this,e)}))}function reflectAll(e){var t;if(N(e)){t=arrayMap(e,reflect)}else{t={};baseForOwn(e,(function(e,r){t[r]=reflect.call(this,e)}))}return t}function reject$1(e,t,r,a){_filter(e,t,(function(e,t){r(e,(function(e,r){t(e,!r)}))}),a)}var Vt=doParallel(reject$1);var zt=doParallelLimit(reject$1);var Mt=doLimit(zt,1);function constant$1(e){return function(){return e}}function retry(e,t,r){var a=5;var n=0;var i={times:a,intervalFunc:constant$1(n)};function parseTimes(e,t){if(typeof t==="object"){e.times=+t.times||a;e.intervalFunc=typeof t.interval==="function"?t.interval:constant$1(+t.interval||n);e.errorFilter=t.errorFilter}else if(typeof t==="number"||typeof t==="string"){e.times=+t||a}else{throw new Error("Invalid arguments for async.retry")}}if(arguments.length<3&&typeof e==="function"){r=t||noop;t=e}else{parseTimes(i,e);r=r||noop}if(typeof t!=="function"){throw new Error("Invalid arguments for async.retry")}var o=wrapAsync(t);var l=1;function retryAttempt(){o((function(e){if(e&&l++<i.times&&(typeof i.errorFilter!="function"||i.errorFilter(e))){setTimeout(retryAttempt,i.intervalFunc(l))}else{r.apply(null,arguments)}}))}retryAttempt()}var retryable=function(e,t){if(!t){t=e;e=null}var r=wrapAsync(t);return initialParams((function(t,a){function taskFn(e){r.apply(null,t.concat(e))}if(e)retry(e,taskFn,a);else retry(taskFn,a)}))};function series(e,t){_parallel(yt,e,t)}var Ht=doParallel(_createTester(Boolean,identity));var $t=doParallelLimit(_createTester(Boolean,identity));var Wt=doLimit($t,1);function sortBy(e,t,r){var a=wrapAsync(t);Fe(e,(function(e,t){a(e,(function(r,a){if(r)return t(r);t(null,{value:e,criteria:a})}))}),(function(e,t){if(e)return r(e);r(null,arrayMap(t.sort(comparator),baseProperty("value")))}));function comparator(e,t){var r=e.criteria,a=t.criteria;return r<a?-1:r>a?1:0}}function timeout(e,t,r){var a=wrapAsync(e);return initialParams((function(n,i){var o=false;var l;function timeoutCallback(){var t=e.name||"anonymous";var a=new Error('Callback function "'+t+'" timed out.');a.code="ETIMEDOUT";if(r){a.info=r}o=true;i(a)}n.push((function(){if(!o){i.apply(null,arguments);clearTimeout(l)}}));l=setTimeout(timeoutCallback,t);a.apply(null,n)}))}var Yt=Math.ceil;var Kt=Math.max;function baseRange(e,t,r,a){var n=-1,i=Kt(Yt((t-e)/(r||1)),0),o=Array(i);while(i--){o[a?i:++n]=e;e+=r}return o}function timeLimit(e,t,r,a){var n=wrapAsync(r);Pe(baseRange(0,e,1),t,n,a)}var Jt=doLimit(timeLimit,Infinity);var Zt=doLimit(timeLimit,1);function transform(e,t,r,a){if(arguments.length<=3){a=r;r=t;t=N(e)?[]:{}}a=once(a||noop);var n=wrapAsync(r);eachOf(e,(function(e,r,a){n(t,e,r,a)}),(function(e){a(e,t)}))}function tryEach(e,t){var r=null;var a;t=t||noop;Ct(e,(function(e,t){wrapAsync(e)((function(e,n){if(arguments.length>2){a=slice(arguments,1)}else{a=n}r=e;t(!e)}))}),(function(){t(r,a)}))}function unmemoize(e){return function(){return(e.unmemoized||e).apply(null,arguments)}}function whilst(e,t,r){r=onlyOnce(r||noop);var a=wrapAsync(t);if(!e())return r(null);var next=function(t){if(t)return r(t);if(e())return a(next);var n=slice(arguments,1);r.apply(null,[null].concat(n))};a(next)}function until(e,t,r){whilst((function(){return!e.apply(this,arguments)}),t,r)}var waterfall=function(e,t){t=once(t||noop);if(!N(e))return t(new Error("First argument to waterfall must be an array of functions"));if(!e.length)return t();var r=0;function nextTask(t){var a=wrapAsync(e[r++]);t.push(onlyOnce(next));a.apply(null,t)}function next(a){if(a||r===e.length){return t.apply(null,arguments)}nextTask(slice(arguments,1))}nextTask([])};var Qt={apply:apply,applyEach:Oe,applyEachSeries:Re,asyncify:asyncify,auto:auto,autoInject:autoInject,cargo:cargo,compose:compose,concat:Et,concatLimit:concatLimit,concatSeries:Dt,constant:constant,detect:_t,detectLimit:At,detectSeries:St,dir:xt,doDuring:doDuring,doUntil:doUntil,doWhilst:doWhilst,during:during,each:eachLimit,eachLimit:eachLimit$1,eachOf:eachOf,eachOfLimit:eachOfLimit,eachOfSeries:yt,eachSeries:Ct,ensureAsync:ensureAsync,every:Tt,everyLimit:Ft,everySeries:Ot,filter:Pt,filterLimit:Lt,filterSeries:Rt,forever:forever,groupBy:Bt,groupByLimit:groupByLimit,groupBySeries:Nt,log:jt,map:Fe,mapLimit:Pe,mapSeries:Le,mapValues:It,mapValuesLimit:mapValuesLimit,mapValuesSeries:qt,memoize:memoize,nextTick:Gt,parallel:parallelLimit,parallelLimit:parallelLimit$1,priorityQueue:priorityQueue,queue:queue$1,race:race,reduce:reduce,reduceRight:reduceRight,reflect:reflect,reflectAll:reflectAll,reject:Vt,rejectLimit:zt,rejectSeries:Mt,retry:retry,retryable:retryable,seq:seq,series:series,setImmediate:i,some:Ht,someLimit:$t,someSeries:Wt,sortBy:sortBy,timeout:timeout,times:Jt,timesLimit:timeLimit,timesSeries:Zt,transform:transform,tryEach:tryEach,unmemoize:unmemoize,until:until,waterfall:waterfall,whilst:whilst,all:Tt,allLimit:Ft,allSeries:Ot,any:Ht,anyLimit:$t,anySeries:Wt,find:_t,findLimit:At,findSeries:St,forEach:eachLimit,forEachSeries:Ct,forEachLimit:eachLimit$1,forEachOf:eachOf,forEachOfSeries:yt,forEachOfLimit:eachOfLimit,inject:reduce,foldl:reduce,foldr:reduceRight,select:Pt,selectLimit:Lt,selectSeries:Rt,wrapSync:asyncify};t["default"]=Qt;t.apply=apply;t.applyEach=Oe;t.applyEachSeries=Re;t.asyncify=asyncify;t.auto=auto;t.autoInject=autoInject;t.cargo=cargo;t.compose=compose;t.concat=Et;t.concatLimit=concatLimit;t.concatSeries=Dt;t.constant=constant;t.detect=_t;t.detectLimit=At;t.detectSeries=St;t.dir=xt;t.doDuring=doDuring;t.doUntil=doUntil;t.doWhilst=doWhilst;t.during=during;t.each=eachLimit;t.eachLimit=eachLimit$1;t.eachOf=eachOf;t.eachOfLimit=eachOfLimit;t.eachOfSeries=yt;t.eachSeries=Ct;t.ensureAsync=ensureAsync;t.every=Tt;t.everyLimit=Ft;t.everySeries=Ot;t.filter=Pt;t.filterLimit=Lt;t.filterSeries=Rt;t.forever=forever;t.groupBy=Bt;t.groupByLimit=groupByLimit;t.groupBySeries=Nt;t.log=jt;t.map=Fe;t.mapLimit=Pe;t.mapSeries=Le;t.mapValues=It;t.mapValuesLimit=mapValuesLimit;t.mapValuesSeries=qt;t.memoize=memoize;t.nextTick=Gt;t.parallel=parallelLimit;t.parallelLimit=parallelLimit$1;t.priorityQueue=priorityQueue;t.queue=queue$1;t.race=race;t.reduce=reduce;t.reduceRight=reduceRight;t.reflect=reflect;t.reflectAll=reflectAll;t.reject=Vt;t.rejectLimit=zt;t.rejectSeries=Mt;t.retry=retry;t.retryable=retryable;t.seq=seq;t.series=series;t.setImmediate=i;t.some=Ht;t.someLimit=$t;t.someSeries=Wt;t.sortBy=sortBy;t.timeout=timeout;t.times=Jt;t.timesLimit=timeLimit;t.timesSeries=Zt;t.transform=transform;t.tryEach=tryEach;t.unmemoize=unmemoize;t.until=until;t.waterfall=waterfall;t.whilst=whilst;t.all=Tt;t.allLimit=Ft;t.allSeries=Ot;t.any=Ht;t.anyLimit=$t;t.anySeries=Wt;t.find=_t;t.findLimit=At;t.findSeries=St;t.forEach=eachLimit;t.forEachSeries=Ct;t.forEachLimit=eachLimit$1;t.forEachOf=eachOf;t.forEachOfSeries=yt;t.forEachOfLimit=eachOfLimit;t.inject=reduce;t.foldl=reduce;t.foldr=reduceRight;t.select=Pt;t.selectLimit=Lt;t.selectSeries=Rt;t.wrapSync=asyncify;Object.defineProperty(t,"__esModule",{value:true})}))},9417:e=>{"use strict";e.exports=balanced;function balanced(e,t,r){if(e instanceof RegExp)e=maybeMatch(e,r);if(t instanceof RegExp)t=maybeMatch(t,r);var a=range(e,t,r);return a&&{start:a[0],end:a[1],pre:r.slice(0,a[0]),body:r.slice(a[0]+e.length,a[1]),post:r.slice(a[1]+t.length)}}function maybeMatch(e,t){var r=t.match(e);return r?r[0]:null}balanced.range=range;function range(e,t,r){var a,n,i,o,l;var d=r.indexOf(e);var u=r.indexOf(t,d+1);var c=d;if(d>=0&&u>0){if(e===t){return[d,u]}a=[];i=r.length;while(c>=0&&!l){if(c==d){a.push(c);d=r.indexOf(e,c+1)}else if(a.length==1){l=[a.pop(),u]}else{n=a.pop();if(n<i){i=n;o=u}u=r.indexOf(t,c+1)}c=d<u&&d>=0?d:u}if(a.length){l=[i,o]}}return l}},3682:(e,t,r)=>{var a=r(4670);var n=r(5549);var i=r(6819);var o=Function.bind;var l=o.bind(o);function bindApi(e,t,r){var a=l(i,null).apply(null,r?[t,r]:[t]);e.api={remove:a};e.remove=a;["before","error","after","wrap"].forEach((function(a){var i=r?[t,a,r]:[t,a];e[a]=e.api[a]=l(n,null).apply(null,i)}))}function HookSingular(){var e="h";var t={registry:{}};var r=a.bind(null,t,e);bindApi(r,t,e);return r}function HookCollection(){var e={registry:{}};var t=a.bind(null,e);bindApi(t,e);return t}var d=false;function Hook(){if(!d){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');d=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},5549:e=>{e.exports=addHook;function addHook(e,t,r,a){var n=a;if(!e.registry[r]){e.registry[r]=[]}if(t==="before"){a=function(e,t){return Promise.resolve().then(n.bind(null,t)).then(e.bind(null,t))}}if(t==="after"){a=function(e,t){var r;return Promise.resolve().then(e.bind(null,t)).then((function(e){r=e;return n(r,t)})).then((function(){return r}))}}if(t==="error"){a=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return n(e,t)}))}}e.registry[r].push({hook:a,orig:n})}},4670:e=>{e.exports=register;function register(e,t,r,a){if(typeof r!=="function"){throw new Error("method for before hook must be a function")}if(!a){a={}}if(Array.isArray(t)){return t.reverse().reduce((function(t,r){return register.bind(null,e,r,t,a)}),r)()}return Promise.resolve().then((function(){if(!e.registry[t]){return r(a)}return e.registry[t].reduce((function(e,t){return t.hook.bind(null,e,a)}),r)()}))}},6819:e=>{e.exports=removeHook;function removeHook(e,t,r){if(!e.registry[t]){return}var a=e.registry[t].map((function(e){return e.orig})).indexOf(r);if(a===-1){return}e.registry[t].splice(a,1)}},8707:(e,t,r)=>{"use strict";const a=r(8691);const n=r(2068);const i=r(4955).stdout;const o=r(2138);const l=process.platform==="win32"&&!(process.env.TERM||"").toLowerCase().startsWith("xterm");const d=["ansi","ansi","ansi256","ansi16m"];const u=new Set(["gray"]);const c=Object.create(null);function applyOptions(e,t){t=t||{};const r=i?i.level:0;e.level=t.level===undefined?r:t.level;e.enabled="enabled"in t?t.enabled:e.level>0}function Chalk(e){if(!this||!(this instanceof Chalk)||this.template){const t={};applyOptions(t,e);t.template=function(){const e=[].slice.call(arguments);return chalkTag.apply(null,[t.template].concat(e))};Object.setPrototypeOf(t,Chalk.prototype);Object.setPrototypeOf(t.template,t);t.template.constructor=Chalk;return t.template}applyOptions(this,e)}if(l){n.blue.open="[94m"}for(const e of Object.keys(n)){n[e].closeRe=new RegExp(a(n[e].close),"g");c[e]={get(){const t=n[e];return build.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}}c.visible={get(){return build.call(this,this._styles||[],true,"visible")}};n.color.closeRe=new RegExp(a(n.color.close),"g");for(const e of Object.keys(n.color.ansi)){if(u.has(e)){continue}c[e]={get(){const t=this.level;return function(){const r=n.color[d[t]][e].apply(null,arguments);const a={open:r,close:n.color.close,closeRe:n.color.closeRe};return build.call(this,this._styles?this._styles.concat(a):[a],this._empty,e)}}}}n.bgColor.closeRe=new RegExp(a(n.bgColor.close),"g");for(const e of Object.keys(n.bgColor.ansi)){if(u.has(e)){continue}const t="bg"+e[0].toUpperCase()+e.slice(1);c[t]={get(){const t=this.level;return function(){const r=n.bgColor[d[t]][e].apply(null,arguments);const a={open:r,close:n.bgColor.close,closeRe:n.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(a):[a],this._empty,e)}}}}const h=Object.defineProperties((()=>{}),c);function build(e,t,r){const builder=function(){return applyStyle.apply(builder,arguments)};builder._styles=e;builder._empty=t;const a=this;Object.defineProperty(builder,"level",{enumerable:true,get(){return a.level},set(e){a.level=e}});Object.defineProperty(builder,"enabled",{enumerable:true,get(){return a.enabled},set(e){a.enabled=e}});builder.hasGrey=this.hasGrey||r==="gray"||r==="grey";builder.__proto__=h;return builder}function applyStyle(){const e=arguments;const t=e.length;let r=String(arguments[0]);if(t===0){return""}if(t>1){for(let a=1;a<t;a++){r+=" "+e[a]}}if(!this.enabled||this.level<=0||!r){return this._empty?"":r}const a=n.dim.open;if(l&&this.hasGrey){n.dim.open=""}for(const e of this._styles.slice().reverse()){r=e.open+r.replace(e.closeRe,e.open)+e.close;r=r.replace(/\r?\n/g,`${e.close}$&${e.open}`)}n.dim.open=a;return r}function chalkTag(e,t){if(!Array.isArray(t)){return[].slice.call(arguments,1).join(" ")}const r=[].slice.call(arguments,2);const a=[t.raw[0]];for(let e=1;e<t.length;e++){a.push(String(r[e-1]).replace(/[{}\\]/g,"\\$&"));a.push(String(t.raw[e]))}return o(e,a.join(""))}Object.defineProperties(Chalk.prototype,c);e.exports=Chalk();e.exports.supportsColor=i;e.exports["default"]=e.exports},1538:e=>{"use strict";e.exports=(e,t)=>{t=t||process.argv;const r=e.startsWith("-")?"":e.length===1?"-":"--";const a=t.indexOf(r+e);const n=t.indexOf("--");return a!==-1&&(n===-1?true:a<n)}},4955:(e,t,r)=>{"use strict";const a=r(2037);const n=r(1538);const i=process.env;let o;if(n("no-color")||n("no-colors")||n("color=false")){o=false}else if(n("color")||n("colors")||n("color=true")||n("color=always")){o=true}if("FORCE_COLOR"in i){o=i.FORCE_COLOR.length===0||parseInt(i.FORCE_COLOR,10)!==0}function translateLevel(e){if(e===0){return false}return{level:e,hasBasic:true,has256:e>=2,has16m:e>=3}}function supportsColor(e){if(o===false){return 0}if(n("color=16m")||n("color=full")||n("color=truecolor")){return 3}if(n("color=256")){return 2}if(e&&!e.isTTY&&o!==true){return 0}const t=o?1:0;if(process.platform==="win32"){const e=a.release().split(".");if(Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586){return Number(e[2])>=14931?3:2}return 1}if("CI"in i){if(["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in i))||i.CI_NAME==="codeship"){return 1}return t}if("TEAMCITY_VERSION"in i){return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(i.TEAMCITY_VERSION)?1:0}if(i.COLORTERM==="truecolor"){return 3}if("TERM_PROGRAM"in i){const e=parseInt((i.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(i.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}if(/-256(color)?$/i.test(i.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(i.TERM)){return 1}if("COLORTERM"in i){return 1}if(i.TERM==="dumb"){return t}return t}function getSupportLevel(e){const t=supportsColor(e);return translateLevel(t)}e.exports={supportsColor:getSupportLevel,stdout:getSupportLevel(process.stdout),stderr:getSupportLevel(process.stderr)}},2138:e=>{"use strict";const t=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;const r=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;const a=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;const n=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;const i=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function unescape(e){if(e[0]==="u"&&e.length===5||e[0]==="x"&&e.length===3){return String.fromCharCode(parseInt(e.slice(1),16))}return i.get(e)||e}function parseArguments(e,t){const r=[];const i=t.trim().split(/\s*,\s*/g);let o;for(const t of i){if(!isNaN(t)){r.push(Number(t))}else if(o=t.match(a)){r.push(o[2].replace(n,((e,t,r)=>t?unescape(t):r)))}else{throw new Error(`Invalid Chalk template style argument: ${t} (in style '${e}')`)}}return r}function parseStyle(e){r.lastIndex=0;const t=[];let a;while((a=r.exec(e))!==null){const e=a[1];if(a[2]){const r=parseArguments(e,a[2]);t.push([e].concat(r))}else{t.push([e])}}return t}function buildStyle(e,t){const r={};for(const e of t){for(const t of e.styles){r[t[0]]=e.inverse?null:t.slice(1)}}let a=e;for(const e of Object.keys(r)){if(Array.isArray(r[e])){if(!(e in a)){throw new Error(`Unknown Chalk style: ${e}`)}if(r[e].length>0){a=a[e].apply(a,r[e])}else{a=a[e]}}}return a}e.exports=(e,r)=>{const a=[];const n=[];let i=[];r.replace(t,((t,r,o,l,d,u)=>{if(r){i.push(unescape(r))}else if(l){const t=i.join("");i=[];n.push(a.length===0?t:buildStyle(e,a)(t));a.push({inverse:o,styles:parseStyle(l)})}else if(d){if(a.length===0){throw new Error("Found extraneous } in Chalk template literal")}n.push(buildStyle(e,a)(i.join("")));i=[];a.pop()}else{i.push(u)}}));n.push(i.join(""));if(a.length>0){const e=`Chalk template literal is missing ${a.length} closing bracket${a.length===1?"":"s"} (\`}\`)`;throw new Error(e)}return n.join("")}},7391:(e,t,r)=>{var a=r(8510);var n={};for(var i in a){if(a.hasOwnProperty(i)){n[a[i]]=i}}var o=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in o){if(o.hasOwnProperty(l)){if(!("channels"in o[l])){throw new Error("missing channels property: "+l)}if(!("labels"in o[l])){throw new Error("missing channel labels property: "+l)}if(o[l].labels.length!==o[l].channels){throw new Error("channel and label counts mismatch: "+l)}var d=o[l].channels;var u=o[l].labels;delete o[l].channels;delete o[l].labels;Object.defineProperty(o[l],"channels",{value:d});Object.defineProperty(o[l],"labels",{value:u})}}o.rgb.hsl=function(e){var t=e[0]/255;var r=e[1]/255;var a=e[2]/255;var n=Math.min(t,r,a);var i=Math.max(t,r,a);var o=i-n;var l;var d;var u;if(i===n){l=0}else if(t===i){l=(r-a)/o}else if(r===i){l=2+(a-t)/o}else if(a===i){l=4+(t-r)/o}l=Math.min(l*60,360);if(l<0){l+=360}u=(n+i)/2;if(i===n){d=0}else if(u<=.5){d=o/(i+n)}else{d=o/(2-i-n)}return[l,d*100,u*100]};o.rgb.hsv=function(e){var t;var r;var a;var n;var i;var o=e[0]/255;var l=e[1]/255;var d=e[2]/255;var u=Math.max(o,l,d);var c=u-Math.min(o,l,d);var diffc=function(e){return(u-e)/6/c+1/2};if(c===0){n=i=0}else{i=c/u;t=diffc(o);r=diffc(l);a=diffc(d);if(o===u){n=a-r}else if(l===u){n=1/3+t-a}else if(d===u){n=2/3+r-t}if(n<0){n+=1}else if(n>1){n-=1}}return[n*360,i*100,u*100]};o.rgb.hwb=function(e){var t=e[0];var r=e[1];var a=e[2];var n=o.rgb.hsl(e)[0];var i=1/255*Math.min(t,Math.min(r,a));a=1-1/255*Math.max(t,Math.max(r,a));return[n,i*100,a*100]};o.rgb.cmyk=function(e){var t=e[0]/255;var r=e[1]/255;var a=e[2]/255;var n;var i;var o;var l;l=Math.min(1-t,1-r,1-a);n=(1-t-l)/(1-l)||0;i=(1-r-l)/(1-l)||0;o=(1-a-l)/(1-l)||0;return[n*100,i*100,o*100,l*100]};function comparativeDistance(e,t){return Math.pow(e[0]-t[0],2)+Math.pow(e[1]-t[1],2)+Math.pow(e[2]-t[2],2)}o.rgb.keyword=function(e){var t=n[e];if(t){return t}var r=Infinity;var i;for(var o in a){if(a.hasOwnProperty(o)){var l=a[o];var d=comparativeDistance(e,l);if(d<r){r=d;i=o}}}return i};o.keyword.rgb=function(e){return a[e]};o.rgb.xyz=function(e){var t=e[0]/255;var r=e[1]/255;var a=e[2]/255;t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92;r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92;a=a>.04045?Math.pow((a+.055)/1.055,2.4):a/12.92;var n=t*.4124+r*.3576+a*.1805;var i=t*.2126+r*.7152+a*.0722;var o=t*.0193+r*.1192+a*.9505;return[n*100,i*100,o*100]};o.rgb.lab=function(e){var t=o.rgb.xyz(e);var r=t[0];var a=t[1];var n=t[2];var i;var l;var d;r/=95.047;a/=100;n/=108.883;r=r>.008856?Math.pow(r,1/3):7.787*r+16/116;a=a>.008856?Math.pow(a,1/3):7.787*a+16/116;n=n>.008856?Math.pow(n,1/3):7.787*n+16/116;i=116*a-16;l=500*(r-a);d=200*(a-n);return[i,l,d]};o.hsl.rgb=function(e){var t=e[0]/360;var r=e[1]/100;var a=e[2]/100;var n;var i;var o;var l;var d;if(r===0){d=a*255;return[d,d,d]}if(a<.5){i=a*(1+r)}else{i=a+r-a*r}n=2*a-i;l=[0,0,0];for(var u=0;u<3;u++){o=t+1/3*-(u-1);if(o<0){o++}if(o>1){o--}if(6*o<1){d=n+(i-n)*6*o}else if(2*o<1){d=i}else if(3*o<2){d=n+(i-n)*(2/3-o)*6}else{d=n}l[u]=d*255}return l};o.hsl.hsv=function(e){var t=e[0];var r=e[1]/100;var a=e[2]/100;var n=r;var i=Math.max(a,.01);var o;var l;a*=2;r*=a<=1?a:2-a;n*=i<=1?i:2-i;l=(a+r)/2;o=a===0?2*n/(i+n):2*r/(a+r);return[t,o*100,l*100]};o.hsv.rgb=function(e){var t=e[0]/60;var r=e[1]/100;var a=e[2]/100;var n=Math.floor(t)%6;var i=t-Math.floor(t);var o=255*a*(1-r);var l=255*a*(1-r*i);var d=255*a*(1-r*(1-i));a*=255;switch(n){case 0:return[a,d,o];case 1:return[l,a,o];case 2:return[o,a,d];case 3:return[o,l,a];case 4:return[d,o,a];case 5:return[a,o,l]}};o.hsv.hsl=function(e){var t=e[0];var r=e[1]/100;var a=e[2]/100;var n=Math.max(a,.01);var i;var o;var l;l=(2-r)*a;i=(2-r)*n;o=r*n;o/=i<=1?i:2-i;o=o||0;l/=2;return[t,o*100,l*100]};o.hwb.rgb=function(e){var t=e[0]/360;var r=e[1]/100;var a=e[2]/100;var n=r+a;var i;var o;var l;var d;if(n>1){r/=n;a/=n}i=Math.floor(6*t);o=1-a;l=6*t-i;if((i&1)!==0){l=1-l}d=r+l*(o-r);var u;var c;var h;switch(i){default:case 6:case 0:u=o;c=d;h=r;break;case 1:u=d;c=o;h=r;break;case 2:u=r;c=o;h=d;break;case 3:u=r;c=d;h=o;break;case 4:u=d;c=r;h=o;break;case 5:u=o;c=r;h=d;break}return[u*255,c*255,h*255]};o.cmyk.rgb=function(e){var t=e[0]/100;var r=e[1]/100;var a=e[2]/100;var n=e[3]/100;var i;var o;var l;i=1-Math.min(1,t*(1-n)+n);o=1-Math.min(1,r*(1-n)+n);l=1-Math.min(1,a*(1-n)+n);return[i*255,o*255,l*255]};o.xyz.rgb=function(e){var t=e[0]/100;var r=e[1]/100;var a=e[2]/100;var n;var i;var o;n=t*3.2406+r*-1.5372+a*-.4986;i=t*-.9689+r*1.8758+a*.0415;o=t*.0557+r*-.204+a*1.057;n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:n*12.92;i=i>.0031308?1.055*Math.pow(i,1/2.4)-.055:i*12.92;o=o>.0031308?1.055*Math.pow(o,1/2.4)-.055:o*12.92;n=Math.min(Math.max(0,n),1);i=Math.min(Math.max(0,i),1);o=Math.min(Math.max(0,o),1);return[n*255,i*255,o*255]};o.xyz.lab=function(e){var t=e[0];var r=e[1];var a=e[2];var n;var i;var o;t/=95.047;r/=100;a/=108.883;t=t>.008856?Math.pow(t,1/3):7.787*t+16/116;r=r>.008856?Math.pow(r,1/3):7.787*r+16/116;a=a>.008856?Math.pow(a,1/3):7.787*a+16/116;n=116*r-16;i=500*(t-r);o=200*(r-a);return[n,i,o]};o.lab.xyz=function(e){var t=e[0];var r=e[1];var a=e[2];var n;var i;var o;i=(t+16)/116;n=r/500+i;o=i-a/200;var l=Math.pow(i,3);var d=Math.pow(n,3);var u=Math.pow(o,3);i=l>.008856?l:(i-16/116)/7.787;n=d>.008856?d:(n-16/116)/7.787;o=u>.008856?u:(o-16/116)/7.787;n*=95.047;i*=100;o*=108.883;return[n,i,o]};o.lab.lch=function(e){var t=e[0];var r=e[1];var a=e[2];var n;var i;var o;n=Math.atan2(a,r);i=n*360/2/Math.PI;if(i<0){i+=360}o=Math.sqrt(r*r+a*a);return[t,o,i]};o.lch.lab=function(e){var t=e[0];var r=e[1];var a=e[2];var n;var i;var o;o=a/360*2*Math.PI;n=r*Math.cos(o);i=r*Math.sin(o);return[t,n,i]};o.rgb.ansi16=function(e){var t=e[0];var r=e[1];var a=e[2];var n=1 in arguments?arguments[1]:o.rgb.hsv(e)[2];n=Math.round(n/50);if(n===0){return 30}var i=30+(Math.round(a/255)<<2|Math.round(r/255)<<1|Math.round(t/255));if(n===2){i+=60}return i};o.hsv.ansi16=function(e){return o.rgb.ansi16(o.hsv.rgb(e),e[2])};o.rgb.ansi256=function(e){var t=e[0];var r=e[1];var a=e[2];if(t===r&&r===a){if(t<8){return 16}if(t>248){return 231}return Math.round((t-8)/247*24)+232}var n=16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(a/255*5);return n};o.ansi16.rgb=function(e){var t=e%10;if(t===0||t===7){if(e>50){t+=3.5}t=t/10.5*255;return[t,t,t]}var r=(~~(e>50)+1)*.5;var a=(t&1)*r*255;var n=(t>>1&1)*r*255;var i=(t>>2&1)*r*255;return[a,n,i]};o.ansi256.rgb=function(e){if(e>=232){var t=(e-232)*10+8;return[t,t,t]}e-=16;var r;var a=Math.floor(e/36)/5*255;var n=Math.floor((r=e%36)/6)/5*255;var i=r%6/5*255;return[a,n,i]};o.rgb.hex=function(e){var t=((Math.round(e[0])&255)<<16)+((Math.round(e[1])&255)<<8)+(Math.round(e[2])&255);var r=t.toString(16).toUpperCase();return"000000".substring(r.length)+r};o.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t){return[0,0,0]}var r=t[0];if(t[0].length===3){r=r.split("").map((function(e){return e+e})).join("")}var a=parseInt(r,16);var n=a>>16&255;var i=a>>8&255;var o=a&255;return[n,i,o]};o.rgb.hcg=function(e){var t=e[0]/255;var r=e[1]/255;var a=e[2]/255;var n=Math.max(Math.max(t,r),a);var i=Math.min(Math.min(t,r),a);var o=n-i;var l;var d;if(o<1){l=i/(1-o)}else{l=0}if(o<=0){d=0}else if(n===t){d=(r-a)/o%6}else if(n===r){d=2+(a-t)/o}else{d=4+(t-r)/o+4}d/=6;d%=1;return[d*360,o*100,l*100]};o.hsl.hcg=function(e){var t=e[1]/100;var r=e[2]/100;var a=1;var n=0;if(r<.5){a=2*t*r}else{a=2*t*(1-r)}if(a<1){n=(r-.5*a)/(1-a)}return[e[0],a*100,n*100]};o.hsv.hcg=function(e){var t=e[1]/100;var r=e[2]/100;var a=t*r;var n=0;if(a<1){n=(r-a)/(1-a)}return[e[0],a*100,n*100]};o.hcg.rgb=function(e){var t=e[0]/360;var r=e[1]/100;var a=e[2]/100;if(r===0){return[a*255,a*255,a*255]}var n=[0,0,0];var i=t%1*6;var o=i%1;var l=1-o;var d=0;switch(Math.floor(i)){case 0:n[0]=1;n[1]=o;n[2]=0;break;case 1:n[0]=l;n[1]=1;n[2]=0;break;case 2:n[0]=0;n[1]=1;n[2]=o;break;case 3:n[0]=0;n[1]=l;n[2]=1;break;case 4:n[0]=o;n[1]=0;n[2]=1;break;default:n[0]=1;n[1]=0;n[2]=l}d=(1-r)*a;return[(r*n[0]+d)*255,(r*n[1]+d)*255,(r*n[2]+d)*255]};o.hcg.hsv=function(e){var t=e[1]/100;var r=e[2]/100;var a=t+r*(1-t);var n=0;if(a>0){n=t/a}return[e[0],n*100,a*100]};o.hcg.hsl=function(e){var t=e[1]/100;var r=e[2]/100;var a=r*(1-t)+.5*t;var n=0;if(a>0&&a<.5){n=t/(2*a)}else if(a>=.5&&a<1){n=t/(2*(1-a))}return[e[0],n*100,a*100]};o.hcg.hwb=function(e){var t=e[1]/100;var r=e[2]/100;var a=t+r*(1-t);return[e[0],(a-t)*100,(1-a)*100]};o.hwb.hcg=function(e){var t=e[1]/100;var r=e[2]/100;var a=1-r;var n=a-t;var i=0;if(n<1){i=(a-n)/(1-n)}return[e[0],n*100,i*100]};o.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]};o.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]};o.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]};o.gray.hsl=o.gray.hsv=function(e){return[0,0,e[0]]};o.gray.hwb=function(e){return[0,100,e[0]]};o.gray.cmyk=function(e){return[0,0,0,e[0]]};o.gray.lab=function(e){return[e[0],0,0]};o.gray.hex=function(e){var t=Math.round(e[0]/100*255)&255;var r=(t<<16)+(t<<8)+t;var a=r.toString(16).toUpperCase();return"000000".substring(a.length)+a};o.rgb.gray=function(e){var t=(e[0]+e[1]+e[2])/3;return[t/255*100]}},6931:(e,t,r)=>{var a=r(7391);var n=r(880);var i={};var o=Object.keys(a);function wrapRaw(e){var wrappedFn=function(t){if(t===undefined||t===null){return t}if(arguments.length>1){t=Array.prototype.slice.call(arguments)}return e(t)};if("conversion"in e){wrappedFn.conversion=e.conversion}return wrappedFn}function wrapRounded(e){var wrappedFn=function(t){if(t===undefined||t===null){return t}if(arguments.length>1){t=Array.prototype.slice.call(arguments)}var r=e(t);if(typeof r==="object"){for(var a=r.length,n=0;n<a;n++){r[n]=Math.round(r[n])}}return r};if("conversion"in e){wrappedFn.conversion=e.conversion}return wrappedFn}o.forEach((function(e){i[e]={};Object.defineProperty(i[e],"channels",{value:a[e].channels});Object.defineProperty(i[e],"labels",{value:a[e].labels});var t=n(e);var r=Object.keys(t);r.forEach((function(r){var a=t[r];i[e][r]=wrapRounded(a);i[e][r].raw=wrapRaw(a)}))}));e.exports=i},880:(e,t,r)=>{var a=r(7391);function buildGraph(){var e={};var t=Object.keys(a);for(var r=t.length,n=0;n<r;n++){e[t[n]]={distance:-1,parent:null}}return e}function deriveBFS(e){var t=buildGraph();var r=[e];t[e].distance=0;while(r.length){var n=r.pop();var i=Object.keys(a[n]);for(var o=i.length,l=0;l<o;l++){var d=i[l];var u=t[d];if(u.distance===-1){u.distance=t[n].distance+1;u.parent=n;r.unshift(d)}}}return t}function link(e,t){return function(r){return t(e(r))}}function wrapConversion(e,t){var r=[t[e].parent,e];var n=a[t[e].parent][e];var i=t[e].parent;while(t[i].parent){r.unshift(t[i].parent);n=link(a[t[i].parent][i],n);i=t[i].parent}n.conversion=r;return n}e.exports=function(e){var t=deriveBFS(e);var r={};var a=Object.keys(t);for(var n=a.length,i=0;i<n;i++){var o=a[i];var l=t[o];if(l.parent===null){continue}r[o]=wrapConversion(o,t)}return r}},8510:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},8932:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}t.Deprecation=Deprecation},6702:e=>{var t=["am","are","aren't","be","been","being","he's","here's","here's","how's","i'm","is","isn't","it's","she's","that's","there's","they're","was","wasn't","we're","were","weren't","what's","where's","who's","you're"];var r=new RegExp("\\b("+t.join("|")+")\\b","gi");e.exports=function(e){var t=[];if(!e||e.length===0)return t;e=e.replace(/[\u2018\u2019]/g,"'");while(match=r.exec(e)){var a=match[0].toLowerCase();t.push({index:match.index,offset:a.length})}return t}},3505:(e,t,r)=>{"use strict";var a=r(3837);var n=r(7604);var i=function errorEx(e,t){if(!e||e.constructor!==String){t=e||{};e=Error.name}var r=function ErrorEXError(a){if(!this){return new ErrorEXError(a)}a=a instanceof Error?a.message:a||this.message;Error.call(this,a);Error.captureStackTrace(this,r);this.name=e;Object.defineProperty(this,"message",{configurable:true,enumerable:false,get:function(){var e=a.split(/\r?\n/g);for(var r in t){if(!t.hasOwnProperty(r)){continue}var i=t[r];if("message"in i){e=i.message(this[r],e)||e;if(!n(e)){e=[e]}}}return e.join("\n")},set:function(e){a=e}});var i=null;var o=Object.getOwnPropertyDescriptor(this,"stack");var l=o.get;var d=o.value;delete o.value;delete o.writable;o.set=function(e){i=e};o.get=function(){var e=(i||(l?l.call(this):d)).split(/\r?\n+/g);if(!i){e[0]=this.name+": "+this.message}var r=1;for(var a in t){if(!t.hasOwnProperty(a)){continue}var n=t[a];if("line"in n){var o=n.line(this[a]);if(o){e.splice(r++,0,"    "+o)}}if("stack"in n){n.stack(this[a],e)}}return e.join("\n")};Object.defineProperty(this,"stack",o)};if(Object.setPrototypeOf){Object.setPrototypeOf(r.prototype,Error.prototype);Object.setPrototypeOf(r,Error)}else{a.inherits(r,Error)}return r};i.append=function(e,t){return{message:function(r,a){r=r||t;if(r){a[0]+=" "+e.replace("%s",r.toString())}return a}}};i.line=function(e,t){return{line:function(r){r=r||t;if(r){return e.replace("%s",r.toString())}return null}}};e.exports=i},8691:e=>{"use strict";var t=/[|\\{}()[\]^$+*?.]/g;e.exports=function(e){if(typeof e!=="string"){throw new TypeError("Expected a string")}return e.replace(t,"\\$&")}},8171:e=>{"use strict";var t=Object.prototype.hasOwnProperty;var r=Object.prototype.toString;var a=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var i=function isArray(e){if(typeof Array.isArray==="function"){return Array.isArray(e)}return r.call(e)==="[object Array]"};var o=function isPlainObject(e){if(!e||r.call(e)!=="[object Object]"){return false}var a=t.call(e,"constructor");var n=e.constructor&&e.constructor.prototype&&t.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!a&&!n){return false}var i;for(i in e){}return typeof i==="undefined"||t.call(e,i)};var l=function setProperty(e,t){if(a&&t.name==="__proto__"){a(e,t.name,{enumerable:true,configurable:true,value:t.newValue,writable:true})}else{e[t.name]=t.newValue}};var d=function getProperty(e,r){if(r==="__proto__"){if(!t.call(e,r)){return void 0}else if(n){return n(e,r).value}}return e[r]};e.exports=function extend(){var e,t,r,a,n,u;var c=arguments[0];var h=1;var g=arguments.length;var v=false;if(typeof c==="boolean"){v=c;c=arguments[1]||{};h=2}if(c==null||typeof c!=="object"&&typeof c!=="function"){c={}}for(;h<g;++h){e=arguments[h];if(e!=null){for(t in e){r=d(c,t);a=d(e,t);if(c!==a){if(v&&a&&(o(a)||(n=i(a)))){if(n){n=false;u=r&&i(r)?r:[]}else{u=r&&o(r)?r:{}}l(c,{name:t,newValue:extend(v,u,a)})}else if(typeof a!=="undefined"){l(c,{name:t,newValue:a})}}}}}return c}},7852:e=>{(function(){var t;if(true){t=e.exports=format}else{}t.format=format;t.vsprintf=vsprintf;if(typeof console!=="undefined"&&typeof console.log==="function"){t.printf=printf}function printf(){console.log(format.apply(null,arguments))}function vsprintf(e,t){return format.apply(null,[e].concat(t))}function format(e){var t=1,r=[].slice.call(arguments),a=0,n=e.length,i="",o,l=false,d,u,c=false,h,nextArg=function(){return r[t++]},slurpNumber=function(){var t="";while(/\d/.test(e[a])){t+=e[a++];o=e[a]}return t.length>0?parseInt(t):null};for(;a<n;++a){o=e[a];if(l){l=false;if(o=="."){c=false;o=e[++a]}else if(o=="0"&&e[a+1]=="."){c=true;a+=2;o=e[a]}else{c=true}h=slurpNumber();switch(o){case"b":i+=parseInt(nextArg(),10).toString(2);break;case"c":d=nextArg();if(typeof d==="string"||d instanceof String)i+=d;else i+=String.fromCharCode(parseInt(d,10));break;case"d":i+=parseInt(nextArg(),10);break;case"f":u=String(parseFloat(nextArg()).toFixed(h||6));i+=c?u:u.replace(/^0/,"");break;case"j":i+=JSON.stringify(nextArg());break;case"o":i+="0"+parseInt(nextArg(),10).toString(8);break;case"s":i+=nextArg();break;case"x":i+="0x"+parseInt(nextArg(),10).toString(16);break;case"X":i+="0x"+parseInt(nextArg(),10).toString(16).toUpperCase();break;default:i+=o;break}}else if(o==="%"){l=true}else{i+=o}}return i}})()},2364:e=>{var Dictionary=function(e){this.rules={};this.dictionaryTable={};this.compoundRules=[];this.compoundRuleCodes={};this.replacementTable=[];this.flags={};if(e)this.load(e)};Dictionary.prototype.load=function(e){for(var t in e){this[t]=e[t]}};Dictionary.prototype.toJSON=function(e){return{rules:this.rules,dictionaryTable:this.dictionaryTable,compoundRules:this.compoundRules,compoundRuleCodes:this.compoundRuleCodes,replacementTable:this.replacementTable,flags:this.flags}};Dictionary.prototype.parse=function(e){if(!e.aff&&!e.dic){throw"Invalid dictionary to parse"}this.rules=this._parseAFF(""+e.aff);this.compoundRuleCodes={};for(var t=0,r=this.compoundRules.length;t<r;t++){var a=this.compoundRules[t];for(var n=0,i=a.length;n<i;n++){this.compoundRuleCodes[a[n]]=[]}}if("ONLYINCOMPOUND"in this.flags){this.compoundRuleCodes[this.flags.ONLYINCOMPOUND]=[]}this.dictionaryTable=this._parseDIC(""+e.dic);for(var t in this.compoundRuleCodes){if(this.compoundRuleCodes[t].length==0){delete this.compoundRuleCodes[t]}}for(var t=0,r=this.compoundRules.length;t<r;t++){var o=this.compoundRules[t];var l="";for(var n=0,i=o.length;n<i;n++){var d=o[n];if(d in this.compoundRuleCodes){l+="("+this.compoundRuleCodes[d].join("|")+")"}else{l+=d}}this.compoundRules[t]=new RegExp(l,"i")}};Dictionary.prototype._parseAFF=function(e){var t={};e=this._removeAffixComments(e);var r=e.split("\n");for(var a=0,n=r.length;a<n;a++){var i=r[a];var o=i.split(/\s+/);var l=o[0];if(l=="PFX"||l=="SFX"){var d=o[1];var u=o[2];var c=parseInt(o[3],10);var h=[];for(var g=a+1,v=a+1+c;g<v;g++){var i=r[g];var w=i.split(/\s+/);var b=w[2];var y=w[3].split("/");var k=y[0];if(k==="0")k="";var E=this.parseRuleCodes(y[1]);var D=w[4];var _={};_.add=k;if(E.length>0)_.continuationClasses=E;if(D!=="."){if(l==="SFX"){_.match=new RegExp(D+"$")}else{_.match=new RegExp("^"+D)}}if(b!="0"){if(l==="SFX"){_.remove=new RegExp(b+"$")}else{_.remove=b}}h.push(_)}t[d]={type:l,combineable:u=="Y",entries:h};a+=c}else if(l==="COMPOUNDRULE"){var c=parseInt(o[1],10);for(var g=a+1,v=a+1+c;g<v;g++){var i=r[g];var w=i.split(/\s+/);this.compoundRules.push(w[1])}a+=c}else if(l==="REP"){var w=i.split(/\s+/);if(w.length===3){this.replacementTable.push([w[1],w[2]])}}else{this.flags[l]=o[1]}}return t};Dictionary.prototype._removeAffixComments=function(e){e=e.replace(/#.*$/gm,"");e=e.replace(/^\s\s*/m,"").replace(/\s\s*$/m,"");e=e.replace(/\n{2,}/g,"\n");e=e.replace(/^\s\s*/,"").replace(/\s\s*$/,"");return e};Dictionary.prototype._parseDIC=function(e){e=this._removeDicComments(e);var t=e.split("\n");var r={};function addWord(e,t){if(!(e in r)||typeof r[e]!="object"){r[e]=[]}r[e].push(t)}for(var a=1,n=t.length;a<n;a++){var i=t[a];var o=i.split("/",2);var l=o[0];if(o.length>1){var d=this.parseRuleCodes(o[1]);if(!("NEEDAFFIX"in this.flags)||d.indexOf(this.flags.NEEDAFFIX)==-1){addWord(l,d)}for(var u=0,c=d.length;u<c;u++){var h=d[u];var g=this.rules[h];if(g){var v=this._applyRule(l,g);for(var w=0,b=v.length;w<b;w++){var y=v[w];addWord(y,[]);if(g.combineable){for(var k=u+1;k<c;k++){var E=d[k];var D=this.rules[E];if(D){if(D.combineable&&g.type!=D.type){var _=this._applyRule(y,D);for(var A=0,S=_.length;A<S;A++){var x=_[A];addWord(x,[])}}}}}}}if(h in this.compoundRuleCodes){this.compoundRuleCodes[h].push(l)}}}else{addWord(l.trim(),[])}}return r};Dictionary.prototype._removeDicComments=function(e){e=e.replace(/^\t.*$/gm,"");return e;e=e.replace(/^\s\s*/m,"").replace(/\s\s*$/m,"");e=e.replace(/\n{2,}/g,"\n");e=e.replace(/^\s\s*/,"").replace(/\s\s*$/,"");return e};Dictionary.prototype.parseRuleCodes=function(e){if(!e){return[]}else if(!("FLAG"in this.flags)){return e.split("")}else if(this.flags.FLAG==="long"){var t=[];for(var r=0,a=e.length;r<a;r+=2){t.push(e.substr(r,2))}return t}else if(this.flags.FLAG==="num"){return e.split(",")}};Dictionary.prototype._applyRule=function(e,t){var r=t.entries;var a=[];for(var n=0,i=r.length;n<i;n++){var o=r[n];if(!o.match||e.match(o.match)){var l=e;if(o.remove){l=l.replace(o.remove,"")}if(t.type==="SFX"){l=l+o.add}else{l=o.add+l}a.push(l);if("continuationClasses"in o){for(var d=0,u=o.continuationClasses.length;d<u;d++){var c=this.rules[o.continuationClasses[d]];if(c){a=a.concat(this._applyRule(l,c))}}}}}return a};e.exports=Dictionary},7993:(e,t,r)=>{var a=r(2364);var Spellchecker=function(e){this.dict=null;if(e)this.use(e)};Spellchecker.prototype.use=function(e){this.dict=new a(e)};Spellchecker.prototype.parse=function(e){var t=new a;t.parse(e);this.use(t);return t.toJSON()};Spellchecker.prototype.check=function(e){var t=e.replace(/^\s\s*/,"").replace(/\s\s*$/,"");if(this.checkExact(t)){return true}if(t.toUpperCase()===t){var r=t[0]+t.substring(1).toLowerCase();if(this.hasFlag(r,"KEEPCASE")){return false}if(this.checkExact(r)){return true}}var a=t.toLowerCase();if(a!==t){if(this.hasFlag(a,"KEEPCASE")){return false}if(this.checkExact(a)){return true}}return false};Spellchecker.prototype.checkExact=function(e){var t=this.dict.dictionaryTable[e];if(typeof t==="undefined"){if("COMPOUNDMIN"in this.dict.flags&&e.length>=this.dict.flags.COMPOUNDMIN){for(var r=0,a=this.dict.compoundRules.length;r<a;r++){if(e.match(this.dict.compoundRules[r])){return true}}}return false}else{for(var r=0,a=t.length;r<a;r++){if(!this.hasFlag(e,"ONLYINCOMPOUND",t[r])){return true}}return false}};Spellchecker.prototype.hasFlag=function(e,t,r){if(t in this.dict.flags){if(typeof r==="undefined"){var r=Array.prototype.concat.apply([],this.dict.dictionaryTable[e])}if(r&&r.indexOf(this.dict.flags[t])!==-1){return true}}return false};Spellchecker.prototype.suggest=function(e,t){if(!t)t=5;if(this.check(e))return[];for(var r=0,a=this.dict.replacementTable.length;r<a;r++){var n=this.dict.replacementTable[r];if(e.indexOf(n[0])!==-1){var i=e.replace(n[0],n[1]);if(this.check(i)){return[i]}}}var o=this;o.dict.alphabet="abcdefghijklmnopqrstuvwxyz";function edits1(e){var t=[];for(var r=0,a=e.length;r<a;r++){var n=e[r];var i=[];for(var l=0,d=n.length+1;l<d;l++){i.push([n.substring(0,l),n.substring(l,n.length)])}var u=[];for(var l=0,d=i.length;l<d;l++){var c=i[l];if(c[1]){u.push(c[0]+c[1].substring(1))}}var h=[];for(var l=0,d=i.length;l<d;l++){var c=i[l];if(c[1].length>1){h.push(c[0]+c[1][1]+c[1][0]+c[1].substring(2))}}var g=[];for(var l=0,d=i.length;l<d;l++){var c=i[l];if(c[1]){for(var v=0,w=o.dict.alphabet.length;v<w;v++){g.push(c[0]+o.dict.alphabet[v]+c[1].substring(1))}}}var b=[];for(var l=0,d=i.length;l<d;l++){var c=i[l];if(c[1]){for(var v=0,w=o.dict.alphabet.length;v<w;v++){g.push(c[0]+o.dict.alphabet[v]+c[1])}}}t=t.concat(u);t=t.concat(h);t=t.concat(g);t=t.concat(b)}return t}function known(e){var t=[];for(var r=0;r<e.length;r++){if(o.check(e[r])){t.push(e[r])}}return t}function correct(e){var r=edits1([e]);var a=edits1(r);var n=known(r).concat(known(a));var i={};for(var l=0,d=n.length;l<d;l++){if(!(n[l]in i)){i[n[l]]=1}else{i[n[l]]+=1}}var u=[];for(var l in i){u.push([l,i[l]])}function sorter(e,t){if(e[1]<t[1]){return-1}return 1}u.sort(sorter).reverse();var c=[];for(var l=0,d=Math.min(t,u.length);l<d;l++){if(!o.hasFlag(u[l][0],"NOSUGGEST")){c.push(u[l][0])}}return c}return correct(e)};e.exports=Spellchecker},7604:e=>{"use strict";e.exports=function isArrayish(e){if(!e){return false}return e instanceof Array||Array.isArray(e)||e.length>=0&&e.splice instanceof Function}},5625:e=>{
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function isBuffer(e){return e!=null&&e.constructor!=null&&typeof e.constructor.isBuffer==="function"&&e.constructor.isBuffer(e)}},3287:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,r;if(isObject(e)===false)return false;t=e.constructor;if(t===undefined)return true;r=t.prototype;if(isObject(r)===false)return false;if(r.hasOwnProperty("isPrototypeOf")===false){return false}return true}t.isPlainObject=isPlainObject},1531:(e,t)=>{Object.defineProperty(t,"__esModule",{value:true});t["default"]=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:undefined};if(e[1])t.type="string",t.closed=!!(e[3]||e[4]);else if(e[5])t.type="comment";else if(e[6])t.type="comment",t.closed=!!e[7];else if(e[8])t.type="regex";else if(e[9])t.type="number";else if(e[10])t.type="name";else if(e[11])t.type="punctuator";else if(e[12])t.type="whitespace";return t}},1917:(e,t,r)=>{"use strict";var a=r(1161);var n=r(8866);function renamed(e,t){return function(){throw new Error("Function yaml."+e+" is removed in js-yaml 4. "+"Use yaml."+t+" instead, which is now safe by default.")}}e.exports.Type=r(6073);e.exports.Schema=r(1082);e.exports.FAILSAFE_SCHEMA=r(8562);e.exports.JSON_SCHEMA=r(1035);e.exports.CORE_SCHEMA=r(2011);e.exports.DEFAULT_SCHEMA=r(8759);e.exports.load=a.load;e.exports.loadAll=a.loadAll;e.exports.dump=n.dump;e.exports.YAMLException=r(8179);e.exports.types={binary:r(7900),float:r(2705),map:r(6150),null:r(721),pairs:r(6860),set:r(9548),timestamp:r(9212),bool:r(4993),int:r(1615),merge:r(6104),omap:r(9046),seq:r(7283),str:r(3619)};e.exports.safeLoad=renamed("safeLoad","load");e.exports.safeLoadAll=renamed("safeLoadAll","loadAll");e.exports.safeDump=renamed("safeDump","dump")},6829:e=>{"use strict";function isNothing(e){return typeof e==="undefined"||e===null}function isObject(e){return typeof e==="object"&&e!==null}function toArray(e){if(Array.isArray(e))return e;else if(isNothing(e))return[];return[e]}function extend(e,t){var r,a,n,i;if(t){i=Object.keys(t);for(r=0,a=i.length;r<a;r+=1){n=i[r];e[n]=t[n]}}return e}function repeat(e,t){var r="",a;for(a=0;a<t;a+=1){r+=e}return r}function isNegativeZero(e){return e===0&&Number.NEGATIVE_INFINITY===1/e}e.exports.isNothing=isNothing;e.exports.isObject=isObject;e.exports.toArray=toArray;e.exports.repeat=repeat;e.exports.isNegativeZero=isNegativeZero;e.exports.extend=extend},8866:(e,t,r)=>{"use strict";var a=r(6829);var n=r(8179);var i=r(8759);var o=Object.prototype.toString;var l=Object.prototype.hasOwnProperty;var d=65279;var u=9;var c=10;var h=13;var g=32;var v=33;var w=34;var b=35;var y=37;var k=38;var E=39;var D=42;var _=44;var A=45;var S=58;var x=61;var C=62;var T=63;var F=64;var O=91;var P=93;var L=96;var R=123;var B=124;var N=125;var j={};j[0]="\\0";j[7]="\\a";j[8]="\\b";j[9]="\\t";j[10]="\\n";j[11]="\\v";j[12]="\\f";j[13]="\\r";j[27]="\\e";j[34]='\\"';j[92]="\\\\";j[133]="\\N";j[160]="\\_";j[8232]="\\L";j[8233]="\\P";var I=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];var q=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function compileStyleMap(e,t){var r,a,n,i,o,d,u;if(t===null)return{};r={};a=Object.keys(t);for(n=0,i=a.length;n<i;n+=1){o=a[n];d=String(t[o]);if(o.slice(0,2)==="!!"){o="tag:yaml.org,2002:"+o.slice(2)}u=e.compiledTypeMap["fallback"][o];if(u&&l.call(u.styleAliases,d)){d=u.styleAliases[d]}r[o]=d}return r}function encodeHex(e){var t,r,i;t=e.toString(16).toUpperCase();if(e<=255){r="x";i=2}else if(e<=65535){r="u";i=4}else if(e<=4294967295){r="U";i=8}else{throw new n("code point within a string may not be greater than 0xFFFFFFFF")}return"\\"+r+a.repeat("0",i-t.length)+t}var U=1,G=2;function State(e){this.schema=e["schema"]||i;this.indent=Math.max(1,e["indent"]||2);this.noArrayIndent=e["noArrayIndent"]||false;this.skipInvalid=e["skipInvalid"]||false;this.flowLevel=a.isNothing(e["flowLevel"])?-1:e["flowLevel"];this.styleMap=compileStyleMap(this.schema,e["styles"]||null);this.sortKeys=e["sortKeys"]||false;this.lineWidth=e["lineWidth"]||80;this.noRefs=e["noRefs"]||false;this.noCompatMode=e["noCompatMode"]||false;this.condenseFlow=e["condenseFlow"]||false;this.quotingType=e["quotingType"]==='"'?G:U;this.forceQuotes=e["forceQuotes"]||false;this.replacer=typeof e["replacer"]==="function"?e["replacer"]:null;this.implicitTypes=this.schema.compiledImplicit;this.explicitTypes=this.schema.compiledExplicit;this.tag=null;this.result="";this.duplicates=[];this.usedDuplicates=null}function indentString(e,t){var r=a.repeat(" ",t),n=0,i=-1,o="",l,d=e.length;while(n<d){i=e.indexOf("\n",n);if(i===-1){l=e.slice(n);n=d}else{l=e.slice(n,i+1);n=i+1}if(l.length&&l!=="\n")o+=r;o+=l}return o}function generateNextLine(e,t){return"\n"+a.repeat(" ",e.indent*t)}function testImplicitResolving(e,t){var r,a,n;for(r=0,a=e.implicitTypes.length;r<a;r+=1){n=e.implicitTypes[r];if(n.resolve(t)){return true}}return false}function isWhitespace(e){return e===g||e===u}function isPrintable(e){return 32<=e&&e<=126||161<=e&&e<=55295&&e!==8232&&e!==8233||57344<=e&&e<=65533&&e!==d||65536<=e&&e<=1114111}function isNsCharOrWhitespace(e){return isPrintable(e)&&e!==d&&e!==h&&e!==c}function isPlainSafe(e,t,r){var a=isNsCharOrWhitespace(e);var n=a&&!isWhitespace(e);return(r?a:a&&e!==_&&e!==O&&e!==P&&e!==R&&e!==N)&&e!==b&&!(t===S&&!n)||isNsCharOrWhitespace(t)&&!isWhitespace(t)&&e===b||t===S&&n}function isPlainSafeFirst(e){return isPrintable(e)&&e!==d&&!isWhitespace(e)&&e!==A&&e!==T&&e!==S&&e!==_&&e!==O&&e!==P&&e!==R&&e!==N&&e!==b&&e!==k&&e!==D&&e!==v&&e!==B&&e!==x&&e!==C&&e!==E&&e!==w&&e!==y&&e!==F&&e!==L}function isPlainSafeLast(e){return!isWhitespace(e)&&e!==S}function codePointAt(e,t){var r=e.charCodeAt(t),a;if(r>=55296&&r<=56319&&t+1<e.length){a=e.charCodeAt(t+1);if(a>=56320&&a<=57343){return(r-55296)*1024+a-56320+65536}}return r}function needIndentIndicator(e){var t=/^\n* /;return t.test(e)}var V=1,z=2,M=3,H=4,$=5;function chooseScalarStyle(e,t,r,a,n,i,o,l){var d;var u=0;var h=null;var g=false;var v=false;var w=a!==-1;var b=-1;var y=isPlainSafeFirst(codePointAt(e,0))&&isPlainSafeLast(codePointAt(e,e.length-1));if(t||o){for(d=0;d<e.length;u>=65536?d+=2:d++){u=codePointAt(e,d);if(!isPrintable(u)){return $}y=y&&isPlainSafe(u,h,l);h=u}}else{for(d=0;d<e.length;u>=65536?d+=2:d++){u=codePointAt(e,d);if(u===c){g=true;if(w){v=v||d-b-1>a&&e[b+1]!==" ";b=d}}else if(!isPrintable(u)){return $}y=y&&isPlainSafe(u,h,l);h=u}v=v||w&&(d-b-1>a&&e[b+1]!==" ")}if(!g&&!v){if(y&&!o&&!n(e)){return V}return i===G?$:z}if(r>9&&needIndentIndicator(e)){return $}if(!o){return v?H:M}return i===G?$:z}function writeScalar(e,t,r,a,i){e.dump=function(){if(t.length===0){return e.quotingType===G?'""':"''"}if(!e.noCompatMode){if(I.indexOf(t)!==-1||q.test(t)){return e.quotingType===G?'"'+t+'"':"'"+t+"'"}}var o=e.indent*Math.max(1,r);var l=e.lineWidth===-1?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-o);var d=a||e.flowLevel>-1&&r>=e.flowLevel;function testAmbiguity(t){return testImplicitResolving(e,t)}switch(chooseScalarStyle(t,d,e.indent,l,testAmbiguity,e.quotingType,e.forceQuotes&&!a,i)){case V:return t;case z:return"'"+t.replace(/'/g,"''")+"'";case M:return"|"+blockHeader(t,e.indent)+dropEndingNewline(indentString(t,o));case H:return">"+blockHeader(t,e.indent)+dropEndingNewline(indentString(foldString(t,l),o));case $:return'"'+escapeString(t,l)+'"';default:throw new n("impossible error: invalid scalar style")}}()}function blockHeader(e,t){var r=needIndentIndicator(e)?String(t):"";var a=e[e.length-1]==="\n";var n=a&&(e[e.length-2]==="\n"||e==="\n");var i=n?"+":a?"":"-";return r+i+"\n"}function dropEndingNewline(e){return e[e.length-1]==="\n"?e.slice(0,-1):e}function foldString(e,t){var r=/(\n+)([^\n]*)/g;var a=function(){var a=e.indexOf("\n");a=a!==-1?a:e.length;r.lastIndex=a;return foldLine(e.slice(0,a),t)}();var n=e[0]==="\n"||e[0]===" ";var i;var o;while(o=r.exec(e)){var l=o[1],d=o[2];i=d[0]===" ";a+=l+(!n&&!i&&d!==""?"\n":"")+foldLine(d,t);n=i}return a}function foldLine(e,t){if(e===""||e[0]===" ")return e;var r=/ [^ ]/g;var a;var n=0,i,o=0,l=0;var d="";while(a=r.exec(e)){l=a.index;if(l-n>t){i=o>n?o:l;d+="\n"+e.slice(n,i);n=i+1}o=l}d+="\n";if(e.length-n>t&&o>n){d+=e.slice(n,o)+"\n"+e.slice(o+1)}else{d+=e.slice(n)}return d.slice(1)}function escapeString(e){var t="";var r=0;var a;for(var n=0;n<e.length;r>=65536?n+=2:n++){r=codePointAt(e,n);a=j[r];if(!a&&isPrintable(r)){t+=e[n];if(r>=65536)t+=e[n+1]}else{t+=a||encodeHex(r)}}return t}function writeFlowSequence(e,t,r){var a="",n=e.tag,i,o,l;for(i=0,o=r.length;i<o;i+=1){l=r[i];if(e.replacer){l=e.replacer.call(r,String(i),l)}if(writeNode(e,t,l,false,false)||typeof l==="undefined"&&writeNode(e,t,null,false,false)){if(a!=="")a+=","+(!e.condenseFlow?" ":"");a+=e.dump}}e.tag=n;e.dump="["+a+"]"}function writeBlockSequence(e,t,r,a){var n="",i=e.tag,o,l,d;for(o=0,l=r.length;o<l;o+=1){d=r[o];if(e.replacer){d=e.replacer.call(r,String(o),d)}if(writeNode(e,t+1,d,true,true,false,true)||typeof d==="undefined"&&writeNode(e,t+1,null,true,true,false,true)){if(!a||n!==""){n+=generateNextLine(e,t)}if(e.dump&&c===e.dump.charCodeAt(0)){n+="-"}else{n+="- "}n+=e.dump}}e.tag=i;e.dump=n||"[]"}function writeFlowMapping(e,t,r){var a="",n=e.tag,i=Object.keys(r),o,l,d,u,c;for(o=0,l=i.length;o<l;o+=1){c="";if(a!=="")c+=", ";if(e.condenseFlow)c+='"';d=i[o];u=r[d];if(e.replacer){u=e.replacer.call(r,d,u)}if(!writeNode(e,t,d,false,false)){continue}if(e.dump.length>1024)c+="? ";c+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" ");if(!writeNode(e,t,u,false,false)){continue}c+=e.dump;a+=c}e.tag=n;e.dump="{"+a+"}"}function writeBlockMapping(e,t,r,a){var i="",o=e.tag,l=Object.keys(r),d,u,h,g,v,w;if(e.sortKeys===true){l.sort()}else if(typeof e.sortKeys==="function"){l.sort(e.sortKeys)}else if(e.sortKeys){throw new n("sortKeys must be a boolean or a function")}for(d=0,u=l.length;d<u;d+=1){w="";if(!a||i!==""){w+=generateNextLine(e,t)}h=l[d];g=r[h];if(e.replacer){g=e.replacer.call(r,h,g)}if(!writeNode(e,t+1,h,true,true,true)){continue}v=e.tag!==null&&e.tag!=="?"||e.dump&&e.dump.length>1024;if(v){if(e.dump&&c===e.dump.charCodeAt(0)){w+="?"}else{w+="? "}}w+=e.dump;if(v){w+=generateNextLine(e,t)}if(!writeNode(e,t+1,g,true,v)){continue}if(e.dump&&c===e.dump.charCodeAt(0)){w+=":"}else{w+=": "}w+=e.dump;i+=w}e.tag=o;e.dump=i||"{}"}function detectType(e,t,r){var a,i,d,u,c,h;i=r?e.explicitTypes:e.implicitTypes;for(d=0,u=i.length;d<u;d+=1){c=i[d];if((c.instanceOf||c.predicate)&&(!c.instanceOf||typeof t==="object"&&t instanceof c.instanceOf)&&(!c.predicate||c.predicate(t))){if(r){if(c.multi&&c.representName){e.tag=c.representName(t)}else{e.tag=c.tag}}else{e.tag="?"}if(c.represent){h=e.styleMap[c.tag]||c.defaultStyle;if(o.call(c.represent)==="[object Function]"){a=c.represent(t,h)}else if(l.call(c.represent,h)){a=c.represent[h](t,h)}else{throw new n("!<"+c.tag+'> tag resolver accepts not "'+h+'" style')}e.dump=a}return true}}return false}function writeNode(e,t,r,a,i,l,d){e.tag=null;e.dump=r;if(!detectType(e,r,false)){detectType(e,r,true)}var u=o.call(e.dump);var c=a;var h;if(a){a=e.flowLevel<0||e.flowLevel>t}var g=u==="[object Object]"||u==="[object Array]",v,w;if(g){v=e.duplicates.indexOf(r);w=v!==-1}if(e.tag!==null&&e.tag!=="?"||w||e.indent!==2&&t>0){i=false}if(w&&e.usedDuplicates[v]){e.dump="*ref_"+v}else{if(g&&w&&!e.usedDuplicates[v]){e.usedDuplicates[v]=true}if(u==="[object Object]"){if(a&&Object.keys(e.dump).length!==0){writeBlockMapping(e,t,e.dump,i);if(w){e.dump="&ref_"+v+e.dump}}else{writeFlowMapping(e,t,e.dump);if(w){e.dump="&ref_"+v+" "+e.dump}}}else if(u==="[object Array]"){if(a&&e.dump.length!==0){if(e.noArrayIndent&&!d&&t>0){writeBlockSequence(e,t-1,e.dump,i)}else{writeBlockSequence(e,t,e.dump,i)}if(w){e.dump="&ref_"+v+e.dump}}else{writeFlowSequence(e,t,e.dump);if(w){e.dump="&ref_"+v+" "+e.dump}}}else if(u==="[object String]"){if(e.tag!=="?"){writeScalar(e,e.dump,t,l,c)}}else if(u==="[object Undefined]"){return false}else{if(e.skipInvalid)return false;throw new n("unacceptable kind of an object to dump "+u)}if(e.tag!==null&&e.tag!=="?"){h=encodeURI(e.tag[0]==="!"?e.tag.slice(1):e.tag).replace(/!/g,"%21");if(e.tag[0]==="!"){h="!"+h}else if(h.slice(0,18)==="tag:yaml.org,2002:"){h="!!"+h.slice(18)}else{h="!<"+h+">"}e.dump=h+" "+e.dump}}return true}function getDuplicateReferences(e,t){var r=[],a=[],n,i;inspectNode(e,r,a);for(n=0,i=a.length;n<i;n+=1){t.duplicates.push(r[a[n]])}t.usedDuplicates=new Array(i)}function inspectNode(e,t,r){var a,n,i;if(e!==null&&typeof e==="object"){n=t.indexOf(e);if(n!==-1){if(r.indexOf(n)===-1){r.push(n)}}else{t.push(e);if(Array.isArray(e)){for(n=0,i=e.length;n<i;n+=1){inspectNode(e[n],t,r)}}else{a=Object.keys(e);for(n=0,i=a.length;n<i;n+=1){inspectNode(e[a[n]],t,r)}}}}}function dump(e,t){t=t||{};var r=new State(t);if(!r.noRefs)getDuplicateReferences(e,r);var a=e;if(r.replacer){a=r.replacer.call({"":a},"",a)}if(writeNode(r,0,a,true,true))return r.dump+"\n";return""}e.exports.dump=dump},8179:e=>{"use strict";function formatError(e,t){var r="",a=e.reason||"(unknown reason)";if(!e.mark)return a;if(e.mark.name){r+='in "'+e.mark.name+'" '}r+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")";if(!t&&e.mark.snippet){r+="\n\n"+e.mark.snippet}return a+" "+r}function YAMLException(e,t){Error.call(this);this.name="YAMLException";this.reason=e;this.mark=t;this.message=formatError(this,false);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}else{this.stack=(new Error).stack||""}}YAMLException.prototype=Object.create(Error.prototype);YAMLException.prototype.constructor=YAMLException;YAMLException.prototype.toString=function toString(e){return this.name+": "+formatError(this,e)};e.exports=YAMLException},1161:(e,t,r)=>{"use strict";var a=r(6829);var n=r(8179);var i=r(6975);var o=r(8759);var l=Object.prototype.hasOwnProperty;var d=1;var u=2;var c=3;var h=4;var g=1;var v=2;var w=3;var b=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;var y=/[\x85\u2028\u2029]/;var k=/[,\[\]\{\}]/;var E=/^(?:!|!!|![a-z\-]+!)$/i;var D=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function _class(e){return Object.prototype.toString.call(e)}function is_EOL(e){return e===10||e===13}function is_WHITE_SPACE(e){return e===9||e===32}function is_WS_OR_EOL(e){return e===9||e===32||e===10||e===13}function is_FLOW_INDICATOR(e){return e===44||e===91||e===93||e===123||e===125}function fromHexCode(e){var t;if(48<=e&&e<=57){return e-48}t=e|32;if(97<=t&&t<=102){return t-97+10}return-1}function escapedHexLen(e){if(e===120){return 2}if(e===117){return 4}if(e===85){return 8}return 0}function fromDecimalCode(e){if(48<=e&&e<=57){return e-48}return-1}function simpleEscapeSequence(e){return e===48?"\0":e===97?"":e===98?"\b":e===116?"\t":e===9?"\t":e===110?"\n":e===118?"\v":e===102?"\f":e===114?"\r":e===101?"":e===32?" ":e===34?'"':e===47?"/":e===92?"\\":e===78?"":e===95?" ":e===76?"\u2028":e===80?"\u2029":""}function charFromCodepoint(e){if(e<=65535){return String.fromCharCode(e)}return String.fromCharCode((e-65536>>10)+55296,(e-65536&1023)+56320)}var _=new Array(256);var A=new Array(256);for(var S=0;S<256;S++){_[S]=simpleEscapeSequence(S)?1:0;A[S]=simpleEscapeSequence(S)}function State(e,t){this.input=e;this.filename=t["filename"]||null;this.schema=t["schema"]||o;this.onWarning=t["onWarning"]||null;this.legacy=t["legacy"]||false;this.json=t["json"]||false;this.listener=t["listener"]||null;this.implicitTypes=this.schema.compiledImplicit;this.typeMap=this.schema.compiledTypeMap;this.length=e.length;this.position=0;this.line=0;this.lineStart=0;this.lineIndent=0;this.firstTabInLine=-1;this.documents=[]}function generateError(e,t){var r={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};r.snippet=i(r);return new n(t,r)}function throwError(e,t){throw generateError(e,t)}function throwWarning(e,t){if(e.onWarning){e.onWarning.call(null,generateError(e,t))}}var x={YAML:function handleYamlDirective(e,t,r){var a,n,i;if(e.version!==null){throwError(e,"duplication of %YAML directive")}if(r.length!==1){throwError(e,"YAML directive accepts exactly one argument")}a=/^([0-9]+)\.([0-9]+)$/.exec(r[0]);if(a===null){throwError(e,"ill-formed argument of the YAML directive")}n=parseInt(a[1],10);i=parseInt(a[2],10);if(n!==1){throwError(e,"unacceptable YAML version of the document")}e.version=r[0];e.checkLineBreaks=i<2;if(i!==1&&i!==2){throwWarning(e,"unsupported YAML version of the document")}},TAG:function handleTagDirective(e,t,r){var a,n;if(r.length!==2){throwError(e,"TAG directive accepts exactly two arguments")}a=r[0];n=r[1];if(!E.test(a)){throwError(e,"ill-formed tag handle (first argument) of the TAG directive")}if(l.call(e.tagMap,a)){throwError(e,'there is a previously declared suffix for "'+a+'" tag handle')}if(!D.test(n)){throwError(e,"ill-formed tag prefix (second argument) of the TAG directive")}try{n=decodeURIComponent(n)}catch(t){throwError(e,"tag prefix is malformed: "+n)}e.tagMap[a]=n}};function captureSegment(e,t,r,a){var n,i,o,l;if(t<r){l=e.input.slice(t,r);if(a){for(n=0,i=l.length;n<i;n+=1){o=l.charCodeAt(n);if(!(o===9||32<=o&&o<=1114111)){throwError(e,"expected valid JSON character")}}}else if(b.test(l)){throwError(e,"the stream contains non-printable characters")}e.result+=l}}function mergeMappings(e,t,r,n){var i,o,d,u;if(!a.isObject(r)){throwError(e,"cannot merge mappings; the provided source object is unacceptable")}i=Object.keys(r);for(d=0,u=i.length;d<u;d+=1){o=i[d];if(!l.call(t,o)){t[o]=r[o];n[o]=true}}}function storeMappingPair(e,t,r,a,n,i,o,d,u){var c,h;if(Array.isArray(n)){n=Array.prototype.slice.call(n);for(c=0,h=n.length;c<h;c+=1){if(Array.isArray(n[c])){throwError(e,"nested arrays are not supported inside keys")}if(typeof n==="object"&&_class(n[c])==="[object Object]"){n[c]="[object Object]"}}}if(typeof n==="object"&&_class(n)==="[object Object]"){n="[object Object]"}n=String(n);if(t===null){t={}}if(a==="tag:yaml.org,2002:merge"){if(Array.isArray(i)){for(c=0,h=i.length;c<h;c+=1){mergeMappings(e,t,i[c],r)}}else{mergeMappings(e,t,i,r)}}else{if(!e.json&&!l.call(r,n)&&l.call(t,n)){e.line=o||e.line;e.lineStart=d||e.lineStart;e.position=u||e.position;throwError(e,"duplicated mapping key")}if(n==="__proto__"){Object.defineProperty(t,n,{configurable:true,enumerable:true,writable:true,value:i})}else{t[n]=i}delete r[n]}return t}function readLineBreak(e){var t;t=e.input.charCodeAt(e.position);if(t===10){e.position++}else if(t===13){e.position++;if(e.input.charCodeAt(e.position)===10){e.position++}}else{throwError(e,"a line break is expected")}e.line+=1;e.lineStart=e.position;e.firstTabInLine=-1}function skipSeparationSpace(e,t,r){var a=0,n=e.input.charCodeAt(e.position);while(n!==0){while(is_WHITE_SPACE(n)){if(n===9&&e.firstTabInLine===-1){e.firstTabInLine=e.position}n=e.input.charCodeAt(++e.position)}if(t&&n===35){do{n=e.input.charCodeAt(++e.position)}while(n!==10&&n!==13&&n!==0)}if(is_EOL(n)){readLineBreak(e);n=e.input.charCodeAt(e.position);a++;e.lineIndent=0;while(n===32){e.lineIndent++;n=e.input.charCodeAt(++e.position)}}else{break}}if(r!==-1&&a!==0&&e.lineIndent<r){throwWarning(e,"deficient indentation")}return a}function testDocumentSeparator(e){var t=e.position,r;r=e.input.charCodeAt(t);if((r===45||r===46)&&r===e.input.charCodeAt(t+1)&&r===e.input.charCodeAt(t+2)){t+=3;r=e.input.charCodeAt(t);if(r===0||is_WS_OR_EOL(r)){return true}}return false}function writeFoldedLines(e,t){if(t===1){e.result+=" "}else if(t>1){e.result+=a.repeat("\n",t-1)}}function readPlainScalar(e,t,r){var a,n,i,o,l,d,u,c,h=e.kind,g=e.result,v;v=e.input.charCodeAt(e.position);if(is_WS_OR_EOL(v)||is_FLOW_INDICATOR(v)||v===35||v===38||v===42||v===33||v===124||v===62||v===39||v===34||v===37||v===64||v===96){return false}if(v===63||v===45){n=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(n)||r&&is_FLOW_INDICATOR(n)){return false}}e.kind="scalar";e.result="";i=o=e.position;l=false;while(v!==0){if(v===58){n=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(n)||r&&is_FLOW_INDICATOR(n)){break}}else if(v===35){a=e.input.charCodeAt(e.position-1);if(is_WS_OR_EOL(a)){break}}else if(e.position===e.lineStart&&testDocumentSeparator(e)||r&&is_FLOW_INDICATOR(v)){break}else if(is_EOL(v)){d=e.line;u=e.lineStart;c=e.lineIndent;skipSeparationSpace(e,false,-1);if(e.lineIndent>=t){l=true;v=e.input.charCodeAt(e.position);continue}else{e.position=o;e.line=d;e.lineStart=u;e.lineIndent=c;break}}if(l){captureSegment(e,i,o,false);writeFoldedLines(e,e.line-d);i=o=e.position;l=false}if(!is_WHITE_SPACE(v)){o=e.position+1}v=e.input.charCodeAt(++e.position)}captureSegment(e,i,o,false);if(e.result){return true}e.kind=h;e.result=g;return false}function readSingleQuotedScalar(e,t){var r,a,n;r=e.input.charCodeAt(e.position);if(r!==39){return false}e.kind="scalar";e.result="";e.position++;a=n=e.position;while((r=e.input.charCodeAt(e.position))!==0){if(r===39){captureSegment(e,a,e.position,true);r=e.input.charCodeAt(++e.position);if(r===39){a=e.position;e.position++;n=e.position}else{return true}}else if(is_EOL(r)){captureSegment(e,a,n,true);writeFoldedLines(e,skipSeparationSpace(e,false,t));a=n=e.position}else if(e.position===e.lineStart&&testDocumentSeparator(e)){throwError(e,"unexpected end of the document within a single quoted scalar")}else{e.position++;n=e.position}}throwError(e,"unexpected end of the stream within a single quoted scalar")}function readDoubleQuotedScalar(e,t){var r,a,n,i,o,l;l=e.input.charCodeAt(e.position);if(l!==34){return false}e.kind="scalar";e.result="";e.position++;r=a=e.position;while((l=e.input.charCodeAt(e.position))!==0){if(l===34){captureSegment(e,r,e.position,true);e.position++;return true}else if(l===92){captureSegment(e,r,e.position,true);l=e.input.charCodeAt(++e.position);if(is_EOL(l)){skipSeparationSpace(e,false,t)}else if(l<256&&_[l]){e.result+=A[l];e.position++}else if((o=escapedHexLen(l))>0){n=o;i=0;for(;n>0;n--){l=e.input.charCodeAt(++e.position);if((o=fromHexCode(l))>=0){i=(i<<4)+o}else{throwError(e,"expected hexadecimal character")}}e.result+=charFromCodepoint(i);e.position++}else{throwError(e,"unknown escape sequence")}r=a=e.position}else if(is_EOL(l)){captureSegment(e,r,a,true);writeFoldedLines(e,skipSeparationSpace(e,false,t));r=a=e.position}else if(e.position===e.lineStart&&testDocumentSeparator(e)){throwError(e,"unexpected end of the document within a double quoted scalar")}else{e.position++;a=e.position}}throwError(e,"unexpected end of the stream within a double quoted scalar")}function readFlowCollection(e,t){var r=true,a,n,i,o=e.tag,l,u=e.anchor,c,h,g,v,w,b=Object.create(null),y,k,E,D;D=e.input.charCodeAt(e.position);if(D===91){h=93;w=false;l=[]}else if(D===123){h=125;w=true;l={}}else{return false}if(e.anchor!==null){e.anchorMap[e.anchor]=l}D=e.input.charCodeAt(++e.position);while(D!==0){skipSeparationSpace(e,true,t);D=e.input.charCodeAt(e.position);if(D===h){e.position++;e.tag=o;e.anchor=u;e.kind=w?"mapping":"sequence";e.result=l;return true}else if(!r){throwError(e,"missed comma between flow collection entries")}else if(D===44){throwError(e,"expected the node content, but found ','")}k=y=E=null;g=v=false;if(D===63){c=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(c)){g=v=true;e.position++;skipSeparationSpace(e,true,t)}}a=e.line;n=e.lineStart;i=e.position;composeNode(e,t,d,false,true);k=e.tag;y=e.result;skipSeparationSpace(e,true,t);D=e.input.charCodeAt(e.position);if((v||e.line===a)&&D===58){g=true;D=e.input.charCodeAt(++e.position);skipSeparationSpace(e,true,t);composeNode(e,t,d,false,true);E=e.result}if(w){storeMappingPair(e,l,b,k,y,E,a,n,i)}else if(g){l.push(storeMappingPair(e,null,b,k,y,E,a,n,i))}else{l.push(y)}skipSeparationSpace(e,true,t);D=e.input.charCodeAt(e.position);if(D===44){r=true;D=e.input.charCodeAt(++e.position)}else{r=false}}throwError(e,"unexpected end of the stream within a flow collection")}function readBlockScalar(e,t){var r,n,i=g,o=false,l=false,d=t,u=0,c=false,h,b;b=e.input.charCodeAt(e.position);if(b===124){n=false}else if(b===62){n=true}else{return false}e.kind="scalar";e.result="";while(b!==0){b=e.input.charCodeAt(++e.position);if(b===43||b===45){if(g===i){i=b===43?w:v}else{throwError(e,"repeat of a chomping mode identifier")}}else if((h=fromDecimalCode(b))>=0){if(h===0){throwError(e,"bad explicit indentation width of a block scalar; it cannot be less than one")}else if(!l){d=t+h-1;l=true}else{throwError(e,"repeat of an indentation width identifier")}}else{break}}if(is_WHITE_SPACE(b)){do{b=e.input.charCodeAt(++e.position)}while(is_WHITE_SPACE(b));if(b===35){do{b=e.input.charCodeAt(++e.position)}while(!is_EOL(b)&&b!==0)}}while(b!==0){readLineBreak(e);e.lineIndent=0;b=e.input.charCodeAt(e.position);while((!l||e.lineIndent<d)&&b===32){e.lineIndent++;b=e.input.charCodeAt(++e.position)}if(!l&&e.lineIndent>d){d=e.lineIndent}if(is_EOL(b)){u++;continue}if(e.lineIndent<d){if(i===w){e.result+=a.repeat("\n",o?1+u:u)}else if(i===g){if(o){e.result+="\n"}}break}if(n){if(is_WHITE_SPACE(b)){c=true;e.result+=a.repeat("\n",o?1+u:u)}else if(c){c=false;e.result+=a.repeat("\n",u+1)}else if(u===0){if(o){e.result+=" "}}else{e.result+=a.repeat("\n",u)}}else{e.result+=a.repeat("\n",o?1+u:u)}o=true;l=true;u=0;r=e.position;while(!is_EOL(b)&&b!==0){b=e.input.charCodeAt(++e.position)}captureSegment(e,r,e.position,false)}return true}function readBlockSequence(e,t){var r,a=e.tag,n=e.anchor,i=[],o,l=false,d;if(e.firstTabInLine!==-1)return false;if(e.anchor!==null){e.anchorMap[e.anchor]=i}d=e.input.charCodeAt(e.position);while(d!==0){if(e.firstTabInLine!==-1){e.position=e.firstTabInLine;throwError(e,"tab characters must not be used in indentation")}if(d!==45){break}o=e.input.charCodeAt(e.position+1);if(!is_WS_OR_EOL(o)){break}l=true;e.position++;if(skipSeparationSpace(e,true,-1)){if(e.lineIndent<=t){i.push(null);d=e.input.charCodeAt(e.position);continue}}r=e.line;composeNode(e,t,c,false,true);i.push(e.result);skipSeparationSpace(e,true,-1);d=e.input.charCodeAt(e.position);if((e.line===r||e.lineIndent>t)&&d!==0){throwError(e,"bad indentation of a sequence entry")}else if(e.lineIndent<t){break}}if(l){e.tag=a;e.anchor=n;e.kind="sequence";e.result=i;return true}return false}function readBlockMapping(e,t,r){var a,n,i,o,l,d,c=e.tag,g=e.anchor,v={},w=Object.create(null),b=null,y=null,k=null,E=false,D=false,_;if(e.firstTabInLine!==-1)return false;if(e.anchor!==null){e.anchorMap[e.anchor]=v}_=e.input.charCodeAt(e.position);while(_!==0){if(!E&&e.firstTabInLine!==-1){e.position=e.firstTabInLine;throwError(e,"tab characters must not be used in indentation")}a=e.input.charCodeAt(e.position+1);i=e.line;if((_===63||_===58)&&is_WS_OR_EOL(a)){if(_===63){if(E){storeMappingPair(e,v,w,b,y,null,o,l,d);b=y=k=null}D=true;E=true;n=true}else if(E){E=false;n=true}else{throwError(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line")}e.position+=1;_=a}else{o=e.line;l=e.lineStart;d=e.position;if(!composeNode(e,r,u,false,true)){break}if(e.line===i){_=e.input.charCodeAt(e.position);while(is_WHITE_SPACE(_)){_=e.input.charCodeAt(++e.position)}if(_===58){_=e.input.charCodeAt(++e.position);if(!is_WS_OR_EOL(_)){throwError(e,"a whitespace character is expected after the key-value separator within a block mapping")}if(E){storeMappingPair(e,v,w,b,y,null,o,l,d);b=y=k=null}D=true;E=false;n=false;b=e.tag;y=e.result}else if(D){throwError(e,"can not read an implicit mapping pair; a colon is missed")}else{e.tag=c;e.anchor=g;return true}}else if(D){throwError(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}else{e.tag=c;e.anchor=g;return true}}if(e.line===i||e.lineIndent>t){if(E){o=e.line;l=e.lineStart;d=e.position}if(composeNode(e,t,h,true,n)){if(E){y=e.result}else{k=e.result}}if(!E){storeMappingPair(e,v,w,b,y,k,o,l,d);b=y=k=null}skipSeparationSpace(e,true,-1);_=e.input.charCodeAt(e.position)}if((e.line===i||e.lineIndent>t)&&_!==0){throwError(e,"bad indentation of a mapping entry")}else if(e.lineIndent<t){break}}if(E){storeMappingPair(e,v,w,b,y,null,o,l,d)}if(D){e.tag=c;e.anchor=g;e.kind="mapping";e.result=v}return D}function readTagProperty(e){var t,r=false,a=false,n,i,o;o=e.input.charCodeAt(e.position);if(o!==33)return false;if(e.tag!==null){throwError(e,"duplication of a tag property")}o=e.input.charCodeAt(++e.position);if(o===60){r=true;o=e.input.charCodeAt(++e.position)}else if(o===33){a=true;n="!!";o=e.input.charCodeAt(++e.position)}else{n="!"}t=e.position;if(r){do{o=e.input.charCodeAt(++e.position)}while(o!==0&&o!==62);if(e.position<e.length){i=e.input.slice(t,e.position);o=e.input.charCodeAt(++e.position)}else{throwError(e,"unexpected end of the stream within a verbatim tag")}}else{while(o!==0&&!is_WS_OR_EOL(o)){if(o===33){if(!a){n=e.input.slice(t-1,e.position+1);if(!E.test(n)){throwError(e,"named tag handle cannot contain such characters")}a=true;t=e.position+1}else{throwError(e,"tag suffix cannot contain exclamation marks")}}o=e.input.charCodeAt(++e.position)}i=e.input.slice(t,e.position);if(k.test(i)){throwError(e,"tag suffix cannot contain flow indicator characters")}}if(i&&!D.test(i)){throwError(e,"tag name cannot contain such characters: "+i)}try{i=decodeURIComponent(i)}catch(t){throwError(e,"tag name is malformed: "+i)}if(r){e.tag=i}else if(l.call(e.tagMap,n)){e.tag=e.tagMap[n]+i}else if(n==="!"){e.tag="!"+i}else if(n==="!!"){e.tag="tag:yaml.org,2002:"+i}else{throwError(e,'undeclared tag handle "'+n+'"')}return true}function readAnchorProperty(e){var t,r;r=e.input.charCodeAt(e.position);if(r!==38)return false;if(e.anchor!==null){throwError(e,"duplication of an anchor property")}r=e.input.charCodeAt(++e.position);t=e.position;while(r!==0&&!is_WS_OR_EOL(r)&&!is_FLOW_INDICATOR(r)){r=e.input.charCodeAt(++e.position)}if(e.position===t){throwError(e,"name of an anchor node must contain at least one character")}e.anchor=e.input.slice(t,e.position);return true}function readAlias(e){var t,r,a;a=e.input.charCodeAt(e.position);if(a!==42)return false;a=e.input.charCodeAt(++e.position);t=e.position;while(a!==0&&!is_WS_OR_EOL(a)&&!is_FLOW_INDICATOR(a)){a=e.input.charCodeAt(++e.position)}if(e.position===t){throwError(e,"name of an alias node must contain at least one character")}r=e.input.slice(t,e.position);if(!l.call(e.anchorMap,r)){throwError(e,'unidentified alias "'+r+'"')}e.result=e.anchorMap[r];skipSeparationSpace(e,true,-1);return true}function composeNode(e,t,r,a,n){var i,o,g,v=1,w=false,b=false,y,k,E,D,_,A;if(e.listener!==null){e.listener("open",e)}e.tag=null;e.anchor=null;e.kind=null;e.result=null;i=o=g=h===r||c===r;if(a){if(skipSeparationSpace(e,true,-1)){w=true;if(e.lineIndent>t){v=1}else if(e.lineIndent===t){v=0}else if(e.lineIndent<t){v=-1}}}if(v===1){while(readTagProperty(e)||readAnchorProperty(e)){if(skipSeparationSpace(e,true,-1)){w=true;g=i;if(e.lineIndent>t){v=1}else if(e.lineIndent===t){v=0}else if(e.lineIndent<t){v=-1}}else{g=false}}}if(g){g=w||n}if(v===1||h===r){if(d===r||u===r){_=t}else{_=t+1}A=e.position-e.lineStart;if(v===1){if(g&&(readBlockSequence(e,A)||readBlockMapping(e,A,_))||readFlowCollection(e,_)){b=true}else{if(o&&readBlockScalar(e,_)||readSingleQuotedScalar(e,_)||readDoubleQuotedScalar(e,_)){b=true}else if(readAlias(e)){b=true;if(e.tag!==null||e.anchor!==null){throwError(e,"alias node should not have any properties")}}else if(readPlainScalar(e,_,d===r)){b=true;if(e.tag===null){e.tag="?"}}if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}}}else if(v===0){b=g&&readBlockSequence(e,A)}}if(e.tag===null){if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}}else if(e.tag==="?"){if(e.result!==null&&e.kind!=="scalar"){throwError(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"')}for(y=0,k=e.implicitTypes.length;y<k;y+=1){D=e.implicitTypes[y];if(D.resolve(e.result)){e.result=D.construct(e.result);e.tag=D.tag;if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}break}}}else if(e.tag!=="!"){if(l.call(e.typeMap[e.kind||"fallback"],e.tag)){D=e.typeMap[e.kind||"fallback"][e.tag]}else{D=null;E=e.typeMap.multi[e.kind||"fallback"];for(y=0,k=E.length;y<k;y+=1){if(e.tag.slice(0,E[y].tag.length)===E[y].tag){D=E[y];break}}}if(!D){throwError(e,"unknown tag !<"+e.tag+">")}if(e.result!==null&&D.kind!==e.kind){throwError(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+D.kind+'", not "'+e.kind+'"')}if(!D.resolve(e.result,e.tag)){throwError(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}else{e.result=D.construct(e.result,e.tag);if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}}}if(e.listener!==null){e.listener("close",e)}return e.tag!==null||e.anchor!==null||b}function readDocument(e){var t=e.position,r,a,n,i=false,o;e.version=null;e.checkLineBreaks=e.legacy;e.tagMap=Object.create(null);e.anchorMap=Object.create(null);while((o=e.input.charCodeAt(e.position))!==0){skipSeparationSpace(e,true,-1);o=e.input.charCodeAt(e.position);if(e.lineIndent>0||o!==37){break}i=true;o=e.input.charCodeAt(++e.position);r=e.position;while(o!==0&&!is_WS_OR_EOL(o)){o=e.input.charCodeAt(++e.position)}a=e.input.slice(r,e.position);n=[];if(a.length<1){throwError(e,"directive name must not be less than one character in length")}while(o!==0){while(is_WHITE_SPACE(o)){o=e.input.charCodeAt(++e.position)}if(o===35){do{o=e.input.charCodeAt(++e.position)}while(o!==0&&!is_EOL(o));break}if(is_EOL(o))break;r=e.position;while(o!==0&&!is_WS_OR_EOL(o)){o=e.input.charCodeAt(++e.position)}n.push(e.input.slice(r,e.position))}if(o!==0)readLineBreak(e);if(l.call(x,a)){x[a](e,a,n)}else{throwWarning(e,'unknown document directive "'+a+'"')}}skipSeparationSpace(e,true,-1);if(e.lineIndent===0&&e.input.charCodeAt(e.position)===45&&e.input.charCodeAt(e.position+1)===45&&e.input.charCodeAt(e.position+2)===45){e.position+=3;skipSeparationSpace(e,true,-1)}else if(i){throwError(e,"directives end mark is expected")}composeNode(e,e.lineIndent-1,h,false,true);skipSeparationSpace(e,true,-1);if(e.checkLineBreaks&&y.test(e.input.slice(t,e.position))){throwWarning(e,"non-ASCII line breaks are interpreted as content")}e.documents.push(e.result);if(e.position===e.lineStart&&testDocumentSeparator(e)){if(e.input.charCodeAt(e.position)===46){e.position+=3;skipSeparationSpace(e,true,-1)}return}if(e.position<e.length-1){throwError(e,"end of the stream or a document separator is expected")}else{return}}function loadDocuments(e,t){e=String(e);t=t||{};if(e.length!==0){if(e.charCodeAt(e.length-1)!==10&&e.charCodeAt(e.length-1)!==13){e+="\n"}if(e.charCodeAt(0)===65279){e=e.slice(1)}}var r=new State(e,t);var a=e.indexOf("\0");if(a!==-1){r.position=a;throwError(r,"null byte is not allowed in input")}r.input+="\0";while(r.input.charCodeAt(r.position)===32){r.lineIndent+=1;r.position+=1}while(r.position<r.length-1){readDocument(r)}return r.documents}function loadAll(e,t,r){if(t!==null&&typeof t==="object"&&typeof r==="undefined"){r=t;t=null}var a=loadDocuments(e,r);if(typeof t!=="function"){return a}for(var n=0,i=a.length;n<i;n+=1){t(a[n])}}function load(e,t){var r=loadDocuments(e,t);if(r.length===0){return undefined}else if(r.length===1){return r[0]}throw new n("expected a single document in the stream, but found more")}e.exports.loadAll=loadAll;e.exports.load=load},1082:(e,t,r)=>{"use strict";var a=r(8179);var n=r(6073);function compileList(e,t){var r=[];e[t].forEach((function(e){var t=r.length;r.forEach((function(r,a){if(r.tag===e.tag&&r.kind===e.kind&&r.multi===e.multi){t=a}}));r[t]=e}));return r}function compileMap(){var e={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}},t,r;function collectType(t){if(t.multi){e.multi[t.kind].push(t);e.multi["fallback"].push(t)}else{e[t.kind][t.tag]=e["fallback"][t.tag]=t}}for(t=0,r=arguments.length;t<r;t+=1){arguments[t].forEach(collectType)}return e}function Schema(e){return this.extend(e)}Schema.prototype.extend=function extend(e){var t=[];var r=[];if(e instanceof n){r.push(e)}else if(Array.isArray(e)){r=r.concat(e)}else if(e&&(Array.isArray(e.implicit)||Array.isArray(e.explicit))){if(e.implicit)t=t.concat(e.implicit);if(e.explicit)r=r.concat(e.explicit)}else{throw new a("Schema.extend argument should be a Type, [ Type ], "+"or a schema definition ({ implicit: [...], explicit: [...] })")}t.forEach((function(e){if(!(e instanceof n)){throw new a("Specified list of YAML types (or a single Type object) contains a non-Type object.")}if(e.loadKind&&e.loadKind!=="scalar"){throw new a("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")}if(e.multi){throw new a("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")}}));r.forEach((function(e){if(!(e instanceof n)){throw new a("Specified list of YAML types (or a single Type object) contains a non-Type object.")}}));var i=Object.create(Schema.prototype);i.implicit=(this.implicit||[]).concat(t);i.explicit=(this.explicit||[]).concat(r);i.compiledImplicit=compileList(i,"implicit");i.compiledExplicit=compileList(i,"explicit");i.compiledTypeMap=compileMap(i.compiledImplicit,i.compiledExplicit);return i};e.exports=Schema},2011:(e,t,r)=>{"use strict";e.exports=r(1035)},8759:(e,t,r)=>{"use strict";e.exports=r(2011).extend({implicit:[r(9212),r(6104)],explicit:[r(7900),r(9046),r(6860),r(9548)]})},8562:(e,t,r)=>{"use strict";var a=r(1082);e.exports=new a({explicit:[r(3619),r(7283),r(6150)]})},1035:(e,t,r)=>{"use strict";e.exports=r(8562).extend({implicit:[r(721),r(4993),r(1615),r(2705)]})},6975:(e,t,r)=>{"use strict";var a=r(6829);function getLine(e,t,r,a,n){var i="";var o="";var l=Math.floor(n/2)-1;if(a-t>l){i=" ... ";t=a-l+i.length}if(r-a>l){o=" ...";r=a+l-o.length}return{str:i+e.slice(t,r).replace(/\t/g,"→")+o,pos:a-t+i.length}}function padStart(e,t){return a.repeat(" ",t-e.length)+e}function makeSnippet(e,t){t=Object.create(t||null);if(!e.buffer)return null;if(!t.maxLength)t.maxLength=79;if(typeof t.indent!=="number")t.indent=1;if(typeof t.linesBefore!=="number")t.linesBefore=3;if(typeof t.linesAfter!=="number")t.linesAfter=2;var r=/\r?\n|\r|\0/g;var n=[0];var i=[];var o;var l=-1;while(o=r.exec(e.buffer)){i.push(o.index);n.push(o.index+o[0].length);if(e.position<=o.index&&l<0){l=n.length-2}}if(l<0)l=n.length-1;var d="",u,c;var h=Math.min(e.line+t.linesAfter,i.length).toString().length;var g=t.maxLength-(t.indent+h+3);for(u=1;u<=t.linesBefore;u++){if(l-u<0)break;c=getLine(e.buffer,n[l-u],i[l-u],e.position-(n[l]-n[l-u]),g);d=a.repeat(" ",t.indent)+padStart((e.line-u+1).toString(),h)+" | "+c.str+"\n"+d}c=getLine(e.buffer,n[l],i[l],e.position,g);d+=a.repeat(" ",t.indent)+padStart((e.line+1).toString(),h)+" | "+c.str+"\n";d+=a.repeat("-",t.indent+h+3+c.pos)+"^"+"\n";for(u=1;u<=t.linesAfter;u++){if(l+u>=i.length)break;c=getLine(e.buffer,n[l+u],i[l+u],e.position-(n[l]-n[l+u]),g);d+=a.repeat(" ",t.indent)+padStart((e.line+u+1).toString(),h)+" | "+c.str+"\n"}return d.replace(/\n$/,"")}e.exports=makeSnippet},6073:(e,t,r)=>{"use strict";var a=r(8179);var n=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"];var i=["scalar","sequence","mapping"];function compileStyleAliases(e){var t={};if(e!==null){Object.keys(e).forEach((function(r){e[r].forEach((function(e){t[String(e)]=r}))}))}return t}function Type(e,t){t=t||{};Object.keys(t).forEach((function(t){if(n.indexOf(t)===-1){throw new a('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')}}));this.options=t;this.tag=e;this.kind=t["kind"]||null;this.resolve=t["resolve"]||function(){return true};this.construct=t["construct"]||function(e){return e};this.instanceOf=t["instanceOf"]||null;this.predicate=t["predicate"]||null;this.represent=t["represent"]||null;this.representName=t["representName"]||null;this.defaultStyle=t["defaultStyle"]||null;this.multi=t["multi"]||false;this.styleAliases=compileStyleAliases(t["styleAliases"]||null);if(i.indexOf(this.kind)===-1){throw new a('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}}e.exports=Type},7900:(e,t,r)=>{"use strict";var a=r(6073);var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";function resolveYamlBinary(e){if(e===null)return false;var t,r,a=0,i=e.length,o=n;for(r=0;r<i;r++){t=o.indexOf(e.charAt(r));if(t>64)continue;if(t<0)return false;a+=6}return a%8===0}function constructYamlBinary(e){var t,r,a=e.replace(/[\r\n=]/g,""),i=a.length,o=n,l=0,d=[];for(t=0;t<i;t++){if(t%4===0&&t){d.push(l>>16&255);d.push(l>>8&255);d.push(l&255)}l=l<<6|o.indexOf(a.charAt(t))}r=i%4*6;if(r===0){d.push(l>>16&255);d.push(l>>8&255);d.push(l&255)}else if(r===18){d.push(l>>10&255);d.push(l>>2&255)}else if(r===12){d.push(l>>4&255)}return new Uint8Array(d)}function representYamlBinary(e){var t="",r=0,a,i,o=e.length,l=n;for(a=0;a<o;a++){if(a%3===0&&a){t+=l[r>>18&63];t+=l[r>>12&63];t+=l[r>>6&63];t+=l[r&63]}r=(r<<8)+e[a]}i=o%3;if(i===0){t+=l[r>>18&63];t+=l[r>>12&63];t+=l[r>>6&63];t+=l[r&63]}else if(i===2){t+=l[r>>10&63];t+=l[r>>4&63];t+=l[r<<2&63];t+=l[64]}else if(i===1){t+=l[r>>2&63];t+=l[r<<4&63];t+=l[64];t+=l[64]}return t}function isBinary(e){return Object.prototype.toString.call(e)==="[object Uint8Array]"}e.exports=new a("tag:yaml.org,2002:binary",{kind:"scalar",resolve:resolveYamlBinary,construct:constructYamlBinary,predicate:isBinary,represent:representYamlBinary})},4993:(e,t,r)=>{"use strict";var a=r(6073);function resolveYamlBoolean(e){if(e===null)return false;var t=e.length;return t===4&&(e==="true"||e==="True"||e==="TRUE")||t===5&&(e==="false"||e==="False"||e==="FALSE")}function constructYamlBoolean(e){return e==="true"||e==="True"||e==="TRUE"}function isBoolean(e){return Object.prototype.toString.call(e)==="[object Boolean]"}e.exports=new a("tag:yaml.org,2002:bool",{kind:"scalar",resolve:resolveYamlBoolean,construct:constructYamlBoolean,predicate:isBoolean,represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},2705:(e,t,r)=>{"use strict";var a=r(6829);var n=r(6073);var i=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?"+"|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?"+"|[-+]?\\.(?:inf|Inf|INF)"+"|\\.(?:nan|NaN|NAN))$");function resolveYamlFloat(e){if(e===null)return false;if(!i.test(e)||e[e.length-1]==="_"){return false}return true}function constructYamlFloat(e){var t,r;t=e.replace(/_/g,"").toLowerCase();r=t[0]==="-"?-1:1;if("+-".indexOf(t[0])>=0){t=t.slice(1)}if(t===".inf"){return r===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY}else if(t===".nan"){return NaN}return r*parseFloat(t,10)}var o=/^[-+]?[0-9]+e/;function representYamlFloat(e,t){var r;if(isNaN(e)){switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}}else if(Number.POSITIVE_INFINITY===e){switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}}else if(Number.NEGATIVE_INFINITY===e){switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}}else if(a.isNegativeZero(e)){return"-0.0"}r=e.toString(10);return o.test(r)?r.replace("e",".e"):r}function isFloat(e){return Object.prototype.toString.call(e)==="[object Number]"&&(e%1!==0||a.isNegativeZero(e))}e.exports=new n("tag:yaml.org,2002:float",{kind:"scalar",resolve:resolveYamlFloat,construct:constructYamlFloat,predicate:isFloat,represent:representYamlFloat,defaultStyle:"lowercase"})},1615:(e,t,r)=>{"use strict";var a=r(6829);var n=r(6073);function isHexCode(e){return 48<=e&&e<=57||65<=e&&e<=70||97<=e&&e<=102}function isOctCode(e){return 48<=e&&e<=55}function isDecCode(e){return 48<=e&&e<=57}function resolveYamlInteger(e){if(e===null)return false;var t=e.length,r=0,a=false,n;if(!t)return false;n=e[r];if(n==="-"||n==="+"){n=e[++r]}if(n==="0"){if(r+1===t)return true;n=e[++r];if(n==="b"){r++;for(;r<t;r++){n=e[r];if(n==="_")continue;if(n!=="0"&&n!=="1")return false;a=true}return a&&n!=="_"}if(n==="x"){r++;for(;r<t;r++){n=e[r];if(n==="_")continue;if(!isHexCode(e.charCodeAt(r)))return false;a=true}return a&&n!=="_"}if(n==="o"){r++;for(;r<t;r++){n=e[r];if(n==="_")continue;if(!isOctCode(e.charCodeAt(r)))return false;a=true}return a&&n!=="_"}}if(n==="_")return false;for(;r<t;r++){n=e[r];if(n==="_")continue;if(!isDecCode(e.charCodeAt(r))){return false}a=true}if(!a||n==="_")return false;return true}function constructYamlInteger(e){var t=e,r=1,a;if(t.indexOf("_")!==-1){t=t.replace(/_/g,"")}a=t[0];if(a==="-"||a==="+"){if(a==="-")r=-1;t=t.slice(1);a=t[0]}if(t==="0")return 0;if(a==="0"){if(t[1]==="b")return r*parseInt(t.slice(2),2);if(t[1]==="x")return r*parseInt(t.slice(2),16);if(t[1]==="o")return r*parseInt(t.slice(2),8)}return r*parseInt(t,10)}function isInteger(e){return Object.prototype.toString.call(e)==="[object Number]"&&(e%1===0&&!a.isNegativeZero(e))}e.exports=new n("tag:yaml.org,2002:int",{kind:"scalar",resolve:resolveYamlInteger,construct:constructYamlInteger,predicate:isInteger,represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},6150:(e,t,r)=>{"use strict";var a=r(6073);e.exports=new a("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return e!==null?e:{}}})},6104:(e,t,r)=>{"use strict";var a=r(6073);function resolveYamlMerge(e){return e==="<<"||e===null}e.exports=new a("tag:yaml.org,2002:merge",{kind:"scalar",resolve:resolveYamlMerge})},721:(e,t,r)=>{"use strict";var a=r(6073);function resolveYamlNull(e){if(e===null)return true;var t=e.length;return t===1&&e==="~"||t===4&&(e==="null"||e==="Null"||e==="NULL")}function constructYamlNull(){return null}function isNull(e){return e===null}e.exports=new a("tag:yaml.org,2002:null",{kind:"scalar",resolve:resolveYamlNull,construct:constructYamlNull,predicate:isNull,represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"})},9046:(e,t,r)=>{"use strict";var a=r(6073);var n=Object.prototype.hasOwnProperty;var i=Object.prototype.toString;function resolveYamlOmap(e){if(e===null)return true;var t=[],r,a,o,l,d,u=e;for(r=0,a=u.length;r<a;r+=1){o=u[r];d=false;if(i.call(o)!=="[object Object]")return false;for(l in o){if(n.call(o,l)){if(!d)d=true;else return false}}if(!d)return false;if(t.indexOf(l)===-1)t.push(l);else return false}return true}function constructYamlOmap(e){return e!==null?e:[]}e.exports=new a("tag:yaml.org,2002:omap",{kind:"sequence",resolve:resolveYamlOmap,construct:constructYamlOmap})},6860:(e,t,r)=>{"use strict";var a=r(6073);var n=Object.prototype.toString;function resolveYamlPairs(e){if(e===null)return true;var t,r,a,i,o,l=e;o=new Array(l.length);for(t=0,r=l.length;t<r;t+=1){a=l[t];if(n.call(a)!=="[object Object]")return false;i=Object.keys(a);if(i.length!==1)return false;o[t]=[i[0],a[i[0]]]}return true}function constructYamlPairs(e){if(e===null)return[];var t,r,a,n,i,o=e;i=new Array(o.length);for(t=0,r=o.length;t<r;t+=1){a=o[t];n=Object.keys(a);i[t]=[n[0],a[n[0]]]}return i}e.exports=new a("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:resolveYamlPairs,construct:constructYamlPairs})},7283:(e,t,r)=>{"use strict";var a=r(6073);e.exports=new a("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return e!==null?e:[]}})},9548:(e,t,r)=>{"use strict";var a=r(6073);var n=Object.prototype.hasOwnProperty;function resolveYamlSet(e){if(e===null)return true;var t,r=e;for(t in r){if(n.call(r,t)){if(r[t]!==null)return false}}return true}function constructYamlSet(e){return e!==null?e:{}}e.exports=new a("tag:yaml.org,2002:set",{kind:"mapping",resolve:resolveYamlSet,construct:constructYamlSet})},3619:(e,t,r)=>{"use strict";var a=r(6073);e.exports=new a("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return e!==null?e:""}})},9212:(e,t,r)=>{"use strict";var a=r(6073);var n=new RegExp("^([0-9][0-9][0-9][0-9])"+"-([0-9][0-9])"+"-([0-9][0-9])$");var i=new RegExp("^([0-9][0-9][0-9][0-9])"+"-([0-9][0-9]?)"+"-([0-9][0-9]?)"+"(?:[Tt]|[ \\t]+)"+"([0-9][0-9]?)"+":([0-9][0-9])"+":([0-9][0-9])"+"(?:\\.([0-9]*))?"+"(?:[ \\t]*(Z|([-+])([0-9][0-9]?)"+"(?::([0-9][0-9]))?))?$");function resolveYamlTimestamp(e){if(e===null)return false;if(n.exec(e)!==null)return true;if(i.exec(e)!==null)return true;return false}function constructYamlTimestamp(e){var t,r,a,o,l,d,u,c=0,h=null,g,v,w;t=n.exec(e);if(t===null)t=i.exec(e);if(t===null)throw new Error("Date resolve error");r=+t[1];a=+t[2]-1;o=+t[3];if(!t[4]){return new Date(Date.UTC(r,a,o))}l=+t[4];d=+t[5];u=+t[6];if(t[7]){c=t[7].slice(0,3);while(c.length<3){c+="0"}c=+c}if(t[9]){g=+t[10];v=+(t[11]||0);h=(g*60+v)*6e4;if(t[9]==="-")h=-h}w=new Date(Date.UTC(r,a,o,l,d,u,c));if(h)w.setTime(w.getTime()-h);return w}function representYamlTimestamp(e){return e.toISOString()}e.exports=new a("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:resolveYamlTimestamp,construct:constructYamlTimestamp,instanceOf:Date,represent:representYamlTimestamp})},9062:e=>{"use strict";const hexify=e=>{const t=e.charCodeAt(0).toString(16).toUpperCase();return"0x"+(t.length%2?"0":"")+t};const parseError=(e,t,r)=>{if(!t){return{message:e.message+" while parsing empty string",position:0}}const a=e.message.match(/^Unexpected token (.) .*position\s+(\d+)/i);const n=a?+a[2]:e.message.match(/^Unexpected end of JSON.*/i)?t.length-1:null;const i=a?e.message.replace(/^Unexpected token ./,`Unexpected token ${JSON.stringify(a[1])} (${hexify(a[1])})`):e.message;if(n!==null&&n!==undefined){const e=n<=r?0:n-r;const a=n+r>=t.length?t.length:n+r;const o=(e===0?"":"...")+t.slice(e,a)+(a===t.length?"":"...");const l=t===o?"":"near ";return{message:i+` while parsing ${l}${JSON.stringify(o)}`,position:n}}else{return{message:i+` while parsing '${t.slice(0,r*2)}'`,position:0}}};class JSONParseError extends SyntaxError{constructor(e,t,r,a){r=r||20;const n=parseError(e,t,r);super(n.message);Object.assign(this,n);this.code="EJSONPARSE";this.systemError=e;Error.captureStackTrace(this,a||this.constructor)}get name(){return this.constructor.name}set name(e){}get[Symbol.toStringTag](){return this.constructor.name}}const t=Symbol.for("indent");const r=Symbol.for("newline");const a=/^\s*[{\[]((?:\r?\n)+)([\s\t]*)/;const n=/^(?:\{\}|\[\])((?:\r?\n)+)?$/;const parseJson=(e,i,o)=>{const l=stripBOM(e);o=o||20;try{const[,e="\n",o="  "]=l.match(n)||l.match(a)||[,"",""];const d=JSON.parse(l,i);if(d&&typeof d==="object"){d[r]=e;d[t]=o}return d}catch(t){if(typeof e!=="string"&&!Buffer.isBuffer(e)){const r=Array.isArray(e)&&e.length===0;throw Object.assign(new TypeError(`Cannot parse ${r?"an empty array":String(e)}`),{code:"EJSONPARSE",systemError:t})}throw new JSONParseError(t,l,o,parseJson)}};const stripBOM=e=>String(e).replace(/^\uFEFF/,"");e.exports=parseJson;parseJson.JSONParseError=JSONParseError;parseJson.noExceptions=(e,t)=>{try{return JSON.parse(stripBOM(e),t)}catch(e){}}},7994:e=>{var t=1/0;var r="[object Symbol]";var a=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;var n=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;var i="\\ud800-\\udfff",o="\\u0300-\\u036f\\ufe20-\\ufe23",l="\\u20d0-\\u20f0",d="\\u2700-\\u27bf",u="a-z\\xdf-\\xf6\\xf8-\\xff",c="\\xac\\xb1\\xd7\\xf7",h="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",g="\\u2000-\\u206f",v=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",w="A-Z\\xc0-\\xd6\\xd8-\\xde",b="\\ufe0e\\ufe0f",y=c+h+g+v;var k="['’]",E="["+i+"]",D="["+y+"]",_="["+o+l+"]",A="\\d+",S="["+d+"]",x="["+u+"]",C="[^"+i+y+A+d+u+w+"]",T="\\ud83c[\\udffb-\\udfff]",F="(?:"+_+"|"+T+")",O="[^"+i+"]",P="(?:\\ud83c[\\udde6-\\uddff]){2}",L="[\\ud800-\\udbff][\\udc00-\\udfff]",R="["+w+"]",B="\\u200d";var N="(?:"+x+"|"+C+")",j="(?:"+R+"|"+C+")",I="(?:"+k+"(?:d|ll|m|re|s|t|ve))?",q="(?:"+k+"(?:D|LL|M|RE|S|T|VE))?",U=F+"?",G="["+b+"]?",V="(?:"+B+"(?:"+[O,P,L].join("|")+")"+G+U+")*",z=G+U+V,M="(?:"+[S,P,L].join("|")+")"+z,H="(?:"+[O+_+"?",_,P,L,E].join("|")+")";var $=RegExp(k,"g");var W=RegExp(_,"g");var Y=RegExp(T+"(?="+T+")|"+H+z,"g");var K=RegExp([R+"?"+x+"+"+I+"(?="+[D,R,"$"].join("|")+")",j+"+"+q+"(?="+[D,R+N,"$"].join("|")+")",R+"?"+N+"+"+I,R+"+"+q,A,M].join("|"),"g");var J=RegExp("["+B+i+o+l+b+"]");var Z=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;var Q={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"ss"};var X=typeof global=="object"&&global&&global.Object===Object&&global;var ee=typeof self=="object"&&self&&self.Object===Object&&self;var te=X||ee||Function("return this")();function arrayReduce(e,t,r,a){var n=-1,i=e?e.length:0;if(a&&i){r=e[++n]}while(++n<i){r=t(r,e[n],n,e)}return r}function asciiToArray(e){return e.split("")}function asciiWords(e){return e.match(a)||[]}function basePropertyOf(e){return function(t){return e==null?undefined:e[t]}}var re=basePropertyOf(Q);function hasUnicode(e){return J.test(e)}function hasUnicodeWord(e){return Z.test(e)}function stringToArray(e){return hasUnicode(e)?unicodeToArray(e):asciiToArray(e)}function unicodeToArray(e){return e.match(Y)||[]}function unicodeWords(e){return e.match(K)||[]}var ae=Object.prototype;var ne=ae.toString;var ie=te.Symbol;var oe=ie?ie.prototype:undefined,se=oe?oe.toString:undefined;function baseSlice(e,t,r){var a=-1,n=e.length;if(t<0){t=-t>n?0:n+t}r=r>n?n:r;if(r<0){r+=n}n=t>r?0:r-t>>>0;t>>>=0;var i=Array(n);while(++a<n){i[a]=e[a+t]}return i}function baseToString(e){if(typeof e=="string"){return e}if(isSymbol(e)){return se?se.call(e):""}var r=e+"";return r=="0"&&1/e==-t?"-0":r}function castSlice(e,t,r){var a=e.length;r=r===undefined?a:r;return!t&&r>=a?e:baseSlice(e,t,r)}function createCaseFirst(e){return function(t){t=toString(t);var r=hasUnicode(t)?stringToArray(t):undefined;var a=r?r[0]:t.charAt(0);var n=r?castSlice(r,1).join(""):t.slice(1);return a[e]()+n}}function createCompounder(e){return function(t){return arrayReduce(words(deburr(t).replace($,"")),e,"")}}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&ne.call(e)==r}function toString(e){return e==null?"":baseToString(e)}var pe=createCompounder((function(e,t,r){t=t.toLowerCase();return e+(r?capitalize(t):t)}));function capitalize(e){return le(toString(e).toLowerCase())}function deburr(e){e=toString(e);return e&&e.replace(n,re).replace(W,"")}var le=createCaseFirst("toUpperCase");function words(e,t,r){e=toString(e);t=r?undefined:t;if(t===undefined){return hasUnicodeWord(e)?unicodeWords(e):asciiWords(e)}return e.match(t)||[]}e.exports=pe},9449:e=>{var t=1/0;var r="[object Symbol]";var a=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;var n=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;var i="\\ud800-\\udfff",o="\\u0300-\\u036f\\ufe20-\\ufe23",l="\\u20d0-\\u20f0",d="\\u2700-\\u27bf",u="a-z\\xdf-\\xf6\\xf8-\\xff",c="\\xac\\xb1\\xd7\\xf7",h="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",g="\\u2000-\\u206f",v=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",w="A-Z\\xc0-\\xd6\\xd8-\\xde",b="\\ufe0e\\ufe0f",y=c+h+g+v;var k="['’]",E="["+y+"]",D="["+o+l+"]",_="\\d+",A="["+d+"]",S="["+u+"]",x="[^"+i+y+_+d+u+w+"]",C="\\ud83c[\\udffb-\\udfff]",T="(?:"+D+"|"+C+")",F="[^"+i+"]",O="(?:\\ud83c[\\udde6-\\uddff]){2}",P="[\\ud800-\\udbff][\\udc00-\\udfff]",L="["+w+"]",R="\\u200d";var B="(?:"+S+"|"+x+")",N="(?:"+L+"|"+x+")",j="(?:"+k+"(?:d|ll|m|re|s|t|ve))?",I="(?:"+k+"(?:D|LL|M|RE|S|T|VE))?",q=T+"?",U="["+b+"]?",G="(?:"+R+"(?:"+[F,O,P].join("|")+")"+U+q+")*",V=U+q+G,z="(?:"+[A,O,P].join("|")+")"+V;var M=RegExp(k,"g");var H=RegExp(D,"g");var $=RegExp([L+"?"+S+"+"+j+"(?="+[E,L,"$"].join("|")+")",N+"+"+I+"(?="+[E,L+B,"$"].join("|")+")",L+"?"+B+"+"+j,L+"+"+I,_,z].join("|"),"g");var W=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;var Y={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"ss"};var K=typeof global=="object"&&global&&global.Object===Object&&global;var J=typeof self=="object"&&self&&self.Object===Object&&self;var Z=K||J||Function("return this")();function arrayReduce(e,t,r,a){var n=-1,i=e?e.length:0;if(a&&i){r=e[++n]}while(++n<i){r=t(r,e[n],n,e)}return r}function asciiWords(e){return e.match(a)||[]}function basePropertyOf(e){return function(t){return e==null?undefined:e[t]}}var Q=basePropertyOf(Y);function hasUnicodeWord(e){return W.test(e)}function unicodeWords(e){return e.match($)||[]}var X=Object.prototype;var ee=X.toString;var te=Z.Symbol;var re=te?te.prototype:undefined,ae=re?re.toString:undefined;function baseToString(e){if(typeof e=="string"){return e}if(isSymbol(e)){return ae?ae.call(e):""}var r=e+"";return r=="0"&&1/e==-t?"-0":r}function createCompounder(e){return function(t){return arrayReduce(words(deburr(t).replace(M,"")),e,"")}}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&ee.call(e)==r}function toString(e){return e==null?"":baseToString(e)}function deburr(e){e=toString(e);return e&&e.replace(n,Q).replace(H,"")}var ne=createCompounder((function(e,t,r){return e+(r?"-":"")+t.toLowerCase()}));function words(e,t,r){e=toString(e);t=r?undefined:t;if(t===undefined){return hasUnicodeWord(e)?unicodeWords(e):asciiWords(e)}return e.match(t)||[]}e.exports=ne},6645:e=>{var t=1/0;var r="[object Symbol]";var a=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;var n=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;var i="\\ud800-\\udfff",o="\\u0300-\\u036f\\ufe20-\\ufe23",l="\\u20d0-\\u20f0",d="\\u2700-\\u27bf",u="a-z\\xdf-\\xf6\\xf8-\\xff",c="\\xac\\xb1\\xd7\\xf7",h="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",g="\\u2000-\\u206f",v=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",w="A-Z\\xc0-\\xd6\\xd8-\\xde",b="\\ufe0e\\ufe0f",y=c+h+g+v;var k="['’]",E="["+y+"]",D="["+o+l+"]",_="\\d+",A="["+d+"]",S="["+u+"]",x="[^"+i+y+_+d+u+w+"]",C="\\ud83c[\\udffb-\\udfff]",T="(?:"+D+"|"+C+")",F="[^"+i+"]",O="(?:\\ud83c[\\udde6-\\uddff]){2}",P="[\\ud800-\\udbff][\\udc00-\\udfff]",L="["+w+"]",R="\\u200d";var B="(?:"+S+"|"+x+")",N="(?:"+L+"|"+x+")",j="(?:"+k+"(?:d|ll|m|re|s|t|ve))?",I="(?:"+k+"(?:D|LL|M|RE|S|T|VE))?",q=T+"?",U="["+b+"]?",G="(?:"+R+"(?:"+[F,O,P].join("|")+")"+U+q+")*",V=U+q+G,z="(?:"+[A,O,P].join("|")+")"+V;var M=RegExp(k,"g");var H=RegExp(D,"g");var $=RegExp([L+"?"+S+"+"+j+"(?="+[E,L,"$"].join("|")+")",N+"+"+I+"(?="+[E,L+B,"$"].join("|")+")",L+"?"+B+"+"+j,L+"+"+I,_,z].join("|"),"g");var W=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;var Y={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"ss"};var K=typeof global=="object"&&global&&global.Object===Object&&global;var J=typeof self=="object"&&self&&self.Object===Object&&self;var Z=K||J||Function("return this")();function arrayReduce(e,t,r,a){var n=-1,i=e?e.length:0;if(a&&i){r=e[++n]}while(++n<i){r=t(r,e[n],n,e)}return r}function asciiWords(e){return e.match(a)||[]}function basePropertyOf(e){return function(t){return e==null?undefined:e[t]}}var Q=basePropertyOf(Y);function hasUnicodeWord(e){return W.test(e)}function unicodeWords(e){return e.match($)||[]}var X=Object.prototype;var ee=X.toString;var te=Z.Symbol;var re=te?te.prototype:undefined,ae=re?re.toString:undefined;function baseToString(e){if(typeof e=="string"){return e}if(isSymbol(e)){return ae?ae.call(e):""}var r=e+"";return r=="0"&&1/e==-t?"-0":r}function createCompounder(e){return function(t){return arrayReduce(words(deburr(t).replace(M,"")),e,"")}}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&ee.call(e)==r}function toString(e){return e==null?"":baseToString(e)}function deburr(e){e=toString(e);return e&&e.replace(n,Q).replace(H,"")}var ne=createCompounder((function(e,t,r){return e+(r?"_":"")+t.toLowerCase()}));function words(e,t,r){e=toString(e);t=r?undefined:t;if(t===undefined){return hasUnicodeWord(e)?unicodeWords(e):asciiWords(e)}return e.match(t)||[]}e.exports=ne},8216:e=>{var t=200;var r="__lodash_hash_undefined__";var a=1/0;var n="[object Function]",i="[object GeneratorFunction]";var o=/[\\^$.*+?()[\]{}|]/g;var l=/^\[object .+?Constructor\]$/;var d=typeof global=="object"&&global&&global.Object===Object&&global;var u=typeof self=="object"&&self&&self.Object===Object&&self;var c=d||u||Function("return this")();function arrayIncludes(e,t){var r=e?e.length:0;return!!r&&baseIndexOf(e,t,0)>-1}function arrayIncludesWith(e,t,r){var a=-1,n=e?e.length:0;while(++a<n){if(r(t,e[a])){return true}}return false}function baseFindIndex(e,t,r,a){var n=e.length,i=r+(a?1:-1);while(a?i--:++i<n){if(t(e[i],i,e)){return i}}return-1}function baseIndexOf(e,t,r){if(t!==t){return baseFindIndex(e,baseIsNaN,r)}var a=r-1,n=e.length;while(++a<n){if(e[a]===t){return a}}return-1}function baseIsNaN(e){return e!==e}function cacheHas(e,t){return e.has(t)}function getValue(e,t){return e==null?undefined:e[t]}function isHostObject(e){var t=false;if(e!=null&&typeof e.toString!="function"){try{t=!!(e+"")}catch(e){}}return t}function setToArray(e){var t=-1,r=Array(e.size);e.forEach((function(e){r[++t]=e}));return r}var h=Array.prototype,g=Function.prototype,v=Object.prototype;var w=c["__core-js_shared__"];var b=function(){var e=/[^.]+$/.exec(w&&w.keys&&w.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();var y=g.toString;var k=v.hasOwnProperty;var E=v.toString;var D=RegExp("^"+y.call(k).replace(o,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var _=h.splice;var A=getNative(c,"Map"),S=getNative(c,"Set"),x=getNative(Object,"create");function Hash(e){var t=-1,r=e?e.length:0;this.clear();while(++t<r){var a=e[t];this.set(a[0],a[1])}}function hashClear(){this.__data__=x?x(null):{}}function hashDelete(e){return this.has(e)&&delete this.__data__[e]}function hashGet(e){var t=this.__data__;if(x){var a=t[e];return a===r?undefined:a}return k.call(t,e)?t[e]:undefined}function hashHas(e){var t=this.__data__;return x?t[e]!==undefined:k.call(t,e)}function hashSet(e,t){var a=this.__data__;a[e]=x&&t===undefined?r:t;return this}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(e){var t=-1,r=e?e.length:0;this.clear();while(++t<r){var a=e[t];this.set(a[0],a[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(e){var t=this.__data__,r=assocIndexOf(t,e);if(r<0){return false}var a=t.length-1;if(r==a){t.pop()}else{_.call(t,r,1)}return true}function listCacheGet(e){var t=this.__data__,r=assocIndexOf(t,e);return r<0?undefined:t[r][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,t){var r=this.__data__,a=assocIndexOf(r,e);if(a<0){r.push([e,t])}else{r[a][1]=t}return this}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(e){var t=-1,r=e?e.length:0;this.clear();while(++t<r){var a=e[t];this.set(a[0],a[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(A||ListCache),string:new Hash}}function mapCacheDelete(e){return getMapData(this,e)["delete"](e)}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,t){getMapData(this,e).set(e,t);return this}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function SetCache(e){var t=-1,r=e?e.length:0;this.__data__=new MapCache;while(++t<r){this.add(e[t])}}function setCacheAdd(e){this.__data__.set(e,r);return this}function setCacheHas(e){return this.__data__.has(e)}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function assocIndexOf(e,t){var r=e.length;while(r--){if(eq(e[r][0],t)){return r}}return-1}function baseIsNative(e){if(!isObject(e)||isMasked(e)){return false}var t=isFunction(e)||isHostObject(e)?D:l;return t.test(toSource(e))}function baseUniq(e,r,a){var n=-1,i=arrayIncludes,o=e.length,l=true,d=[],u=d;if(a){l=false;i=arrayIncludesWith}else if(o>=t){var c=r?null:C(e);if(c){return setToArray(c)}l=false;i=cacheHas;u=new SetCache}else{u=r?[]:d}e:while(++n<o){var h=e[n],g=r?r(h):h;h=a||h!==0?h:0;if(l&&g===g){var v=u.length;while(v--){if(u[v]===g){continue e}}if(r){u.push(g)}d.push(h)}else if(!i(u,g,a)){if(u!==d){u.push(g)}d.push(h)}}return d}var C=!(S&&1/setToArray(new S([,-0]))[1]==a)?noop:function(e){return new S(e)};function getMapData(e,t){var r=e.__data__;return isKeyable(t)?r[typeof t=="string"?"string":"hash"]:r.map}function getNative(e,t){var r=getValue(e,t);return baseIsNative(r)?r:undefined}function isKeyable(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function isMasked(e){return!!b&&b in e}function toSource(e){if(e!=null){try{return y.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function uniq(e){return e&&e.length?baseUniq(e):[]}function eq(e,t){return e===t||e!==e&&t!==t}function isFunction(e){var t=isObject(e)?E.call(e):"";return t==n||t==i}function isObject(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function noop(){}e.exports=uniq},9459:(e,t,r)=>{"use strict";t.__esModule=true;var a=r(8707);var n=_interopRequireDefault(a);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getLines(e,t,r,a){var n=[];var i=[];var o=void 0,l=void 0,d=void 0;var u=t;for(var c=t-1;c>=0;c--){if(e[c]==="\n"){if(o===undefined){o=c+1;d=t-(c+1)}else{n.push(e.substr(c,u-c))}u=c;if(n.length>=r){break}}}if(o===undefined){o=0;d=t}for(var h=t;h<e.length;h++){if(e[h]==="\n"){if(l===undefined){l=e.substr(o,h-o)}else{i.push(e.substr(u,h-u))}u=h;if(i.length>=a){break}}}if(l===undefined){l=e.slice(o)}var g=1;for(var v=t-1;v>=0;v--){if(e[v]==="\n"){g++}}return{line:l,beforeLines:n,afterLines:i,column:d,lineNumber:g}}t["default"]={getBlock:function getBlock(e,t,r){var a=getLines(e,t,2,2);var i=0;var o=a.line.length;if(a.column>30){i=a.column-30}if(o-(a.column+r)>30){o=a.column+r+30}var l=a.line.substring(i,a.column)+n.default.red(a.line.substr(a.column,r))+a.line.substring(a.column+r,o);return{info:l,lineNumber:a.lineNumber}}}},1517:(e,t)=>{"use strict";t.__esModule=true;function filterFactory(e){return function(t){return t.filter((function(t){return!t.word.match(e)}))}}var r=filterFactory(/^[0-9,\.\-#]+(th|st|nd|rd)?$/);var a=filterFactory(/^[A-Z0-9]{2,}(['\u2018-\u2019]s)?$/);t["default"]={acronyms:a,numbers:r,filter:function filter(e,t){var n=t&&t.ignoreAcronyms;var i=t&&t.ignoreNumbers;if(n){e=a(e)}if(i){e=r(e)}return e}}},3721:(e,t,r)=>{"use strict";var a;a=true;var n=r(7147);var i=_interopRequireDefault(n);var o=r(6641);var l=_interopRequireDefault(o);var d=r(2248);var u=_interopRequireDefault(d);var c=r(1339);var h=_interopRequireDefault(c);var g=r(1517);var v=_interopRequireDefault(g);var w=r(7888);var b=_interopRequireDefault(w);var y=r(5475);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getWords(e,t){var r=(0,u.default)((0,l.default)(e));return v.default.filter(r,t)}function spell(e,t){if(typeof e!=="string"){throw new Error("spell takes a string")}var r=getWords(e,t);return h.default.checkWords(r,t)}function spellFile(e,t){var r=i.default.readFileSync(e,"utf-8");return{errors:spell(r,t),src:r}}function spellCallback(e,t,r,a){var n=getWords(e,t);b.default.eachSeries(n,b.default.ensureAsync((function(e,a){if(!h.default.checkWord(e.word,t)){r(e,a)}else{a()}})),a)}t.Z={spell:spell,spellFile:spellFile,spellCallback:spellCallback,spellcheck:h.default,generateSummaryReport:y.generateSummaryReport,generateFileReport:y.generateFileReport}},6641:(e,t,r)=>{"use strict";t.__esModule=true;var a=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol==="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t["default"]=function(e){var t=[];var r=0;var a=(0,u.default)(e);var n=getJekyllFrontMatter(e);if(n){a.replaceAll(n," ")}a.removeAll(/```[\w\W]*?```/);a.removeAll(/~~~[\w\W]*?~~~/);a.removeAll(/``[\w\W]*?``/);a.removeAll(/`[^`]*`/);a.replaceAll(/<style[\w\W]*?<\/style>/," ");a.replaceAll(/<script[\w\W]*?<\/script>/," ");a.replaceAll(/\{%\s*highlight[\w\W]*?\{%\s*endhighlight\s*%\}/," ");a.replaceAll(/\{%.*%\}/," ");a.replaceAll(/\{\{.*\}\}/," ");a.replaceAll(/&[#a-z0-9]{1,5};/," ");e=a.replaceAll(/<\/?[a-z0-9]+ ?([a-z]+="[^"]*" ?)*\/?>/i," ");var o={gfm:true,renderer:{strong:function strong(){},em:function em(){},codespan:function codespan(){},br:function br(){},del:function del(){},link:function link(){},image:function image(){},text:function text(e){e=e.replace(/&#39;/g,"'");var t=e.split(/(https?|ftp):\/\/[^\s/$.?#].[^\s]*|[\s\xa0\r\n]|&[a-z#0-9]+;|[&<>]/);for(var r=0;r<t.length;r++){var a=t[r];if(a){addToken(a)}}}}};function addToken(n){var i=e.indexOf(n,r);if(i===-1){throw new Error("Markdown Parser : Inline Lexer : Could not find index of text - \n"+n+"\n\n**In**\n\n"+e.substring(r,30)+"\n")}r=i+n.length;t.push({text:n,index:a.getOriginalIndex(i)})}var l=i.default.lexer(e,o);var d=new i.default.InlineLexer(l.links,o);for(var c=0;c<l.length;c++){var h=l[c];if(h.text&&h.type!=="code"){d.output(h.text)}}return t};var n=r(5766);var i=_interopRequireDefault(n);var o=r(6821);var l=_interopRequireDefault(o);var d=r(4062);var u=_interopRequireDefault(d);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getJekyllFrontMatter(e){var t=e.match(/^\r?\n?---\r?\n([\w\W]+?)\r?\n---\r?\n/);if(t){var r=t[1];try{var n=l.default.safeLoad(r);return(typeof n==="undefined"?"undefined":a(n))==="object"?t[0]:undefined}catch(e){}}}},5475:(e,t,r)=>{"use strict";t.__esModule=true;t.generateSummaryReport=generateSummaryReport;t.generateFileReport=generateFileReport;var a=r(8707);var n=_interopRequireDefault(a);var i=r(9459);var o=_interopRequireDefault(i);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function generateSummaryReport(e){var t=e.map((function(e){return e&&e.length?e.length:0})).reduce((function(e,t){return e+t}),0);var r="file"+(e.length>1?"s":"");var a="error"+(t>1?"s":"");var i=e.length>1?"are":"is";if(t>0){return n.default.red(">>")+" "+t+" spelling "+a+" found in "+e.length+" "+r}return n.default.green(">>")+" "+e.length+" "+r+" "+i+" free from spelling errors"}function generateFileReport(e,t){var r="    "+n.default.bold(e)+"\n";for(var a=0;a<t.errors.length;a++){var i=t.errors[a];var l=o.default.getBlock(t.src,i.index,i.word.length);var d=String(l.lineNumber);var u=Array(10-d.length).join(" ");var c=""+u+d+" |";r+=c+" "+l.info+" \n"}return r}},1339:(e,t,r)=>{"use strict";t.__esModule=true;var a=r(7993);var n=_interopRequireDefault(a);var i=r(7147);var o=_interopRequireDefault(i);var l=r(1017);var d=_interopRequireDefault(l);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var u=void 0,c=void 0;function initialise(e){var t=e&&e.dictionary;var r=d.default.join(__dirname,"../data/en-GB");if(t&&t.file){r=t.file}else if(t&&t.language){switch(t.language){case"en-us":r=d.default.join(__dirname,"../data/en_US-large");break;case"en-gb":break;case"en-au":r=d.default.join(__dirname,"../data/en_AU");break;case"es-es":r=d.default.join(__dirname,"../data/es_ANY");break;default:throw new Error("unsupported language:"+t.language)}}u=new n.default;c=u.parse({aff:o.default.readFileSync(r+".aff"),dic:o.default.readFileSync(r+".dic")});u.use(c)}function normaliseApos(e){return e.replace(/\u2019/,"'")}function checkWord(e,t){if(!u){initialise(t)}e=normaliseApos(e);if(u.check(e)){return true}if(e.match(/'s$/)){var r=e.substr(0,e.length-2);if(u.check(r)){return true}}var a=e+".";if(u.check(a)){return true}if(e.indexOf("-")){var n=e.split("-");if(n.every((function(e){return u.check(e)}))){return true}}return false}function checkWords(e,t){var r=[];for(var a=0;a<e.length;a++){var n=e[a];if(!checkWord(n.word,t)){r.push(n)}}return r}function _addWord(e){c.dictionaryTable[e]=[[]]}var h=[];var g=false;function addWord(e,t){if(!u){initialise()}e=normaliseApos(e);if(!t){h.push(e)}else{g=true}_addWord(e)}function resetTemporaryCustomDictionary(){if(g){if(!u){initialise()}h.forEach((function(e){return _addWord(e)}))}}function suggest(e){return u.suggest(e)}t["default"]={initialise:initialise,checkWords:checkWords,checkWord:checkWord,addWord:addWord,resetTemporaryCustomDictionary:resetTemporaryCustomDictionary,suggest:suggest}},4062:(e,t)=>{"use strict";t.__esModule=true;t["default"]=function(e){var t=[];function getOriginalIndex(e){var r=void 0;for(var a=0;a<t.length;a++){var n=t[a];if(n.newIndex<=e){if(!r||r.newIndex<n.newIndex){r=n}}}if(r){return r.index+(e-r.newIndex)}return e}function replaceAll(r,a){while(true){var n=void 0;if(r instanceof RegExp){n=e.match(r)}else{n={index:e.indexOf(r),0:r}}if(!n||n.index===-1){break}var i=n.index+n[0].length;var o=getOriginalIndex(i);var l=n[0].length-a.length;for(var d=t.length-1;d>=0;d--){var u=t[d];if(u.newIndex>=n.index){if(u.newIndex<i){t.splice(d,1)}else{u.newIndex-=l}}}t.push({newIndex:n.index+a.length,index:o});if(a.length){t.push({newIndex:n.index,index:NaN})}e=e.substring(0,n.index)+a+e.slice(n.index+n[0].length)}return e}return{removeAll:function removeAll(e){return replaceAll(e,"")},replaceAll:replaceAll,getOriginalIndex:getOriginalIndex}}},2248:(e,t)=>{"use strict";t.__esModule=true;t["default"]=function(e){var t=[];for(var r=0;r<e.length;r++){var a=e[r];var n=a.text;var i=a.index;while(true){var o=n.match(/(\w+(\.\w+)+\.?)|[\u00c0-\u01bf\u01d0-\u029f\w'\u2018-\u2019][\-#\u00c0-\u01bf\u01d0-\u029f\w'\u2018-\u2019]*|[\u0400-\u04FF\w'\u2018-\u2019][\-#\u0400-\u04FF\w'\u2018-\u2019]*/);if(!o){break}var l=o[0];var d=i+o.index;var u=l.match(/^[#'\u2018]+/);if(u){var c=u[0].length;d+=c;l=l.substr(c,l.length-c)}var h=l.match(/['\u2019\-#]+$/);if(h){l=l.substr(0,l.length-h[0].length)}t.push({word:l,index:d});i+=o.index+o[0].length;n=n.slice(o.index+o[0].length)}}return t}},6821:(e,t,r)=>{"use strict";var a=r(695);e.exports=a},695:(e,t,r)=>{"use strict";var a=r(7134);var n=r(5605);function deprecated(e){return function(){throw new Error("Function "+e+" is deprecated and cannot be used.")}}e.exports.Type=r(6742);e.exports.Schema=r(8965);e.exports.FAILSAFE_SCHEMA=r(7954);e.exports.JSON_SCHEMA=r(1200);e.exports.CORE_SCHEMA=r(6780);e.exports.DEFAULT_SAFE_SCHEMA=r(8451);e.exports.DEFAULT_FULL_SCHEMA=r(413);e.exports.load=a.load;e.exports.loadAll=a.loadAll;e.exports.safeLoad=a.safeLoad;e.exports.safeLoadAll=a.safeLoadAll;e.exports.dump=n.dump;e.exports.safeDump=n.safeDump;e.exports.YAMLException=r(1537);e.exports.MINIMAL_SCHEMA=r(7954);e.exports.SAFE_SCHEMA=r(8451);e.exports.DEFAULT_SCHEMA=r(413);e.exports.scan=deprecated("scan");e.exports.parse=deprecated("parse");e.exports.compose=deprecated("compose");e.exports.addConstructor=deprecated("addConstructor")},9089:e=>{"use strict";function isNothing(e){return typeof e==="undefined"||e===null}function isObject(e){return typeof e==="object"&&e!==null}function toArray(e){if(Array.isArray(e))return e;else if(isNothing(e))return[];return[e]}function extend(e,t){var r,a,n,i;if(t){i=Object.keys(t);for(r=0,a=i.length;r<a;r+=1){n=i[r];e[n]=t[n]}}return e}function repeat(e,t){var r="",a;for(a=0;a<t;a+=1){r+=e}return r}function isNegativeZero(e){return e===0&&Number.NEGATIVE_INFINITY===1/e}e.exports.isNothing=isNothing;e.exports.isObject=isObject;e.exports.toArray=toArray;e.exports.repeat=repeat;e.exports.isNegativeZero=isNegativeZero;e.exports.extend=extend},5605:(e,t,r)=>{"use strict";var a=r(9089);var n=r(1537);var i=r(413);var o=r(8451);var l=Object.prototype.toString;var d=Object.prototype.hasOwnProperty;var u=9;var c=10;var h=13;var g=32;var v=33;var w=34;var b=35;var y=37;var k=38;var E=39;var D=42;var _=44;var A=45;var S=58;var x=61;var C=62;var T=63;var F=64;var O=91;var P=93;var L=96;var R=123;var B=124;var N=125;var j={};j[0]="\\0";j[7]="\\a";j[8]="\\b";j[9]="\\t";j[10]="\\n";j[11]="\\v";j[12]="\\f";j[13]="\\r";j[27]="\\e";j[34]='\\"';j[92]="\\\\";j[133]="\\N";j[160]="\\_";j[8232]="\\L";j[8233]="\\P";var I=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];function compileStyleMap(e,t){var r,a,n,i,o,l,u;if(t===null)return{};r={};a=Object.keys(t);for(n=0,i=a.length;n<i;n+=1){o=a[n];l=String(t[o]);if(o.slice(0,2)==="!!"){o="tag:yaml.org,2002:"+o.slice(2)}u=e.compiledTypeMap["fallback"][o];if(u&&d.call(u.styleAliases,l)){l=u.styleAliases[l]}r[o]=l}return r}function encodeHex(e){var t,r,i;t=e.toString(16).toUpperCase();if(e<=255){r="x";i=2}else if(e<=65535){r="u";i=4}else if(e<=4294967295){r="U";i=8}else{throw new n("code point within a string may not be greater than 0xFFFFFFFF")}return"\\"+r+a.repeat("0",i-t.length)+t}function State(e){this.schema=e["schema"]||i;this.indent=Math.max(1,e["indent"]||2);this.noArrayIndent=e["noArrayIndent"]||false;this.skipInvalid=e["skipInvalid"]||false;this.flowLevel=a.isNothing(e["flowLevel"])?-1:e["flowLevel"];this.styleMap=compileStyleMap(this.schema,e["styles"]||null);this.sortKeys=e["sortKeys"]||false;this.lineWidth=e["lineWidth"]||80;this.noRefs=e["noRefs"]||false;this.noCompatMode=e["noCompatMode"]||false;this.condenseFlow=e["condenseFlow"]||false;this.implicitTypes=this.schema.compiledImplicit;this.explicitTypes=this.schema.compiledExplicit;this.tag=null;this.result="";this.duplicates=[];this.usedDuplicates=null}function indentString(e,t){var r=a.repeat(" ",t),n=0,i=-1,o="",l,d=e.length;while(n<d){i=e.indexOf("\n",n);if(i===-1){l=e.slice(n);n=d}else{l=e.slice(n,i+1);n=i+1}if(l.length&&l!=="\n")o+=r;o+=l}return o}function generateNextLine(e,t){return"\n"+a.repeat(" ",e.indent*t)}function testImplicitResolving(e,t){var r,a,n;for(r=0,a=e.implicitTypes.length;r<a;r+=1){n=e.implicitTypes[r];if(n.resolve(t)){return true}}return false}function isWhitespace(e){return e===g||e===u}function isPrintable(e){return 32<=e&&e<=126||161<=e&&e<=55295&&e!==8232&&e!==8233||57344<=e&&e<=65533&&e!==65279||65536<=e&&e<=1114111}function isNsChar(e){return isPrintable(e)&&!isWhitespace(e)&&e!==65279&&e!==h&&e!==c}function isPlainSafe(e,t){return isPrintable(e)&&e!==65279&&e!==_&&e!==O&&e!==P&&e!==R&&e!==N&&e!==S&&(e!==b||t&&isNsChar(t))}function isPlainSafeFirst(e){return isPrintable(e)&&e!==65279&&!isWhitespace(e)&&e!==A&&e!==T&&e!==S&&e!==_&&e!==O&&e!==P&&e!==R&&e!==N&&e!==b&&e!==k&&e!==D&&e!==v&&e!==B&&e!==x&&e!==C&&e!==E&&e!==w&&e!==y&&e!==F&&e!==L}function needIndentIndicator(e){var t=/^\n* /;return t.test(e)}var q=1,U=2,G=3,V=4,z=5;function chooseScalarStyle(e,t,r,a,n){var i;var o,l;var d=false;var u=false;var h=a!==-1;var g=-1;var v=isPlainSafeFirst(e.charCodeAt(0))&&!isWhitespace(e.charCodeAt(e.length-1));if(t){for(i=0;i<e.length;i++){o=e.charCodeAt(i);if(!isPrintable(o)){return z}l=i>0?e.charCodeAt(i-1):null;v=v&&isPlainSafe(o,l)}}else{for(i=0;i<e.length;i++){o=e.charCodeAt(i);if(o===c){d=true;if(h){u=u||i-g-1>a&&e[g+1]!==" ";g=i}}else if(!isPrintable(o)){return z}l=i>0?e.charCodeAt(i-1):null;v=v&&isPlainSafe(o,l)}u=u||h&&(i-g-1>a&&e[g+1]!==" ")}if(!d&&!u){return v&&!n(e)?q:U}if(r>9&&needIndentIndicator(e)){return z}return u?V:G}function writeScalar(e,t,r,a){e.dump=function(){if(t.length===0){return"''"}if(!e.noCompatMode&&I.indexOf(t)!==-1){return"'"+t+"'"}var i=e.indent*Math.max(1,r);var o=e.lineWidth===-1?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-i);var l=a||e.flowLevel>-1&&r>=e.flowLevel;function testAmbiguity(t){return testImplicitResolving(e,t)}switch(chooseScalarStyle(t,l,e.indent,o,testAmbiguity)){case q:return t;case U:return"'"+t.replace(/'/g,"''")+"'";case G:return"|"+blockHeader(t,e.indent)+dropEndingNewline(indentString(t,i));case V:return">"+blockHeader(t,e.indent)+dropEndingNewline(indentString(foldString(t,o),i));case z:return'"'+escapeString(t,o)+'"';default:throw new n("impossible error: invalid scalar style")}}()}function blockHeader(e,t){var r=needIndentIndicator(e)?String(t):"";var a=e[e.length-1]==="\n";var n=a&&(e[e.length-2]==="\n"||e==="\n");var i=n?"+":a?"":"-";return r+i+"\n"}function dropEndingNewline(e){return e[e.length-1]==="\n"?e.slice(0,-1):e}function foldString(e,t){var r=/(\n+)([^\n]*)/g;var a=function(){var a=e.indexOf("\n");a=a!==-1?a:e.length;r.lastIndex=a;return foldLine(e.slice(0,a),t)}();var n=e[0]==="\n"||e[0]===" ";var i;var o;while(o=r.exec(e)){var l=o[1],d=o[2];i=d[0]===" ";a+=l+(!n&&!i&&d!==""?"\n":"")+foldLine(d,t);n=i}return a}function foldLine(e,t){if(e===""||e[0]===" ")return e;var r=/ [^ ]/g;var a;var n=0,i,o=0,l=0;var d="";while(a=r.exec(e)){l=a.index;if(l-n>t){i=o>n?o:l;d+="\n"+e.slice(n,i);n=i+1}o=l}d+="\n";if(e.length-n>t&&o>n){d+=e.slice(n,o)+"\n"+e.slice(o+1)}else{d+=e.slice(n)}return d.slice(1)}function escapeString(e){var t="";var r,a;var n;for(var i=0;i<e.length;i++){r=e.charCodeAt(i);if(r>=55296&&r<=56319){a=e.charCodeAt(i+1);if(a>=56320&&a<=57343){t+=encodeHex((r-55296)*1024+a-56320+65536);i++;continue}}n=j[r];t+=!n&&isPrintable(r)?e[i]:n||encodeHex(r)}return t}function writeFlowSequence(e,t,r){var a="",n=e.tag,i,o;for(i=0,o=r.length;i<o;i+=1){if(writeNode(e,t,r[i],false,false)){if(i!==0)a+=","+(!e.condenseFlow?" ":"");a+=e.dump}}e.tag=n;e.dump="["+a+"]"}function writeBlockSequence(e,t,r,a){var n="",i=e.tag,o,l;for(o=0,l=r.length;o<l;o+=1){if(writeNode(e,t+1,r[o],true,true)){if(!a||o!==0){n+=generateNextLine(e,t)}if(e.dump&&c===e.dump.charCodeAt(0)){n+="-"}else{n+="- "}n+=e.dump}}e.tag=i;e.dump=n||"[]"}function writeFlowMapping(e,t,r){var a="",n=e.tag,i=Object.keys(r),o,l,d,u,c;for(o=0,l=i.length;o<l;o+=1){c="";if(o!==0)c+=", ";if(e.condenseFlow)c+='"';d=i[o];u=r[d];if(!writeNode(e,t,d,false,false)){continue}if(e.dump.length>1024)c+="? ";c+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" ");if(!writeNode(e,t,u,false,false)){continue}c+=e.dump;a+=c}e.tag=n;e.dump="{"+a+"}"}function writeBlockMapping(e,t,r,a){var i="",o=e.tag,l=Object.keys(r),d,u,h,g,v,w;if(e.sortKeys===true){l.sort()}else if(typeof e.sortKeys==="function"){l.sort(e.sortKeys)}else if(e.sortKeys){throw new n("sortKeys must be a boolean or a function")}for(d=0,u=l.length;d<u;d+=1){w="";if(!a||d!==0){w+=generateNextLine(e,t)}h=l[d];g=r[h];if(!writeNode(e,t+1,h,true,true,true)){continue}v=e.tag!==null&&e.tag!=="?"||e.dump&&e.dump.length>1024;if(v){if(e.dump&&c===e.dump.charCodeAt(0)){w+="?"}else{w+="? "}}w+=e.dump;if(v){w+=generateNextLine(e,t)}if(!writeNode(e,t+1,g,true,v)){continue}if(e.dump&&c===e.dump.charCodeAt(0)){w+=":"}else{w+=": "}w+=e.dump;i+=w}e.tag=o;e.dump=i||"{}"}function detectType(e,t,r){var a,i,o,u,c,h;i=r?e.explicitTypes:e.implicitTypes;for(o=0,u=i.length;o<u;o+=1){c=i[o];if((c.instanceOf||c.predicate)&&(!c.instanceOf||typeof t==="object"&&t instanceof c.instanceOf)&&(!c.predicate||c.predicate(t))){e.tag=r?c.tag:"?";if(c.represent){h=e.styleMap[c.tag]||c.defaultStyle;if(l.call(c.represent)==="[object Function]"){a=c.represent(t,h)}else if(d.call(c.represent,h)){a=c.represent[h](t,h)}else{throw new n("!<"+c.tag+'> tag resolver accepts not "'+h+'" style')}e.dump=a}return true}}return false}function writeNode(e,t,r,a,i,o){e.tag=null;e.dump=r;if(!detectType(e,r,false)){detectType(e,r,true)}var d=l.call(e.dump);if(a){a=e.flowLevel<0||e.flowLevel>t}var u=d==="[object Object]"||d==="[object Array]",c,h;if(u){c=e.duplicates.indexOf(r);h=c!==-1}if(e.tag!==null&&e.tag!=="?"||h||e.indent!==2&&t>0){i=false}if(h&&e.usedDuplicates[c]){e.dump="*ref_"+c}else{if(u&&h&&!e.usedDuplicates[c]){e.usedDuplicates[c]=true}if(d==="[object Object]"){if(a&&Object.keys(e.dump).length!==0){writeBlockMapping(e,t,e.dump,i);if(h){e.dump="&ref_"+c+e.dump}}else{writeFlowMapping(e,t,e.dump);if(h){e.dump="&ref_"+c+" "+e.dump}}}else if(d==="[object Array]"){var g=e.noArrayIndent&&t>0?t-1:t;if(a&&e.dump.length!==0){writeBlockSequence(e,g,e.dump,i);if(h){e.dump="&ref_"+c+e.dump}}else{writeFlowSequence(e,g,e.dump);if(h){e.dump="&ref_"+c+" "+e.dump}}}else if(d==="[object String]"){if(e.tag!=="?"){writeScalar(e,e.dump,t,o)}}else{if(e.skipInvalid)return false;throw new n("unacceptable kind of an object to dump "+d)}if(e.tag!==null&&e.tag!=="?"){e.dump="!<"+e.tag+"> "+e.dump}}return true}function getDuplicateReferences(e,t){var r=[],a=[],n,i;inspectNode(e,r,a);for(n=0,i=a.length;n<i;n+=1){t.duplicates.push(r[a[n]])}t.usedDuplicates=new Array(i)}function inspectNode(e,t,r){var a,n,i;if(e!==null&&typeof e==="object"){n=t.indexOf(e);if(n!==-1){if(r.indexOf(n)===-1){r.push(n)}}else{t.push(e);if(Array.isArray(e)){for(n=0,i=e.length;n<i;n+=1){inspectNode(e[n],t,r)}}else{a=Object.keys(e);for(n=0,i=a.length;n<i;n+=1){inspectNode(e[a[n]],t,r)}}}}}function dump(e,t){t=t||{};var r=new State(t);if(!r.noRefs)getDuplicateReferences(e,r);if(writeNode(r,0,e,true,true))return r.dump+"\n";return""}function safeDump(e,t){return dump(e,a.extend({schema:o},t))}e.exports.dump=dump;e.exports.safeDump=safeDump},1537:e=>{"use strict";function YAMLException(e,t){Error.call(this);this.name="YAMLException";this.reason=e;this.mark=t;this.message=(this.reason||"(unknown reason)")+(this.mark?" "+this.mark.toString():"");if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}else{this.stack=(new Error).stack||""}}YAMLException.prototype=Object.create(Error.prototype);YAMLException.prototype.constructor=YAMLException;YAMLException.prototype.toString=function toString(e){var t=this.name+": ";t+=this.reason||"(unknown reason)";if(!e&&this.mark){t+=" "+this.mark.toString()}return t};e.exports=YAMLException},7134:(e,t,r)=>{"use strict";var a=r(9089);var n=r(1537);var i=r(5660);var o=r(8451);var l=r(413);var d=Object.prototype.hasOwnProperty;var u=1;var c=2;var h=3;var g=4;var v=1;var w=2;var b=3;var y=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;var k=/[\x85\u2028\u2029]/;var E=/[,\[\]\{\}]/;var D=/^(?:!|!!|![a-z\-]+!)$/i;var _=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function _class(e){return Object.prototype.toString.call(e)}function is_EOL(e){return e===10||e===13}function is_WHITE_SPACE(e){return e===9||e===32}function is_WS_OR_EOL(e){return e===9||e===32||e===10||e===13}function is_FLOW_INDICATOR(e){return e===44||e===91||e===93||e===123||e===125}function fromHexCode(e){var t;if(48<=e&&e<=57){return e-48}t=e|32;if(97<=t&&t<=102){return t-97+10}return-1}function escapedHexLen(e){if(e===120){return 2}if(e===117){return 4}if(e===85){return 8}return 0}function fromDecimalCode(e){if(48<=e&&e<=57){return e-48}return-1}function simpleEscapeSequence(e){return e===48?"\0":e===97?"":e===98?"\b":e===116?"\t":e===9?"\t":e===110?"\n":e===118?"\v":e===102?"\f":e===114?"\r":e===101?"":e===32?" ":e===34?'"':e===47?"/":e===92?"\\":e===78?"":e===95?" ":e===76?"\u2028":e===80?"\u2029":""}function charFromCodepoint(e){if(e<=65535){return String.fromCharCode(e)}return String.fromCharCode((e-65536>>10)+55296,(e-65536&1023)+56320)}var A=new Array(256);var S=new Array(256);for(var x=0;x<256;x++){A[x]=simpleEscapeSequence(x)?1:0;S[x]=simpleEscapeSequence(x)}function State(e,t){this.input=e;this.filename=t["filename"]||null;this.schema=t["schema"]||l;this.onWarning=t["onWarning"]||null;this.legacy=t["legacy"]||false;this.json=t["json"]||false;this.listener=t["listener"]||null;this.implicitTypes=this.schema.compiledImplicit;this.typeMap=this.schema.compiledTypeMap;this.length=e.length;this.position=0;this.line=0;this.lineStart=0;this.lineIndent=0;this.documents=[]}function generateError(e,t){return new n(t,new i(e.filename,e.input,e.position,e.line,e.position-e.lineStart))}function throwError(e,t){throw generateError(e,t)}function throwWarning(e,t){if(e.onWarning){e.onWarning.call(null,generateError(e,t))}}var C={YAML:function handleYamlDirective(e,t,r){var a,n,i;if(e.version!==null){throwError(e,"duplication of %YAML directive")}if(r.length!==1){throwError(e,"YAML directive accepts exactly one argument")}a=/^([0-9]+)\.([0-9]+)$/.exec(r[0]);if(a===null){throwError(e,"ill-formed argument of the YAML directive")}n=parseInt(a[1],10);i=parseInt(a[2],10);if(n!==1){throwError(e,"unacceptable YAML version of the document")}e.version=r[0];e.checkLineBreaks=i<2;if(i!==1&&i!==2){throwWarning(e,"unsupported YAML version of the document")}},TAG:function handleTagDirective(e,t,r){var a,n;if(r.length!==2){throwError(e,"TAG directive accepts exactly two arguments")}a=r[0];n=r[1];if(!D.test(a)){throwError(e,"ill-formed tag handle (first argument) of the TAG directive")}if(d.call(e.tagMap,a)){throwError(e,'there is a previously declared suffix for "'+a+'" tag handle')}if(!_.test(n)){throwError(e,"ill-formed tag prefix (second argument) of the TAG directive")}e.tagMap[a]=n}};function captureSegment(e,t,r,a){var n,i,o,l;if(t<r){l=e.input.slice(t,r);if(a){for(n=0,i=l.length;n<i;n+=1){o=l.charCodeAt(n);if(!(o===9||32<=o&&o<=1114111)){throwError(e,"expected valid JSON character")}}}else if(y.test(l)){throwError(e,"the stream contains non-printable characters")}e.result+=l}}function mergeMappings(e,t,r,n){var i,o,l,u;if(!a.isObject(r)){throwError(e,"cannot merge mappings; the provided source object is unacceptable")}i=Object.keys(r);for(l=0,u=i.length;l<u;l+=1){o=i[l];if(!d.call(t,o)){t[o]=r[o];n[o]=true}}}function storeMappingPair(e,t,r,a,n,i,o,l){var u,c;if(Array.isArray(n)){n=Array.prototype.slice.call(n);for(u=0,c=n.length;u<c;u+=1){if(Array.isArray(n[u])){throwError(e,"nested arrays are not supported inside keys")}if(typeof n==="object"&&_class(n[u])==="[object Object]"){n[u]="[object Object]"}}}if(typeof n==="object"&&_class(n)==="[object Object]"){n="[object Object]"}n=String(n);if(t===null){t={}}if(a==="tag:yaml.org,2002:merge"){if(Array.isArray(i)){for(u=0,c=i.length;u<c;u+=1){mergeMappings(e,t,i[u],r)}}else{mergeMappings(e,t,i,r)}}else{if(!e.json&&!d.call(r,n)&&d.call(t,n)){e.line=o||e.line;e.position=l||e.position;throwError(e,"duplicated mapping key")}t[n]=i;delete r[n]}return t}function readLineBreak(e){var t;t=e.input.charCodeAt(e.position);if(t===10){e.position++}else if(t===13){e.position++;if(e.input.charCodeAt(e.position)===10){e.position++}}else{throwError(e,"a line break is expected")}e.line+=1;e.lineStart=e.position}function skipSeparationSpace(e,t,r){var a=0,n=e.input.charCodeAt(e.position);while(n!==0){while(is_WHITE_SPACE(n)){n=e.input.charCodeAt(++e.position)}if(t&&n===35){do{n=e.input.charCodeAt(++e.position)}while(n!==10&&n!==13&&n!==0)}if(is_EOL(n)){readLineBreak(e);n=e.input.charCodeAt(e.position);a++;e.lineIndent=0;while(n===32){e.lineIndent++;n=e.input.charCodeAt(++e.position)}}else{break}}if(r!==-1&&a!==0&&e.lineIndent<r){throwWarning(e,"deficient indentation")}return a}function testDocumentSeparator(e){var t=e.position,r;r=e.input.charCodeAt(t);if((r===45||r===46)&&r===e.input.charCodeAt(t+1)&&r===e.input.charCodeAt(t+2)){t+=3;r=e.input.charCodeAt(t);if(r===0||is_WS_OR_EOL(r)){return true}}return false}function writeFoldedLines(e,t){if(t===1){e.result+=" "}else if(t>1){e.result+=a.repeat("\n",t-1)}}function readPlainScalar(e,t,r){var a,n,i,o,l,d,u,c,h=e.kind,g=e.result,v;v=e.input.charCodeAt(e.position);if(is_WS_OR_EOL(v)||is_FLOW_INDICATOR(v)||v===35||v===38||v===42||v===33||v===124||v===62||v===39||v===34||v===37||v===64||v===96){return false}if(v===63||v===45){n=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(n)||r&&is_FLOW_INDICATOR(n)){return false}}e.kind="scalar";e.result="";i=o=e.position;l=false;while(v!==0){if(v===58){n=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(n)||r&&is_FLOW_INDICATOR(n)){break}}else if(v===35){a=e.input.charCodeAt(e.position-1);if(is_WS_OR_EOL(a)){break}}else if(e.position===e.lineStart&&testDocumentSeparator(e)||r&&is_FLOW_INDICATOR(v)){break}else if(is_EOL(v)){d=e.line;u=e.lineStart;c=e.lineIndent;skipSeparationSpace(e,false,-1);if(e.lineIndent>=t){l=true;v=e.input.charCodeAt(e.position);continue}else{e.position=o;e.line=d;e.lineStart=u;e.lineIndent=c;break}}if(l){captureSegment(e,i,o,false);writeFoldedLines(e,e.line-d);i=o=e.position;l=false}if(!is_WHITE_SPACE(v)){o=e.position+1}v=e.input.charCodeAt(++e.position)}captureSegment(e,i,o,false);if(e.result){return true}e.kind=h;e.result=g;return false}function readSingleQuotedScalar(e,t){var r,a,n;r=e.input.charCodeAt(e.position);if(r!==39){return false}e.kind="scalar";e.result="";e.position++;a=n=e.position;while((r=e.input.charCodeAt(e.position))!==0){if(r===39){captureSegment(e,a,e.position,true);r=e.input.charCodeAt(++e.position);if(r===39){a=e.position;e.position++;n=e.position}else{return true}}else if(is_EOL(r)){captureSegment(e,a,n,true);writeFoldedLines(e,skipSeparationSpace(e,false,t));a=n=e.position}else if(e.position===e.lineStart&&testDocumentSeparator(e)){throwError(e,"unexpected end of the document within a single quoted scalar")}else{e.position++;n=e.position}}throwError(e,"unexpected end of the stream within a single quoted scalar")}function readDoubleQuotedScalar(e,t){var r,a,n,i,o,l;l=e.input.charCodeAt(e.position);if(l!==34){return false}e.kind="scalar";e.result="";e.position++;r=a=e.position;while((l=e.input.charCodeAt(e.position))!==0){if(l===34){captureSegment(e,r,e.position,true);e.position++;return true}else if(l===92){captureSegment(e,r,e.position,true);l=e.input.charCodeAt(++e.position);if(is_EOL(l)){skipSeparationSpace(e,false,t)}else if(l<256&&A[l]){e.result+=S[l];e.position++}else if((o=escapedHexLen(l))>0){n=o;i=0;for(;n>0;n--){l=e.input.charCodeAt(++e.position);if((o=fromHexCode(l))>=0){i=(i<<4)+o}else{throwError(e,"expected hexadecimal character")}}e.result+=charFromCodepoint(i);e.position++}else{throwError(e,"unknown escape sequence")}r=a=e.position}else if(is_EOL(l)){captureSegment(e,r,a,true);writeFoldedLines(e,skipSeparationSpace(e,false,t));r=a=e.position}else if(e.position===e.lineStart&&testDocumentSeparator(e)){throwError(e,"unexpected end of the document within a double quoted scalar")}else{e.position++;a=e.position}}throwError(e,"unexpected end of the stream within a double quoted scalar")}function readFlowCollection(e,t){var r=true,a,n=e.tag,i,o=e.anchor,l,d,c,h,g,v={},w,b,y,k;k=e.input.charCodeAt(e.position);if(k===91){d=93;g=false;i=[]}else if(k===123){d=125;g=true;i={}}else{return false}if(e.anchor!==null){e.anchorMap[e.anchor]=i}k=e.input.charCodeAt(++e.position);while(k!==0){skipSeparationSpace(e,true,t);k=e.input.charCodeAt(e.position);if(k===d){e.position++;e.tag=n;e.anchor=o;e.kind=g?"mapping":"sequence";e.result=i;return true}else if(!r){throwError(e,"missed comma between flow collection entries")}b=w=y=null;c=h=false;if(k===63){l=e.input.charCodeAt(e.position+1);if(is_WS_OR_EOL(l)){c=h=true;e.position++;skipSeparationSpace(e,true,t)}}a=e.line;composeNode(e,t,u,false,true);b=e.tag;w=e.result;skipSeparationSpace(e,true,t);k=e.input.charCodeAt(e.position);if((h||e.line===a)&&k===58){c=true;k=e.input.charCodeAt(++e.position);skipSeparationSpace(e,true,t);composeNode(e,t,u,false,true);y=e.result}if(g){storeMappingPair(e,i,v,b,w,y)}else if(c){i.push(storeMappingPair(e,null,v,b,w,y))}else{i.push(w)}skipSeparationSpace(e,true,t);k=e.input.charCodeAt(e.position);if(k===44){r=true;k=e.input.charCodeAt(++e.position)}else{r=false}}throwError(e,"unexpected end of the stream within a flow collection")}function readBlockScalar(e,t){var r,n,i=v,o=false,l=false,d=t,u=0,c=false,h,g;g=e.input.charCodeAt(e.position);if(g===124){n=false}else if(g===62){n=true}else{return false}e.kind="scalar";e.result="";while(g!==0){g=e.input.charCodeAt(++e.position);if(g===43||g===45){if(v===i){i=g===43?b:w}else{throwError(e,"repeat of a chomping mode identifier")}}else if((h=fromDecimalCode(g))>=0){if(h===0){throwError(e,"bad explicit indentation width of a block scalar; it cannot be less than one")}else if(!l){d=t+h-1;l=true}else{throwError(e,"repeat of an indentation width identifier")}}else{break}}if(is_WHITE_SPACE(g)){do{g=e.input.charCodeAt(++e.position)}while(is_WHITE_SPACE(g));if(g===35){do{g=e.input.charCodeAt(++e.position)}while(!is_EOL(g)&&g!==0)}}while(g!==0){readLineBreak(e);e.lineIndent=0;g=e.input.charCodeAt(e.position);while((!l||e.lineIndent<d)&&g===32){e.lineIndent++;g=e.input.charCodeAt(++e.position)}if(!l&&e.lineIndent>d){d=e.lineIndent}if(is_EOL(g)){u++;continue}if(e.lineIndent<d){if(i===b){e.result+=a.repeat("\n",o?1+u:u)}else if(i===v){if(o){e.result+="\n"}}break}if(n){if(is_WHITE_SPACE(g)){c=true;e.result+=a.repeat("\n",o?1+u:u)}else if(c){c=false;e.result+=a.repeat("\n",u+1)}else if(u===0){if(o){e.result+=" "}}else{e.result+=a.repeat("\n",u)}}else{e.result+=a.repeat("\n",o?1+u:u)}o=true;l=true;u=0;r=e.position;while(!is_EOL(g)&&g!==0){g=e.input.charCodeAt(++e.position)}captureSegment(e,r,e.position,false)}return true}function readBlockSequence(e,t){var r,a=e.tag,n=e.anchor,i=[],o,l=false,d;if(e.anchor!==null){e.anchorMap[e.anchor]=i}d=e.input.charCodeAt(e.position);while(d!==0){if(d!==45){break}o=e.input.charCodeAt(e.position+1);if(!is_WS_OR_EOL(o)){break}l=true;e.position++;if(skipSeparationSpace(e,true,-1)){if(e.lineIndent<=t){i.push(null);d=e.input.charCodeAt(e.position);continue}}r=e.line;composeNode(e,t,h,false,true);i.push(e.result);skipSeparationSpace(e,true,-1);d=e.input.charCodeAt(e.position);if((e.line===r||e.lineIndent>t)&&d!==0){throwError(e,"bad indentation of a sequence entry")}else if(e.lineIndent<t){break}}if(l){e.tag=a;e.anchor=n;e.kind="sequence";e.result=i;return true}return false}function readBlockMapping(e,t,r){var a,n,i,o,l=e.tag,d=e.anchor,u={},h={},v=null,w=null,b=null,y=false,k=false,E;if(e.anchor!==null){e.anchorMap[e.anchor]=u}E=e.input.charCodeAt(e.position);while(E!==0){a=e.input.charCodeAt(e.position+1);i=e.line;o=e.position;if((E===63||E===58)&&is_WS_OR_EOL(a)){if(E===63){if(y){storeMappingPair(e,u,h,v,w,null);v=w=b=null}k=true;y=true;n=true}else if(y){y=false;n=true}else{throwError(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line")}e.position+=1;E=a}else if(composeNode(e,r,c,false,true)){if(e.line===i){E=e.input.charCodeAt(e.position);while(is_WHITE_SPACE(E)){E=e.input.charCodeAt(++e.position)}if(E===58){E=e.input.charCodeAt(++e.position);if(!is_WS_OR_EOL(E)){throwError(e,"a whitespace character is expected after the key-value separator within a block mapping")}if(y){storeMappingPair(e,u,h,v,w,null);v=w=b=null}k=true;y=false;n=false;v=e.tag;w=e.result}else if(k){throwError(e,"can not read an implicit mapping pair; a colon is missed")}else{e.tag=l;e.anchor=d;return true}}else if(k){throwError(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}else{e.tag=l;e.anchor=d;return true}}else{break}if(e.line===i||e.lineIndent>t){if(composeNode(e,t,g,true,n)){if(y){w=e.result}else{b=e.result}}if(!y){storeMappingPair(e,u,h,v,w,b,i,o);v=w=b=null}skipSeparationSpace(e,true,-1);E=e.input.charCodeAt(e.position)}if(e.lineIndent>t&&E!==0){throwError(e,"bad indentation of a mapping entry")}else if(e.lineIndent<t){break}}if(y){storeMappingPair(e,u,h,v,w,null)}if(k){e.tag=l;e.anchor=d;e.kind="mapping";e.result=u}return k}function readTagProperty(e){var t,r=false,a=false,n,i,o;o=e.input.charCodeAt(e.position);if(o!==33)return false;if(e.tag!==null){throwError(e,"duplication of a tag property")}o=e.input.charCodeAt(++e.position);if(o===60){r=true;o=e.input.charCodeAt(++e.position)}else if(o===33){a=true;n="!!";o=e.input.charCodeAt(++e.position)}else{n="!"}t=e.position;if(r){do{o=e.input.charCodeAt(++e.position)}while(o!==0&&o!==62);if(e.position<e.length){i=e.input.slice(t,e.position);o=e.input.charCodeAt(++e.position)}else{throwError(e,"unexpected end of the stream within a verbatim tag")}}else{while(o!==0&&!is_WS_OR_EOL(o)){if(o===33){if(!a){n=e.input.slice(t-1,e.position+1);if(!D.test(n)){throwError(e,"named tag handle cannot contain such characters")}a=true;t=e.position+1}else{throwError(e,"tag suffix cannot contain exclamation marks")}}o=e.input.charCodeAt(++e.position)}i=e.input.slice(t,e.position);if(E.test(i)){throwError(e,"tag suffix cannot contain flow indicator characters")}}if(i&&!_.test(i)){throwError(e,"tag name cannot contain such characters: "+i)}if(r){e.tag=i}else if(d.call(e.tagMap,n)){e.tag=e.tagMap[n]+i}else if(n==="!"){e.tag="!"+i}else if(n==="!!"){e.tag="tag:yaml.org,2002:"+i}else{throwError(e,'undeclared tag handle "'+n+'"')}return true}function readAnchorProperty(e){var t,r;r=e.input.charCodeAt(e.position);if(r!==38)return false;if(e.anchor!==null){throwError(e,"duplication of an anchor property")}r=e.input.charCodeAt(++e.position);t=e.position;while(r!==0&&!is_WS_OR_EOL(r)&&!is_FLOW_INDICATOR(r)){r=e.input.charCodeAt(++e.position)}if(e.position===t){throwError(e,"name of an anchor node must contain at least one character")}e.anchor=e.input.slice(t,e.position);return true}function readAlias(e){var t,r,a;a=e.input.charCodeAt(e.position);if(a!==42)return false;a=e.input.charCodeAt(++e.position);t=e.position;while(a!==0&&!is_WS_OR_EOL(a)&&!is_FLOW_INDICATOR(a)){a=e.input.charCodeAt(++e.position)}if(e.position===t){throwError(e,"name of an alias node must contain at least one character")}r=e.input.slice(t,e.position);if(!d.call(e.anchorMap,r)){throwError(e,'unidentified alias "'+r+'"')}e.result=e.anchorMap[r];skipSeparationSpace(e,true,-1);return true}function composeNode(e,t,r,a,n){var i,o,l,v=1,w=false,b=false,y,k,E,D,_;if(e.listener!==null){e.listener("open",e)}e.tag=null;e.anchor=null;e.kind=null;e.result=null;i=o=l=g===r||h===r;if(a){if(skipSeparationSpace(e,true,-1)){w=true;if(e.lineIndent>t){v=1}else if(e.lineIndent===t){v=0}else if(e.lineIndent<t){v=-1}}}if(v===1){while(readTagProperty(e)||readAnchorProperty(e)){if(skipSeparationSpace(e,true,-1)){w=true;l=i;if(e.lineIndent>t){v=1}else if(e.lineIndent===t){v=0}else if(e.lineIndent<t){v=-1}}else{l=false}}}if(l){l=w||n}if(v===1||g===r){if(u===r||c===r){D=t}else{D=t+1}_=e.position-e.lineStart;if(v===1){if(l&&(readBlockSequence(e,_)||readBlockMapping(e,_,D))||readFlowCollection(e,D)){b=true}else{if(o&&readBlockScalar(e,D)||readSingleQuotedScalar(e,D)||readDoubleQuotedScalar(e,D)){b=true}else if(readAlias(e)){b=true;if(e.tag!==null||e.anchor!==null){throwError(e,"alias node should not have any properties")}}else if(readPlainScalar(e,D,u===r)){b=true;if(e.tag===null){e.tag="?"}}if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}}}else if(v===0){b=l&&readBlockSequence(e,_)}}if(e.tag!==null&&e.tag!=="!"){if(e.tag==="?"){if(e.result!==null&&e.kind!=="scalar"){throwError(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"')}for(y=0,k=e.implicitTypes.length;y<k;y+=1){E=e.implicitTypes[y];if(E.resolve(e.result)){e.result=E.construct(e.result);e.tag=E.tag;if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}break}}}else if(d.call(e.typeMap[e.kind||"fallback"],e.tag)){E=e.typeMap[e.kind||"fallback"][e.tag];if(e.result!==null&&E.kind!==e.kind){throwError(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+E.kind+'", not "'+e.kind+'"')}if(!E.resolve(e.result)){throwError(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}else{e.result=E.construct(e.result);if(e.anchor!==null){e.anchorMap[e.anchor]=e.result}}}else{throwError(e,"unknown tag !<"+e.tag+">")}}if(e.listener!==null){e.listener("close",e)}return e.tag!==null||e.anchor!==null||b}function readDocument(e){var t=e.position,r,a,n,i=false,o;e.version=null;e.checkLineBreaks=e.legacy;e.tagMap={};e.anchorMap={};while((o=e.input.charCodeAt(e.position))!==0){skipSeparationSpace(e,true,-1);o=e.input.charCodeAt(e.position);if(e.lineIndent>0||o!==37){break}i=true;o=e.input.charCodeAt(++e.position);r=e.position;while(o!==0&&!is_WS_OR_EOL(o)){o=e.input.charCodeAt(++e.position)}a=e.input.slice(r,e.position);n=[];if(a.length<1){throwError(e,"directive name must not be less than one character in length")}while(o!==0){while(is_WHITE_SPACE(o)){o=e.input.charCodeAt(++e.position)}if(o===35){do{o=e.input.charCodeAt(++e.position)}while(o!==0&&!is_EOL(o));break}if(is_EOL(o))break;r=e.position;while(o!==0&&!is_WS_OR_EOL(o)){o=e.input.charCodeAt(++e.position)}n.push(e.input.slice(r,e.position))}if(o!==0)readLineBreak(e);if(d.call(C,a)){C[a](e,a,n)}else{throwWarning(e,'unknown document directive "'+a+'"')}}skipSeparationSpace(e,true,-1);if(e.lineIndent===0&&e.input.charCodeAt(e.position)===45&&e.input.charCodeAt(e.position+1)===45&&e.input.charCodeAt(e.position+2)===45){e.position+=3;skipSeparationSpace(e,true,-1)}else if(i){throwError(e,"directives end mark is expected")}composeNode(e,e.lineIndent-1,g,false,true);skipSeparationSpace(e,true,-1);if(e.checkLineBreaks&&k.test(e.input.slice(t,e.position))){throwWarning(e,"non-ASCII line breaks are interpreted as content")}e.documents.push(e.result);if(e.position===e.lineStart&&testDocumentSeparator(e)){if(e.input.charCodeAt(e.position)===46){e.position+=3;skipSeparationSpace(e,true,-1)}return}if(e.position<e.length-1){throwError(e,"end of the stream or a document separator is expected")}else{return}}function loadDocuments(e,t){e=String(e);t=t||{};if(e.length!==0){if(e.charCodeAt(e.length-1)!==10&&e.charCodeAt(e.length-1)!==13){e+="\n"}if(e.charCodeAt(0)===65279){e=e.slice(1)}}var r=new State(e,t);var a=e.indexOf("\0");if(a!==-1){r.position=a;throwError(r,"null byte is not allowed in input")}r.input+="\0";while(r.input.charCodeAt(r.position)===32){r.lineIndent+=1;r.position+=1}while(r.position<r.length-1){readDocument(r)}return r.documents}function loadAll(e,t,r){if(t!==null&&typeof t==="object"&&typeof r==="undefined"){r=t;t=null}var a=loadDocuments(e,r);if(typeof t!=="function"){return a}for(var n=0,i=a.length;n<i;n+=1){t(a[n])}}function load(e,t){var r=loadDocuments(e,t);if(r.length===0){return undefined}else if(r.length===1){return r[0]}throw new n("expected a single document in the stream, but found more")}function safeLoadAll(e,t,r){if(typeof t==="object"&&t!==null&&typeof r==="undefined"){r=t;t=null}return loadAll(e,t,a.extend({schema:o},r))}function safeLoad(e,t){return load(e,a.extend({schema:o},t))}e.exports.loadAll=loadAll;e.exports.load=load;e.exports.safeLoadAll=safeLoadAll;e.exports.safeLoad=safeLoad},5660:(e,t,r)=>{"use strict";var a=r(9089);function Mark(e,t,r,a,n){this.name=e;this.buffer=t;this.position=r;this.line=a;this.column=n}Mark.prototype.getSnippet=function getSnippet(e,t){var r,n,i,o,l;if(!this.buffer)return null;e=e||4;t=t||75;r="";n=this.position;while(n>0&&"\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(n-1))===-1){n-=1;if(this.position-n>t/2-1){r=" ... ";n+=5;break}}i="";o=this.position;while(o<this.buffer.length&&"\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(o))===-1){o+=1;if(o-this.position>t/2-1){i=" ... ";o-=5;break}}l=this.buffer.slice(n,o);return a.repeat(" ",e)+r+l+i+"\n"+a.repeat(" ",e+this.position-n+r.length)+"^"};Mark.prototype.toString=function toString(e){var t,r="";if(this.name){r+='in "'+this.name+'" '}r+="at line "+(this.line+1)+", column "+(this.column+1);if(!e){t=this.getSnippet();if(t){r+=":\n"+t}}return r};e.exports=Mark},8965:(e,t,r)=>{"use strict";var a=r(9089);var n=r(1537);var i=r(6742);function compileList(e,t,r){var a=[];e.include.forEach((function(e){r=compileList(e,t,r)}));e[t].forEach((function(e){r.forEach((function(t,r){if(t.tag===e.tag&&t.kind===e.kind){a.push(r)}}));r.push(e)}));return r.filter((function(e,t){return a.indexOf(t)===-1}))}function compileMap(){var e={scalar:{},sequence:{},mapping:{},fallback:{}},t,r;function collectType(t){e[t.kind][t.tag]=e["fallback"][t.tag]=t}for(t=0,r=arguments.length;t<r;t+=1){arguments[t].forEach(collectType)}return e}function Schema(e){this.include=e.include||[];this.implicit=e.implicit||[];this.explicit=e.explicit||[];this.implicit.forEach((function(e){if(e.loadKind&&e.loadKind!=="scalar"){throw new n("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")}}));this.compiledImplicit=compileList(this,"implicit",[]);this.compiledExplicit=compileList(this,"explicit",[]);this.compiledTypeMap=compileMap(this.compiledImplicit,this.compiledExplicit)}Schema.DEFAULT=null;Schema.create=function createSchema(){var e,t;switch(arguments.length){case 1:e=Schema.DEFAULT;t=arguments[0];break;case 2:e=arguments[0];t=arguments[1];break;default:throw new n("Wrong number of arguments for Schema.create function")}e=a.toArray(e);t=a.toArray(t);if(!e.every((function(e){return e instanceof Schema}))){throw new n("Specified list of super schemas (or a single Schema object) contains a non-Schema object.")}if(!t.every((function(e){return e instanceof i}))){throw new n("Specified list of YAML types (or a single Type object) contains a non-Type object.")}return new Schema({include:e,explicit:t})};e.exports=Schema},6780:(e,t,r)=>{"use strict";var a=r(8965);e.exports=new a({include:[r(1200)]})},413:(e,t,r)=>{"use strict";var a=r(8965);e.exports=a.DEFAULT=new a({include:[r(8451)],explicit:[r(8301),r(783),r(8702)]})},8451:(e,t,r)=>{"use strict";var a=r(8965);e.exports=new a({include:[r(6780)],implicit:[r(3835),r(5609)],explicit:[r(9650),r(9139),r(3042),r(6917)]})},7954:(e,t,r)=>{"use strict";var a=r(8965);e.exports=new a({explicit:[r(8445),r(5958),r(3673)]})},1200:(e,t,r)=>{"use strict";var a=r(8965);e.exports=new a({include:[r(7954)],implicit:[r(8371),r(7769),r(6510),r(2801)]})},6742:(e,t,r)=>{"use strict";var a=r(1537);var n=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"];var i=["scalar","sequence","mapping"];function compileStyleAliases(e){var t={};if(e!==null){Object.keys(e).forEach((function(r){e[r].forEach((function(e){t[String(e)]=r}))}))}return t}function Type(e,t){t=t||{};Object.keys(t).forEach((function(t){if(n.indexOf(t)===-1){throw new a('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')}}));this.tag=e;this.kind=t["kind"]||null;this.resolve=t["resolve"]||function(){return true};this.construct=t["construct"]||function(e){return e};this.instanceOf=t["instanceOf"]||null;this.predicate=t["predicate"]||null;this.represent=t["represent"]||null;this.defaultStyle=t["defaultStyle"]||null;this.styleAliases=compileStyleAliases(t["styleAliases"]||null);if(i.indexOf(this.kind)===-1){throw new a('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}}e.exports=Type},9650:(e,t,r)=>{"use strict";var a;try{var n=require;a=n("buffer").Buffer}catch(e){}var i=r(6742);var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";function resolveYamlBinary(e){if(e===null)return false;var t,r,a=0,n=e.length,i=o;for(r=0;r<n;r++){t=i.indexOf(e.charAt(r));if(t>64)continue;if(t<0)return false;a+=6}return a%8===0}function constructYamlBinary(e){var t,r,n=e.replace(/[\r\n=]/g,""),i=n.length,l=o,d=0,u=[];for(t=0;t<i;t++){if(t%4===0&&t){u.push(d>>16&255);u.push(d>>8&255);u.push(d&255)}d=d<<6|l.indexOf(n.charAt(t))}r=i%4*6;if(r===0){u.push(d>>16&255);u.push(d>>8&255);u.push(d&255)}else if(r===18){u.push(d>>10&255);u.push(d>>2&255)}else if(r===12){u.push(d>>4&255)}if(a){return a.from?a.from(u):new a(u)}return u}function representYamlBinary(e){var t="",r=0,a,n,i=e.length,l=o;for(a=0;a<i;a++){if(a%3===0&&a){t+=l[r>>18&63];t+=l[r>>12&63];t+=l[r>>6&63];t+=l[r&63]}r=(r<<8)+e[a]}n=i%3;if(n===0){t+=l[r>>18&63];t+=l[r>>12&63];t+=l[r>>6&63];t+=l[r&63]}else if(n===2){t+=l[r>>10&63];t+=l[r>>4&63];t+=l[r<<2&63];t+=l[64]}else if(n===1){t+=l[r>>2&63];t+=l[r<<4&63];t+=l[64];t+=l[64]}return t}function isBinary(e){return a&&a.isBuffer(e)}e.exports=new i("tag:yaml.org,2002:binary",{kind:"scalar",resolve:resolveYamlBinary,construct:constructYamlBinary,predicate:isBinary,represent:representYamlBinary})},7769:(e,t,r)=>{"use strict";var a=r(6742);function resolveYamlBoolean(e){if(e===null)return false;var t=e.length;return t===4&&(e==="true"||e==="True"||e==="TRUE")||t===5&&(e==="false"||e==="False"||e==="FALSE")}function constructYamlBoolean(e){return e==="true"||e==="True"||e==="TRUE"}function isBoolean(e){return Object.prototype.toString.call(e)==="[object Boolean]"}e.exports=new a("tag:yaml.org,2002:bool",{kind:"scalar",resolve:resolveYamlBoolean,construct:constructYamlBoolean,predicate:isBoolean,represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},2801:(e,t,r)=>{"use strict";var a=r(9089);var n=r(6742);var i=new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?"+"|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?"+"|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*"+"|[-+]?\\.(?:inf|Inf|INF)"+"|\\.(?:nan|NaN|NAN))$");function resolveYamlFloat(e){if(e===null)return false;if(!i.test(e)||e[e.length-1]==="_"){return false}return true}function constructYamlFloat(e){var t,r,a,n;t=e.replace(/_/g,"").toLowerCase();r=t[0]==="-"?-1:1;n=[];if("+-".indexOf(t[0])>=0){t=t.slice(1)}if(t===".inf"){return r===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY}else if(t===".nan"){return NaN}else if(t.indexOf(":")>=0){t.split(":").forEach((function(e){n.unshift(parseFloat(e,10))}));t=0;a=1;n.forEach((function(e){t+=e*a;a*=60}));return r*t}return r*parseFloat(t,10)}var o=/^[-+]?[0-9]+e/;function representYamlFloat(e,t){var r;if(isNaN(e)){switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}}else if(Number.POSITIVE_INFINITY===e){switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}}else if(Number.NEGATIVE_INFINITY===e){switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}}else if(a.isNegativeZero(e)){return"-0.0"}r=e.toString(10);return o.test(r)?r.replace("e",".e"):r}function isFloat(e){return Object.prototype.toString.call(e)==="[object Number]"&&(e%1!==0||a.isNegativeZero(e))}e.exports=new n("tag:yaml.org,2002:float",{kind:"scalar",resolve:resolveYamlFloat,construct:constructYamlFloat,predicate:isFloat,represent:representYamlFloat,defaultStyle:"lowercase"})},6510:(e,t,r)=>{"use strict";var a=r(9089);var n=r(6742);function isHexCode(e){return 48<=e&&e<=57||65<=e&&e<=70||97<=e&&e<=102}function isOctCode(e){return 48<=e&&e<=55}function isDecCode(e){return 48<=e&&e<=57}function resolveYamlInteger(e){if(e===null)return false;var t=e.length,r=0,a=false,n;if(!t)return false;n=e[r];if(n==="-"||n==="+"){n=e[++r]}if(n==="0"){if(r+1===t)return true;n=e[++r];if(n==="b"){r++;for(;r<t;r++){n=e[r];if(n==="_")continue;if(n!=="0"&&n!=="1")return false;a=true}return a&&n!=="_"}if(n==="x"){r++;for(;r<t;r++){n=e[r];if(n==="_")continue;if(!isHexCode(e.charCodeAt(r)))return false;a=true}return a&&n!=="_"}for(;r<t;r++){n=e[r];if(n==="_")continue;if(!isOctCode(e.charCodeAt(r)))return false;a=true}return a&&n!=="_"}if(n==="_")return false;for(;r<t;r++){n=e[r];if(n==="_")continue;if(n===":")break;if(!isDecCode(e.charCodeAt(r))){return false}a=true}if(!a||n==="_")return false;if(n!==":")return true;return/^(:[0-5]?[0-9])+$/.test(e.slice(r))}function constructYamlInteger(e){var t=e,r=1,a,n,i=[];if(t.indexOf("_")!==-1){t=t.replace(/_/g,"")}a=t[0];if(a==="-"||a==="+"){if(a==="-")r=-1;t=t.slice(1);a=t[0]}if(t==="0")return 0;if(a==="0"){if(t[1]==="b")return r*parseInt(t.slice(2),2);if(t[1]==="x")return r*parseInt(t,16);return r*parseInt(t,8)}if(t.indexOf(":")!==-1){t.split(":").forEach((function(e){i.unshift(parseInt(e,10))}));t=0;n=1;i.forEach((function(e){t+=e*n;n*=60}));return r*t}return r*parseInt(t,10)}function isInteger(e){return Object.prototype.toString.call(e)==="[object Number]"&&(e%1===0&&!a.isNegativeZero(e))}e.exports=new n("tag:yaml.org,2002:int",{kind:"scalar",resolve:resolveYamlInteger,construct:constructYamlInteger,predicate:isInteger,represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0"+e.toString(8):"-0"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},8702:(e,t,r)=>{"use strict";var a;try{var n=require;a=n("esprima")}catch(e){if(typeof window!=="undefined")a=window.esprima}var i=r(6742);function resolveJavascriptFunction(e){if(e===null)return false;try{var t="("+e+")",r=a.parse(t,{range:true});if(r.type!=="Program"||r.body.length!==1||r.body[0].type!=="ExpressionStatement"||r.body[0].expression.type!=="ArrowFunctionExpression"&&r.body[0].expression.type!=="FunctionExpression"){return false}return true}catch(e){return false}}function constructJavascriptFunction(e){var t="("+e+")",r=a.parse(t,{range:true}),n=[],i;if(r.type!=="Program"||r.body.length!==1||r.body[0].type!=="ExpressionStatement"||r.body[0].expression.type!=="ArrowFunctionExpression"&&r.body[0].expression.type!=="FunctionExpression"){throw new Error("Failed to resolve function")}r.body[0].expression.params.forEach((function(e){n.push(e.name)}));i=r.body[0].expression.body.range;if(r.body[0].expression.body.type==="BlockStatement"){return new Function(n,t.slice(i[0]+1,i[1]-1))}return new Function(n,"return "+t.slice(i[0],i[1]))}function representJavascriptFunction(e){return e.toString()}function isFunction(e){return Object.prototype.toString.call(e)==="[object Function]"}e.exports=new i("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:resolveJavascriptFunction,construct:constructJavascriptFunction,predicate:isFunction,represent:representJavascriptFunction})},783:(e,t,r)=>{"use strict";var a=r(6742);function resolveJavascriptRegExp(e){if(e===null)return false;if(e.length===0)return false;var t=e,r=/\/([gim]*)$/.exec(e),a="";if(t[0]==="/"){if(r)a=r[1];if(a.length>3)return false;if(t[t.length-a.length-1]!=="/")return false}return true}function constructJavascriptRegExp(e){var t=e,r=/\/([gim]*)$/.exec(e),a="";if(t[0]==="/"){if(r)a=r[1];t=t.slice(1,t.length-a.length-1)}return new RegExp(t,a)}function representJavascriptRegExp(e){var t="/"+e.source+"/";if(e.global)t+="g";if(e.multiline)t+="m";if(e.ignoreCase)t+="i";return t}function isRegExp(e){return Object.prototype.toString.call(e)==="[object RegExp]"}e.exports=new a("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:resolveJavascriptRegExp,construct:constructJavascriptRegExp,predicate:isRegExp,represent:representJavascriptRegExp})},8301:(e,t,r)=>{"use strict";var a=r(6742);function resolveJavascriptUndefined(){return true}function constructJavascriptUndefined(){return undefined}function representJavascriptUndefined(){return""}function isUndefined(e){return typeof e==="undefined"}e.exports=new a("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:resolveJavascriptUndefined,construct:constructJavascriptUndefined,predicate:isUndefined,represent:representJavascriptUndefined})},3673:(e,t,r)=>{"use strict";var a=r(6742);e.exports=new a("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return e!==null?e:{}}})},5609:(e,t,r)=>{"use strict";var a=r(6742);function resolveYamlMerge(e){return e==="<<"||e===null}e.exports=new a("tag:yaml.org,2002:merge",{kind:"scalar",resolve:resolveYamlMerge})},8371:(e,t,r)=>{"use strict";var a=r(6742);function resolveYamlNull(e){if(e===null)return true;var t=e.length;return t===1&&e==="~"||t===4&&(e==="null"||e==="Null"||e==="NULL")}function constructYamlNull(){return null}function isNull(e){return e===null}e.exports=new a("tag:yaml.org,2002:null",{kind:"scalar",resolve:resolveYamlNull,construct:constructYamlNull,predicate:isNull,represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"})},9139:(e,t,r)=>{"use strict";var a=r(6742);var n=Object.prototype.hasOwnProperty;var i=Object.prototype.toString;function resolveYamlOmap(e){if(e===null)return true;var t=[],r,a,o,l,d,u=e;for(r=0,a=u.length;r<a;r+=1){o=u[r];d=false;if(i.call(o)!=="[object Object]")return false;for(l in o){if(n.call(o,l)){if(!d)d=true;else return false}}if(!d)return false;if(t.indexOf(l)===-1)t.push(l);else return false}return true}function constructYamlOmap(e){return e!==null?e:[]}e.exports=new a("tag:yaml.org,2002:omap",{kind:"sequence",resolve:resolveYamlOmap,construct:constructYamlOmap})},3042:(e,t,r)=>{"use strict";var a=r(6742);var n=Object.prototype.toString;function resolveYamlPairs(e){if(e===null)return true;var t,r,a,i,o,l=e;o=new Array(l.length);for(t=0,r=l.length;t<r;t+=1){a=l[t];if(n.call(a)!=="[object Object]")return false;i=Object.keys(a);if(i.length!==1)return false;o[t]=[i[0],a[i[0]]]}return true}function constructYamlPairs(e){if(e===null)return[];var t,r,a,n,i,o=e;i=new Array(o.length);for(t=0,r=o.length;t<r;t+=1){a=o[t];n=Object.keys(a);i[t]=[n[0],a[n[0]]]}return i}e.exports=new a("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:resolveYamlPairs,construct:constructYamlPairs})},5958:(e,t,r)=>{"use strict";var a=r(6742);e.exports=new a("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return e!==null?e:[]}})},6917:(e,t,r)=>{"use strict";var a=r(6742);var n=Object.prototype.hasOwnProperty;function resolveYamlSet(e){if(e===null)return true;var t,r=e;for(t in r){if(n.call(r,t)){if(r[t]!==null)return false}}return true}function constructYamlSet(e){return e!==null?e:{}}e.exports=new a("tag:yaml.org,2002:set",{kind:"mapping",resolve:resolveYamlSet,construct:constructYamlSet})},8445:(e,t,r)=>{"use strict";var a=r(6742);e.exports=new a("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return e!==null?e:""}})},3835:(e,t,r)=>{"use strict";var a=r(6742);var n=new RegExp("^([0-9][0-9][0-9][0-9])"+"-([0-9][0-9])"+"-([0-9][0-9])$");var i=new RegExp("^([0-9][0-9][0-9][0-9])"+"-([0-9][0-9]?)"+"-([0-9][0-9]?)"+"(?:[Tt]|[ \\t]+)"+"([0-9][0-9]?)"+":([0-9][0-9])"+":([0-9][0-9])"+"(?:\\.([0-9]*))?"+"(?:[ \\t]*(Z|([-+])([0-9][0-9]?)"+"(?::([0-9][0-9]))?))?$");function resolveYamlTimestamp(e){if(e===null)return false;if(n.exec(e)!==null)return true;if(i.exec(e)!==null)return true;return false}function constructYamlTimestamp(e){var t,r,a,o,l,d,u,c=0,h=null,g,v,w;t=n.exec(e);if(t===null)t=i.exec(e);if(t===null)throw new Error("Date resolve error");r=+t[1];a=+t[2]-1;o=+t[3];if(!t[4]){return new Date(Date.UTC(r,a,o))}l=+t[4];d=+t[5];u=+t[6];if(t[7]){c=t[7].slice(0,3);while(c.length<3){c+="0"}c=+c}if(t[9]){g=+t[10];v=+(t[11]||0);h=(g*60+v)*6e4;if(t[9]==="-")h=-h}w=new Date(Date.UTC(r,a,o,l,d,u,c));if(h)w.setTime(w.getTime()-h);return w}function representYamlTimestamp(e){return e.toISOString()}e.exports=new a("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:resolveYamlTimestamp,construct:constructYamlTimestamp,instanceOf:Date,represent:representYamlTimestamp})},5766:function(e){(function(t){"use strict";var r={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:noop,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:noop,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:noop,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n?(?!hr|heading|lheading| {0,3}>|tag)[^\n]+)+)/,text:/^[^\n]+/};r._label=/(?:\\[\[\]]|[^\[\]])+/;r._title=/(?:"(?:\\"|[^"]|"[^"\n]*")*"|'\n?(?:[^'\n]+\n?)*'|\([^()]*\))/;r.def=edit(r.def).replace("label",r._label).replace("title",r._title).getRegex();r.bullet=/(?:[*+-]|\d+\.)/;r.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;r.item=edit(r.item,"gm").replace(/bull/g,r.bullet).getRegex();r.list=edit(r.list).replace(/bull/g,r.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+r.def.source+")").getRegex();r._tag="(?!(?:"+"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code"+"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo"+"|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b";r.html=edit(r.html).replace("comment",/<!--[\s\S]*?-->/).replace("closed",/<(tag)[\s\S]+?<\/\1>/).replace("closing",/<tag(?:"[^"]*"|'[^']*'|\s[^'"\/>\s]*)*?\/?>/).replace(/tag/g,r._tag).getRegex();r.paragraph=edit(r.paragraph).replace("hr",r.hr).replace("heading",r.heading).replace("lheading",r.lheading).replace("tag","<"+r._tag).getRegex();r.blockquote=edit(r.blockquote).replace("paragraph",r.paragraph).getRegex();r.normal=merge({},r);r.gfm=merge({},r.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/});r.gfm.paragraph=edit(r.paragraph).replace("(?!","(?!"+r.gfm.fences.source.replace("\\1","\\2")+"|"+r.list.source.replace("\\1","\\3")+"|").getRegex();r.tables=merge({},r.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/});function Lexer(e){this.tokens=[];this.tokens.links={};this.options=e||marked.defaults;this.rules=r.normal;if(this.options.gfm){if(this.options.tables){this.rules=r.tables}else{this.rules=r.gfm}}}Lexer.rules=r;Lexer.lex=function(e,t){var r=new Lexer(t);return r.lex(e)};Lexer.prototype.lex=function(e){e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n");return this.token(e,true)};Lexer.prototype.token=function(e,t){e=e.replace(/^ +$/gm,"");var a,n,i,o,l,d,u,c,h,g,v;while(e){if(i=this.rules.newline.exec(e)){e=e.substring(i[0].length);if(i[0].length>1){this.tokens.push({type:"space"})}}if(i=this.rules.code.exec(e)){e=e.substring(i[0].length);i=i[0].replace(/^ {4}/gm,"");this.tokens.push({type:"code",text:!this.options.pedantic?i.replace(/\n+$/,""):i});continue}if(i=this.rules.fences.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"code",lang:i[2],text:i[3]||""});continue}if(i=this.rules.heading.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"heading",depth:i[1].length,text:i[2]});continue}if(t&&(i=this.rules.nptable.exec(e))){e=e.substring(i[0].length);d={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/\n$/,"").split("\n")};for(c=0;c<d.align.length;c++){if(/^ *-+: *$/.test(d.align[c])){d.align[c]="right"}else if(/^ *:-+: *$/.test(d.align[c])){d.align[c]="center"}else if(/^ *:-+ *$/.test(d.align[c])){d.align[c]="left"}else{d.align[c]=null}}for(c=0;c<d.cells.length;c++){d.cells[c]=d.cells[c].split(/ *\| */)}this.tokens.push(d);continue}if(i=this.rules.hr.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"hr"});continue}if(i=this.rules.blockquote.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"blockquote_start"});i=i[0].replace(/^ *> ?/gm,"");this.token(i,t);this.tokens.push({type:"blockquote_end"});continue}if(i=this.rules.list.exec(e)){e=e.substring(i[0].length);o=i[2];v=o.length>1;this.tokens.push({type:"list_start",ordered:v,start:v?+o:""});i=i[0].match(this.rules.item);a=false;g=i.length;c=0;for(;c<g;c++){d=i[c];u=d.length;d=d.replace(/^ *([*+-]|\d+\.) +/,"");if(~d.indexOf("\n ")){u-=d.length;d=!this.options.pedantic?d.replace(new RegExp("^ {1,"+u+"}","gm"),""):d.replace(/^ {1,4}/gm,"")}if(this.options.smartLists&&c!==g-1){l=r.bullet.exec(i[c+1])[0];if(o!==l&&!(o.length>1&&l.length>1)){e=i.slice(c+1).join("\n")+e;c=g-1}}n=a||/\n\n(?!\s*$)/.test(d);if(c!==g-1){a=d.charAt(d.length-1)==="\n";if(!n)n=a}this.tokens.push({type:n?"loose_item_start":"list_item_start"});this.token(d,false);this.tokens.push({type:"list_item_end"})}this.tokens.push({type:"list_end"});continue}if(i=this.rules.html.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&(i[1]==="pre"||i[1]==="script"||i[1]==="style"),text:i[0]});continue}if(t&&(i=this.rules.def.exec(e))){e=e.substring(i[0].length);if(i[3])i[3]=i[3].substring(1,i[3].length-1);h=i[1].toLowerCase();if(!this.tokens.links[h]){this.tokens.links[h]={href:i[2],title:i[3]}}continue}if(t&&(i=this.rules.table.exec(e))){e=e.substring(i[0].length);d={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/(?: *\| *)?\n$/,"").split("\n")};for(c=0;c<d.align.length;c++){if(/^ *-+: *$/.test(d.align[c])){d.align[c]="right"}else if(/^ *:-+: *$/.test(d.align[c])){d.align[c]="center"}else if(/^ *:-+ *$/.test(d.align[c])){d.align[c]="left"}else{d.align[c]=null}}for(c=0;c<d.cells.length;c++){d.cells[c]=d.cells[c].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */)}this.tokens.push(d);continue}if(i=this.rules.lheading.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"heading",depth:i[2]==="="?1:2,text:i[1]});continue}if(t&&(i=this.rules.paragraph.exec(e))){e=e.substring(i[0].length);this.tokens.push({type:"paragraph",text:i[1].charAt(i[1].length-1)==="\n"?i[1].slice(0,-1):i[1]});continue}if(i=this.rules.text.exec(e)){e=e.substring(i[0].length);this.tokens.push({type:"text",text:i[0]});continue}if(e){throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}}return this.tokens};var a={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:noop,tag:/^<!--[\s\S]*?-->|^<\/?[a-zA-Z0-9\-]+(?:"[^"]*"|'[^']*'|\s[^<'">\/\s]*)*?\/?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\]/,strong:/^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^_([^\s_](?:[^_]|__)+?[^\s_])_\b|^\*((?:\*\*|[^*])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:noop,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/};a._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;a._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;a.autolink=edit(a.autolink).replace("scheme",a._scheme).replace("email",a._email).getRegex();a._inside=/(?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]]|\](?=[^\[]*\]))*/;a._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;a.link=edit(a.link).replace("inside",a._inside).replace("href",a._href).getRegex();a.reflink=edit(a.reflink).replace("inside",a._inside).getRegex();a.normal=merge({},a);a.pedantic=merge({},a.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/});a.gfm=merge({},a.normal,{escape:edit(a.escape).replace("])","~|])").getRegex(),url:edit(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",a._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:edit(a.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()});a.breaks=merge({},a.gfm,{br:edit(a.br).replace("{2,}","*").getRegex(),text:edit(a.gfm.text).replace("{2,}","*").getRegex()});function InlineLexer(e,t){this.options=t||marked.defaults;this.links=e;this.rules=a.normal;this.renderer=this.options.renderer||new Renderer;this.renderer.options=this.options;if(!this.links){throw new Error("Tokens array requires a `links` property.")}if(this.options.gfm){if(this.options.breaks){this.rules=a.breaks}else{this.rules=a.gfm}}else if(this.options.pedantic){this.rules=a.pedantic}}InlineLexer.rules=a;InlineLexer.output=function(e,t,r){var a=new InlineLexer(t,r);return a.output(e)};InlineLexer.prototype.output=function(e){var t="",r,a,n,i;while(e){if(i=this.rules.escape.exec(e)){e=e.substring(i[0].length);t+=i[1];continue}if(i=this.rules.autolink.exec(e)){e=e.substring(i[0].length);if(i[2]==="@"){a=escape(this.mangle(i[1]));n="mailto:"+a}else{a=escape(i[1]);n=a}t+=this.renderer.link(n,null,a);continue}if(!this.inLink&&(i=this.rules.url.exec(e))){i[0]=this.rules._backpedal.exec(i[0])[0];e=e.substring(i[0].length);if(i[2]==="@"){a=escape(i[0]);n="mailto:"+a}else{a=escape(i[0]);if(i[1]==="www."){n="http://"+a}else{n=a}}t+=this.renderer.link(n,null,a);continue}if(i=this.rules.tag.exec(e)){if(!this.inLink&&/^<a /i.test(i[0])){this.inLink=true}else if(this.inLink&&/^<\/a>/i.test(i[0])){this.inLink=false}e=e.substring(i[0].length);t+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(i[0]):escape(i[0]):i[0];continue}if(i=this.rules.link.exec(e)){e=e.substring(i[0].length);this.inLink=true;t+=this.outputLink(i,{href:i[2],title:i[3]});this.inLink=false;continue}if((i=this.rules.reflink.exec(e))||(i=this.rules.nolink.exec(e))){e=e.substring(i[0].length);r=(i[2]||i[1]).replace(/\s+/g," ");r=this.links[r.toLowerCase()];if(!r||!r.href){t+=i[0].charAt(0);e=i[0].substring(1)+e;continue}this.inLink=true;t+=this.outputLink(i,r);this.inLink=false;continue}if(i=this.rules.strong.exec(e)){e=e.substring(i[0].length);t+=this.renderer.strong(this.output(i[2]||i[1]));continue}if(i=this.rules.em.exec(e)){e=e.substring(i[0].length);t+=this.renderer.em(this.output(i[2]||i[1]));continue}if(i=this.rules.code.exec(e)){e=e.substring(i[0].length);t+=this.renderer.codespan(escape(i[2].trim(),true));continue}if(i=this.rules.br.exec(e)){e=e.substring(i[0].length);t+=this.renderer.br();continue}if(i=this.rules.del.exec(e)){e=e.substring(i[0].length);t+=this.renderer.del(this.output(i[1]));continue}if(i=this.rules.text.exec(e)){e=e.substring(i[0].length);t+=this.renderer.text(escape(this.smartypants(i[0])));continue}if(e){throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}}return t};InlineLexer.prototype.outputLink=function(e,t){var r=escape(t.href),a=t.title?escape(t.title):null;return e[0].charAt(0)!=="!"?this.renderer.link(r,a,this.output(e[1])):this.renderer.image(r,a,escape(e[1]))};InlineLexer.prototype.smartypants=function(e){if(!this.options.smartypants)return e;return e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")};InlineLexer.prototype.mangle=function(e){if(!this.options.mangle)return e;var t="",r=e.length,a=0,n;for(;a<r;a++){n=e.charCodeAt(a);if(Math.random()>.5){n="x"+n.toString(16)}t+="&#"+n+";"}return t};function Renderer(e){this.options=e||{}}Renderer.prototype.code=function(e,t,r){if(this.options.highlight){var a=this.options.highlight(e,t);if(a!=null&&a!==e){r=true;e=a}}if(!t){return"<pre><code>"+(r?e:escape(e,true))+"\n</code></pre>"}return'<pre><code class="'+this.options.langPrefix+escape(t,true)+'">'+(r?e:escape(e,true))+"\n</code></pre>\n"};Renderer.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"};Renderer.prototype.html=function(e){return e};Renderer.prototype.heading=function(e,t,r){return"<h"+t+' id="'+this.options.headerPrefix+r.toLowerCase().replace(/[^\w]+/g,"-")+'">'+e+"</h"+t+">\n"};Renderer.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"};Renderer.prototype.list=function(e,t,r){var a=t?"ol":"ul",n=t&&r!==1?' start="'+r+'"':"";return"<"+a+n+">\n"+e+"</"+a+">\n"};Renderer.prototype.listitem=function(e){return"<li>"+e+"</li>\n"};Renderer.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"};Renderer.prototype.table=function(e,t){return"<table>\n"+"<thead>\n"+e+"</thead>\n"+"<tbody>\n"+t+"</tbody>\n"+"</table>\n"};Renderer.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"};Renderer.prototype.tablecell=function(e,t){var r=t.header?"th":"td";var a=t.align?"<"+r+' style="text-align:'+t.align+'">':"<"+r+">";return a+e+"</"+r+">\n"};Renderer.prototype.strong=function(e){return"<strong>"+e+"</strong>"};Renderer.prototype.em=function(e){return"<em>"+e+"</em>"};Renderer.prototype.codespan=function(e){return"<code>"+e+"</code>"};Renderer.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"};Renderer.prototype.del=function(e){return"<del>"+e+"</del>"};Renderer.prototype.link=function(e,t,r){if(this.options.sanitize){try{var a=decodeURIComponent(unescape(e)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return r}if(a.indexOf("javascript:")===0||a.indexOf("vbscript:")===0||a.indexOf("data:")===0){return r}}if(this.options.baseUrl&&!i.test(e)){e=resolveUrl(this.options.baseUrl,e)}var n='<a href="'+e+'"';if(t){n+=' title="'+t+'"'}n+=">"+r+"</a>";return n};Renderer.prototype.image=function(e,t,r){if(this.options.baseUrl&&!i.test(e)){e=resolveUrl(this.options.baseUrl,e)}var a='<img src="'+e+'" alt="'+r+'"';if(t){a+=' title="'+t+'"'}a+=this.options.xhtml?"/>":">";return a};Renderer.prototype.text=function(e){return e};function TextRenderer(){}TextRenderer.prototype.strong=TextRenderer.prototype.em=TextRenderer.prototype.codespan=TextRenderer.prototype.del=TextRenderer.prototype.text=function(e){return e};TextRenderer.prototype.link=TextRenderer.prototype.image=function(e,t,r){return""+r};TextRenderer.prototype.br=function(){return""};function Parser(e){this.tokens=[];this.token=null;this.options=e||marked.defaults;this.options.renderer=this.options.renderer||new Renderer;this.renderer=this.options.renderer;this.renderer.options=this.options}Parser.parse=function(e,t){var r=new Parser(t);return r.parse(e)};Parser.prototype.parse=function(e){this.inline=new InlineLexer(e.links,this.options);this.inlineText=new InlineLexer(e.links,merge({},this.options,{renderer:new TextRenderer}));this.tokens=e.reverse();var t="";while(this.next()){t+=this.tok()}return t};Parser.prototype.next=function(){return this.token=this.tokens.pop()};Parser.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};Parser.prototype.parseText=function(){var e=this.token.text;while(this.peek().type==="text"){e+="\n"+this.next().text}return this.inline.output(e)};Parser.prototype.tok=function(){switch(this.token.type){case"space":{return""}case"hr":{return this.renderer.hr()}case"heading":{return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,unescape(this.inlineText.output(this.token.text)))}case"code":{return this.renderer.code(this.token.text,this.token.lang,this.token.escaped)}case"table":{var e="",t="",r,a,n,i;n="";for(r=0;r<this.token.header.length;r++){n+=this.renderer.tablecell(this.inline.output(this.token.header[r]),{header:true,align:this.token.align[r]})}e+=this.renderer.tablerow(n);for(r=0;r<this.token.cells.length;r++){a=this.token.cells[r];n="";for(i=0;i<a.length;i++){n+=this.renderer.tablecell(this.inline.output(a[i]),{header:false,align:this.token.align[i]})}t+=this.renderer.tablerow(n)}return this.renderer.table(e,t)}case"blockquote_start":{t="";while(this.next().type!=="blockquote_end"){t+=this.tok()}return this.renderer.blockquote(t)}case"list_start":{t="";var o=this.token.ordered,l=this.token.start;while(this.next().type!=="list_end"){t+=this.tok()}return this.renderer.list(t,o,l)}case"list_item_start":{t="";while(this.next().type!=="list_item_end"){t+=this.token.type==="text"?this.parseText():this.tok()}return this.renderer.listitem(t)}case"loose_item_start":{t="";while(this.next().type!=="list_item_end"){t+=this.tok()}return this.renderer.listitem(t)}case"html":{var d=!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text;return this.renderer.html(d)}case"paragraph":{return this.renderer.paragraph(this.inline.output(this.token.text))}case"text":{return this.renderer.paragraph(this.parseText())}}};function escape(e,t){return e.replace(!t?/&(?!#?\w+;)/g:/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function unescape(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(e,t){t=t.toLowerCase();if(t==="colon")return":";if(t.charAt(0)==="#"){return t.charAt(1)==="x"?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1))}return""}))}function edit(e,t){e=e.source;t=t||"";return{replace:function(t,r){r=r.source||r;r=r.replace(/(^|[^\[])\^/g,"$1");e=e.replace(t,r);return this},getRegex:function(){return new RegExp(e,t)}}}function resolveUrl(e,t){if(!n[" "+e]){if(/^[^:]+:\/*[^/]*$/.test(e)){n[" "+e]=e+"/"}else{n[" "+e]=e.replace(/[^/]*$/,"")}}e=n[" "+e];if(t.slice(0,2)==="//"){return e.replace(/:[\s\S]*/,":")+t}else if(t.charAt(0)==="/"){return e.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+t}else{return e+t}}var n={};var i=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function noop(){}noop.exec=noop;function merge(e){var t=1,r,a;for(;t<arguments.length;t++){r=arguments[t];for(a in r){if(Object.prototype.hasOwnProperty.call(r,a)){e[a]=r[a]}}}return e}function marked(e,t,r){if(typeof e==="undefined"||e===null){throw new Error("marked(): input parameter is undefined or null")}if(typeof e!=="string"){throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected")}if(r||typeof t==="function"){if(!r){r=t;t=null}t=merge({},marked.defaults,t||{});var a=t.highlight,n,i,o=0;try{n=Lexer.lex(e,t)}catch(e){return r(e)}i=n.length;var done=function(e){if(e){t.highlight=a;return r(e)}var i;try{i=Parser.parse(n,t)}catch(t){e=t}t.highlight=a;return e?r(e):r(null,i)};if(!a||a.length<3){return done()}delete t.highlight;if(!i)return done();for(;o<n.length;o++){(function(e){if(e.type!=="code"){return--i||done()}return a(e.text,e.lang,(function(t,r){if(t)return done(t);if(r==null||r===e.text){return--i||done()}e.text=r;e.escaped=true;--i||done()}))})(n[o])}return}try{if(t)t=merge({},marked.defaults,t);return Parser.parse(Lexer.lex(e,t),t)}catch(e){e.message+="\nPlease report this to https://github.com/markedjs/marked.";if((t||marked.defaults).silent){return"<p>An error occurred:</p><pre>"+escape(e.message+"",true)+"</pre>"}throw e}}marked.options=marked.setOptions=function(e){merge(marked.defaults,e);return marked};marked.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,sanitizer:null,mangle:true,smartLists:false,silent:false,highlight:null,langPrefix:"lang-",smartypants:false,headerPrefix:"",renderer:new Renderer,xhtml:false,baseUrl:null};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.TextRenderer=TextRenderer;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.InlineLexer=InlineLexer;marked.inlineLexer=InlineLexer.output;marked.parse=marked;if(true){e.exports=marked}else{}})(this||(typeof window!=="undefined"?window:global))},4917:e=>{const t=typeof process==="object"&&process&&process.platform==="win32";e.exports=t?{sep:"\\"}:{sep:"/"}},3973:(e,t,r)=>{const a=e.exports=(e,t,r={})=>{assertValidPattern(t);if(!r.nocomment&&t.charAt(0)==="#"){return false}return new Minimatch(t,r).match(e)};e.exports=a;const n=r(4917);a.sep=n.sep;const i=Symbol("globstar **");a.GLOBSTAR=i;const o=r(8184);const l={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}};const d="[^/]";const u=d+"*?";const c="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";const h="(?:(?!(?:\\/|^)\\.).)*?";const charSet=e=>e.split("").reduce(((e,t)=>{e[t]=true;return e}),{});const g=charSet("().*{}+?[]^$\\!");const v=charSet("[.(");const w=/\/+/;a.filter=(e,t={})=>(r,n,i)=>a(r,e,t);const ext=(e,t={})=>{const r={};Object.keys(e).forEach((t=>r[t]=e[t]));Object.keys(t).forEach((e=>r[e]=t[e]));return r};a.defaults=e=>{if(!e||typeof e!=="object"||!Object.keys(e).length){return a}const t=a;const m=(r,a,n)=>t(r,a,ext(e,n));m.Minimatch=class Minimatch extends t.Minimatch{constructor(t,r){super(t,ext(e,r))}};m.Minimatch.defaults=r=>t.defaults(ext(e,r)).Minimatch;m.filter=(r,a)=>t.filter(r,ext(e,a));m.defaults=r=>t.defaults(ext(e,r));m.makeRe=(r,a)=>t.makeRe(r,ext(e,a));m.braceExpand=(r,a)=>t.braceExpand(r,ext(e,a));m.match=(r,a,n)=>t.match(r,a,ext(e,n));return m};a.braceExpand=(e,t)=>braceExpand(e,t);const braceExpand=(e,t={})=>{assertValidPattern(e);if(t.nobrace||!/\{(?:(?!\{).)*\}/.test(e)){return[e]}return o(e)};const b=1024*64;const assertValidPattern=e=>{if(typeof e!=="string"){throw new TypeError("invalid pattern")}if(e.length>b){throw new TypeError("pattern is too long")}};const y=Symbol("subparse");a.makeRe=(e,t)=>new Minimatch(e,t||{}).makeRe();a.match=(e,t,r={})=>{const a=new Minimatch(t,r);e=e.filter((e=>a.match(e)));if(a.options.nonull&&!e.length){e.push(t)}return e};const globUnescape=e=>e.replace(/\\(.)/g,"$1");const regExpEscape=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");class Minimatch{constructor(e,t){assertValidPattern(e);if(!t)t={};this.options=t;this.set=[];this.pattern=e;this.windowsPathsNoEscape=!!t.windowsPathsNoEscape||t.allowWindowsEscape===false;if(this.windowsPathsNoEscape){this.pattern=this.pattern.replace(/\\/g,"/")}this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.partial=!!t.partial;this.make()}debug(){}make(){const e=this.pattern;const t=this.options;if(!t.nocomment&&e.charAt(0)==="#"){this.comment=true;return}if(!e){this.empty=true;return}this.parseNegate();let r=this.globSet=this.braceExpand();if(t.debug)this.debug=(...e)=>console.error(...e);this.debug(this.pattern,r);r=this.globParts=r.map((e=>e.split(w)));this.debug(this.pattern,r);r=r.map(((e,t,r)=>e.map(this.parse,this)));this.debug(this.pattern,r);r=r.filter((e=>e.indexOf(false)===-1));this.debug(this.pattern,r);this.set=r}parseNegate(){if(this.options.nonegate)return;const e=this.pattern;let t=false;let r=0;for(let a=0;a<e.length&&e.charAt(a)==="!";a++){t=!t;r++}if(r)this.pattern=e.slice(r);this.negate=t}matchOne(e,t,r){var a=this.options;this.debug("matchOne",{this:this,file:e,pattern:t});this.debug("matchOne",e.length,t.length);for(var n=0,o=0,l=e.length,d=t.length;n<l&&o<d;n++,o++){this.debug("matchOne loop");var u=t[o];var c=e[n];this.debug(t,u,c);if(u===false)return false;if(u===i){this.debug("GLOBSTAR",[t,u,c]);var h=n;var g=o+1;if(g===d){this.debug("** at the end");for(;n<l;n++){if(e[n]==="."||e[n]===".."||!a.dot&&e[n].charAt(0)===".")return false}return true}while(h<l){var v=e[h];this.debug("\nglobstar while",e,h,t,g,v);if(this.matchOne(e.slice(h),t.slice(g),r)){this.debug("globstar found match!",h,l,v);return true}else{if(v==="."||v===".."||!a.dot&&v.charAt(0)==="."){this.debug("dot detected!",e,h,t,g);break}this.debug("globstar swallow a segment, and continue");h++}}if(r){this.debug("\n>>> no match, partial?",e,h,t,g);if(h===l)return true}return false}var w;if(typeof u==="string"){w=c===u;this.debug("string match",u,c,w)}else{w=c.match(u);this.debug("pattern match",u,c,w)}if(!w)return false}if(n===l&&o===d){return true}else if(n===l){return r}else if(o===d){return n===l-1&&e[n]===""}throw new Error("wtf?")}braceExpand(){return braceExpand(this.pattern,this.options)}parse(e,t){assertValidPattern(e);const r=this.options;if(e==="**"){if(!r.noglobstar)return i;else e="*"}if(e==="")return"";let a="";let n=!!r.nocase;let o=false;const c=[];const h=[];let w;let b=false;let k=-1;let E=-1;let D;let _;let A;const S=e.charAt(0)==="."?"":r.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)";const clearStateChar=()=>{if(w){switch(w){case"*":a+=u;n=true;break;case"?":a+=d;n=true;break;default:a+="\\"+w;break}this.debug("clearStateChar %j %j",w,a);w=false}};for(let t=0,i;t<e.length&&(i=e.charAt(t));t++){this.debug("%s\t%s %s %j",e,t,a,i);if(o){if(i==="/"){return false}if(g[i]){a+="\\"}a+=i;o=false;continue}switch(i){case"/":{return false}case"\\":clearStateChar();o=true;continue;case"?":case"*":case"+":case"@":case"!":this.debug("%s\t%s %s %j <-- stateChar",e,t,a,i);if(b){this.debug("  in class");if(i==="!"&&t===E+1)i="^";a+=i;continue}this.debug("call clearStateChar %j",w);clearStateChar();w=i;if(r.noext)clearStateChar();continue;case"(":if(b){a+="(";continue}if(!w){a+="\\(";continue}c.push({type:w,start:t-1,reStart:a.length,open:l[w].open,close:l[w].close});a+=w==="!"?"(?:(?!(?:":"(?:";this.debug("plType %j %j",w,a);w=false;continue;case")":if(b||!c.length){a+="\\)";continue}clearStateChar();n=true;_=c.pop();a+=_.close;if(_.type==="!"){h.push(_)}_.reEnd=a.length;continue;case"|":if(b||!c.length){a+="\\|";continue}clearStateChar();a+="|";continue;case"[":clearStateChar();if(b){a+="\\"+i;continue}b=true;E=t;k=a.length;a+=i;continue;case"]":if(t===E+1||!b){a+="\\"+i;continue}D=e.substring(E+1,t);try{RegExp("["+D+"]")}catch(e){A=this.parse(D,y);a=a.substring(0,k)+"\\["+A[0]+"\\]";n=n||A[1];b=false;continue}n=true;b=false;a+=i;continue;default:clearStateChar();if(g[i]&&!(i==="^"&&b)){a+="\\"}a+=i;break}}if(b){D=e.slice(E+1);A=this.parse(D,y);a=a.substring(0,k)+"\\["+A[0];n=n||A[1]}for(_=c.pop();_;_=c.pop()){let e;e=a.slice(_.reStart+_.open.length);this.debug("setting tail",a,_);e=e.replace(/((?:\\{2}){0,64})(\\?)\|/g,((e,t,r)=>{if(!r){r="\\"}return t+t+r+"|"}));this.debug("tail=%j\n   %s",e,e,_,a);const t=_.type==="*"?u:_.type==="?"?d:"\\"+_.type;n=true;a=a.slice(0,_.reStart)+t+"\\("+e}clearStateChar();if(o){a+="\\\\"}const x=v[a.charAt(0)];for(let e=h.length-1;e>-1;e--){const r=h[e];const n=a.slice(0,r.reStart);const i=a.slice(r.reStart,r.reEnd-8);let o=a.slice(r.reEnd);const l=a.slice(r.reEnd-8,r.reEnd)+o;const d=n.split("(").length-1;let u=o;for(let e=0;e<d;e++){u=u.replace(/\)[+*?]?/,"")}o=u;const c=o===""&&t!==y?"$":"";a=n+i+o+c+l}if(a!==""&&n){a="(?=.)"+a}if(x){a=S+a}if(t===y){return[a,n]}if(!n){return globUnescape(e)}const C=r.nocase?"i":"";try{return Object.assign(new RegExp("^"+a+"$",C),{_glob:e,_src:a})}catch(e){return new RegExp("$.")}}makeRe(){if(this.regexp||this.regexp===false)return this.regexp;const e=this.set;if(!e.length){this.regexp=false;return this.regexp}const t=this.options;const r=t.noglobstar?u:t.dot?c:h;const a=t.nocase?"i":"";let n=e.map((e=>{e=e.map((e=>typeof e==="string"?regExpEscape(e):e===i?i:e._src)).reduce(((e,t)=>{if(!(e[e.length-1]===i&&t===i)){e.push(t)}return e}),[]);e.forEach(((t,a)=>{if(t!==i||e[a-1]===i){return}if(a===0){if(e.length>1){e[a+1]="(?:\\/|"+r+"\\/)?"+e[a+1]}else{e[a]=r}}else if(a===e.length-1){e[a-1]+="(?:\\/|"+r+")?"}else{e[a-1]+="(?:\\/|\\/"+r+"\\/)"+e[a+1];e[a+1]=i}}));return e.filter((e=>e!==i)).join("/")})).join("|");n="^(?:"+n+")$";if(this.negate)n="^(?!"+n+").*$";try{this.regexp=new RegExp(n,a)}catch(e){this.regexp=false}return this.regexp}match(e,t=this.partial){this.debug("match",e,this.pattern);if(this.comment)return false;if(this.empty)return e==="";if(e==="/"&&t)return true;const r=this.options;if(n.sep!=="/"){e=e.split(n.sep).join("/")}e=e.split(w);this.debug(this.pattern,"split",e);const a=this.set;this.debug(this.pattern,"set",a);let i;for(let t=e.length-1;t>=0;t--){i=e[t];if(i)break}for(let n=0;n<a.length;n++){const o=a[n];let l=e;if(r.matchBase&&o.length===1){l=[i]}const d=this.matchOne(l,o,t);if(d){if(r.flipNegate)return true;return!this.negate}}if(r.flipNegate)return false;return this.negate}static defaults(e){return a.defaults(e).Minimatch}}a.Minimatch=Minimatch},8184:(e,t,r)=>{var a=r(9417);e.exports=expandTop;var n="\0SLASH"+Math.random()+"\0";var i="\0OPEN"+Math.random()+"\0";var o="\0CLOSE"+Math.random()+"\0";var l="\0COMMA"+Math.random()+"\0";var d="\0PERIOD"+Math.random()+"\0";function numeric(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function escapeBraces(e){return e.split("\\\\").join(n).split("\\{").join(i).split("\\}").join(o).split("\\,").join(l).split("\\.").join(d)}function unescapeBraces(e){return e.split(n).join("\\").split(i).join("{").split(o).join("}").split(l).join(",").split(d).join(".")}function parseCommaParts(e){if(!e)return[""];var t=[];var r=a("{","}",e);if(!r)return e.split(",");var n=r.pre;var i=r.body;var o=r.post;var l=n.split(",");l[l.length-1]+="{"+i+"}";var d=parseCommaParts(o);if(o.length){l[l.length-1]+=d.shift();l.push.apply(l,d)}t.push.apply(t,l);return t}function expandTop(e){if(!e)return[];if(e.substr(0,2)==="{}"){e="\\{\\}"+e.substr(2)}return expand(escapeBraces(e),true).map(unescapeBraces)}function embrace(e){return"{"+e+"}"}function isPadded(e){return/^-?0\d/.test(e)}function lte(e,t){return e<=t}function gte(e,t){return e>=t}function expand(e,t){var r=[];var n=a("{","}",e);if(!n)return[e];var i=n.pre;var l=n.post.length?expand(n.post,false):[""];if(/\$$/.test(n.pre)){for(var d=0;d<l.length;d++){var u=i+"{"+n.body+"}"+l[d];r.push(u)}}else{var c=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(n.body);var h=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(n.body);var g=c||h;var v=n.body.indexOf(",")>=0;if(!g&&!v){if(n.post.match(/,.*\}/)){e=n.pre+"{"+n.body+o+n.post;return expand(e)}return[e]}var w;if(g){w=n.body.split(/\.\./)}else{w=parseCommaParts(n.body);if(w.length===1){w=expand(w[0],false).map(embrace);if(w.length===1){return l.map((function(e){return n.pre+w[0]+e}))}}}var b;if(g){var y=numeric(w[0]);var k=numeric(w[1]);var E=Math.max(w[0].length,w[1].length);var D=w.length==3?Math.abs(numeric(w[2])):1;var _=lte;var A=k<y;if(A){D*=-1;_=gte}var S=w.some(isPadded);b=[];for(var x=y;_(x,k);x+=D){var C;if(h){C=String.fromCharCode(x);if(C==="\\")C=""}else{C=String(x);if(S){var T=E-C.length;if(T>0){var F=new Array(T+1).join("0");if(x<0)C="-"+F+C.slice(1);else C=F+C}}}b.push(C)}}else{b=[];for(var O=0;O<w.length;O++){b.push.apply(b,expand(w[O],false))}}for(var O=0;O<b.length;O++){for(var d=0;d<l.length;d++){var u=i+b[O]+l[d];if(!t||g||u)r.push(u)}}}return r}},7743:(e,t,r)=>{let a=["a chip off the old block","a clean slate","a dark and stormy night","a far cry","a fine kettle of fish","a loose cannon","a penny saved is a penny earned","a tough row to hoe","a word to the wise","ace in the hole","acid test","add insult to injury","against all odds","air your dirty laundry","all fun and games","all in a day's work","all talk, no action","all thumbs","all your eggs in one basket","all's fair in love and war","all's well that ends well","almighty dollar","American as apple pie","an axe to grind","another day, another dollar","armed to the teeth","as luck would have it","as old as time","as the crow flies","at loose ends","at my wits end","avoid like the plague","babe in the woods","back against the wall","back in the saddle","back to square one","back to the drawing board","bad to the bone","badge of honor","bald faced liar","ballpark figure","banging your head against a brick wall","baptism by fire","barking up the wrong tree","bat out of hell","be all and end all","beat a dead horse","beat around the bush","been there, done that","beggars can't be choosers","behind the eight ball","bend over backwards","benefit of the doubt","bent out of shape","best thing since sliced bread","bet your bottom dollar","better half","better late than never","better mousetrap","better safe than sorry","between a rock and a hard place","beyond the pale","bide your time","big as life","big cheese","big fish in a small pond","big man on campus","bigger they are the harder they fall","bird in the hand","bird's eye view","birds and the bees","birds of a feather flock together","bit the hand that feeds you","bite the bullet","bite the dust","bitten off more than he can chew","black as coal","black as pitch","black as the ace of spades","blast from the past","bleeding heart","blessing in disguise","blind ambition","blind as a bat","blind leading the blind","blood is thicker than water","blood sweat and tears","blow off steam","blow your own horn","blushing bride","boils down to","bolt from the blue","bone to pick","bored stiff","bored to tears","bottomless pit","boys will be boys","bright and early","brings home the bacon","broad across the beam","broken record","brought back to reality","bull by the horns","bull in a china shop","burn the midnight oil","burning question","burning the candle at both ends","burst your bubble","bury the hatchet","busy as a bee","by hook or by crook","call a spade a spade","called onto the carpet","calm before the storm","can of worms","can't cut the mustard","can't hold a candle to","case of mistaken identity","cat got your tongue","cat's meow","caught in the crossfire","caught red-handed","checkered past","chomping at the bit","cleanliness is next to godliness","clear as a bell","clear as mud","close to the vest","cock and bull story","cold shoulder","come hell or high water","cool as a cucumber","cool, calm, and collected","cost a king's ransom","count your blessings","crack of dawn","crash course","creature comforts","cross that bridge when you come to it","crushing blow","cry like a baby","cry me a river","cry over spilt milk","crystal clear","curiosity killed the cat","cut and dried","cut through the red tape","cut to the chase","cute as a bugs ear","cute as a button","cute as a puppy","cuts to the quick","dark before the dawn","day in, day out","dead as a doornail","devil is in the details","dime a dozen","divide and conquer","dog and pony show","dog days","dog eat dog","dog tired","don't burn your bridges","don't count your chickens","don't look a gift horse in the mouth","don't rock the boat","don't step on anyone's toes","don't take any wooden nickels","down and out","down at the heels","down in the dumps","down the hatch","down to earth","draw the line","dressed to kill","dressed to the nines","drives me up the wall","dull as dishwater","dyed in the wool","eagle eye","ear to the ground","early bird catches the worm","easier said than done","easy as pie","eat your heart out","eat your words","eleventh hour","even the playing field","every dog has its day","every fiber of my being","everything but the kitchen sink","eye for an eye","face the music","facts of life","fair weather friend","fall by the wayside","fan the flames","feast or famine","feather your nest","feathered friends","few and far between","fifteen minutes of fame","filthy vermin","fine kettle of fish","fish out of water","fishing for a compliment","fit as a fiddle","fit the bill","fit to be tied","flash in the pan","flat as a pancake","flip your lid","flog a dead horse","fly by night","fly the coop","follow your heart","for all intents and purposes","for the birds","for what it's worth","force of nature","force to be reckoned with","forgive and forget","fox in the henhouse","free and easy","free as a bird","fresh as a daisy","full steam ahead","fun in the sun","garbage in, garbage out","gentle as a lamb","get a kick out of","get a leg up","get down and dirty","get the lead out","get to the bottom of","get your feet wet","gets my goat","gilding the lily","give and take","go against the grain","go at it tooth and nail","go for broke","go him one better","go the extra mile","go with the flow","goes without saying","good as gold","good deed for the day","good things come to those who wait","good time was had by all","good times were had by all","greased lightning","greek to me","green thumb","green-eyed monster","grist for the mill","growing like a weed","hair of the dog","hand to mouth","happy as a clam","happy as a lark","hasn't a clue","have a nice day","have high hopes","have the last laugh","haven't got a row to hoe","head honcho","head over heels","hear a pin drop","heard it through the grapevine","heart's content","heavy as lead","hem and haw","high and dry","high and mighty","high as a kite","hit paydirt","hold your head up high","hold your horses","hold your own","hold your tongue","honest as the day is long","horns of a dilemma","horse of a different color","hot under the collar","hour of need","I beg to differ","icing on the cake","if the shoe fits","if the shoe were on the other foot","in a jam","in a jiffy","in a nutshell","in a pig's eye","in a pinch","in a word","in hot water","in the gutter","in the nick of time","in the thick of it","in your dreams","it ain't over till the fat lady sings","it goes without saying","it takes all kinds","it takes one to know one","it's a small world","it's only a matter of time","ivory tower","Jack of all trades","jockey for position","jog your memory","joined at the hip","judge a book by its cover","jump down your throat","jump in with both feet","jump on the bandwagon","jump the gun","jump to conclusions","just a hop, skip, and a jump","just the ticket","justice is blind","keep a stiff upper lip","keep an eye on","keep it simple, stupid","keep the home fires burning","keep up with the Joneses","keep your chin up","keep your fingers crossed","kick the bucket","kick up your heels","kick your feet up","kid in a candy store","kill two birds with one stone","kiss of death","knock it out of the park","knock on wood","knock your socks off","know him from Adam","know the ropes","know the score","knuckle down","knuckle sandwich","knuckle under","labor of love","ladder of success","land on your feet","lap of luxury","last but not least","last hurrah","last-ditch effort","law of the jungle","law of the land","lay down the law","leaps and bounds","let sleeping dogs lie","let the cat out of the bag","let the good times roll","let your hair down","let's talk turkey","letter perfect","lick your wounds","lies like a rug","life's a bitch","life's a grind","light at the end of the tunnel","lighter than a feather","lighter than air","like clockwork","like father like son","like taking candy from a baby","like the plague","like there's no tomorrow","lion's share","live and learn","live and let live","long and short of it","long lost love","look before you leap","look down your nose","look what the cat dragged in","looking a gift horse in the mouth","looks like death warmed over","loose cannon","lose your head","lose your temper","loud as a horn","lounge lizard","loved and lost","low man on the totem pole","luck of the draw","luck of the Irish","make hay while the sun shines","make money hand over fist","make my day","make the best of a bad situation","make the best of it","make your blood boil","man of few words","man's best friend","mark my words","meaningful dialogue","missed the boat on that one","moment in the sun","moment of glory","moment of truth","money to burn","more power to you","more than one way to skin a cat","movers and shakers","moving experience","naked as a jaybird","naked truth","neat as a pin","needle in a haystack","needless to say","neither here nor there","never look back","never say never","nip and tuck","nip it in the bud","no guts, no glory","no love lost","no pain, no gain","no skin off my back","no stone unturned","no time like the present","no use crying over spilled milk","nose to the grindstone","not a hope in hell","not a minute's peace","not in my backyard","not playing with a full deck","not the end of the world","not written in stone","nothing to sneeze at","nothing ventured nothing gained","now we're cooking","off the top of my head","off the wagon","off the wall","old hat","older and wiser","older than dirt","older than Methuselah","on a roll","on cloud nine","on pins and needles","on the bandwagon","on the money","on the nose","on the rocks","on the spot","on the tip of my tongue","on the wagon","on thin ice","once bitten, twice shy","one bad apple doesn't spoil the bushel","one born every minute","one brick short","one foot in the grave","one in a million","one red cent","only game in town","open a can of worms","open and shut case","open the flood gates","opportunity doesn't knock twice","out of pocket","out of sight, out of mind","out of the frying pan into the fire","out of the woods","out on a limb","over a barrel","over the hump","pain and suffering","pain in the","panic button","par for the course","part and parcel","party pooper","pass the buck","patience is a virtue","pay through the nose","penny pincher","perfect storm","pig in a poke","pile it on","pillar of the community","pin your hopes on","pitter patter of little feet","plain as day","plain as the nose on your face","play by the rules","play your cards right","playing the field","playing with fire","pleased as punch","plenty of fish in the sea","point with pride","poor as a church mouse","pot calling the kettle black","pretty as a picture","pull a fast one","pull your punches","pulling your leg","pure as the driven snow","put it in a nutshell","put one over on you","put the cart before the horse","put the pedal to the metal","put your best foot forward","put your foot down","quick as a bunny","quick as a lick","quick as a wink","quick as lightning","quiet as a dormouse","rags to riches","raining buckets","raining cats and dogs","rank and file","rat race","reap what you sow","red as a beet","red herring","reinvent the wheel","rich and famous","rings a bell","ripe old age","ripped me off","rise and shine","road to hell is paved with good intentions","rob Peter to pay Paul","roll over in the grave","rub the wrong way","ruled the roost","running in circles","sad but true","sadder but wiser","salt of the earth","scared stiff","scared to death","sealed with a kiss","second to none","see eye to eye","seen the light","seize the day","set the record straight","set the world on fire","set your teeth on edge","sharp as a tack","shoot for the moon","shoot the breeze","shot in the dark","shoulder to the wheel","sick as a dog","sigh of relief","signed, sealed, and delivered","sink or swim","six of one, half a dozen of another","skating on thin ice","slept like a log","slinging mud","slippery as an eel","slow as molasses","smart as a whip","smooth as a baby's bottom","sneaking suspicion","snug as a bug in a rug","sow wild oats","spare the rod, spoil the child","speak of the devil","spilled the beans","spinning your wheels","spitting image of","spoke with relish","spread like wildfire","spring to life","squeaky wheel gets the grease","stands out like a sore thumb","start from scratch","stick in the mud","still waters run deep","stitch in time","stop and smell the roses","straight as an arrow","straw that broke the camel's back","strong as an ox","stubborn as a mule","stuff that dreams are made of","stuffed shirt","sweating blood","sweating bullets","take a load off","take one for the team","take the bait","take the bull by the horns","take the plunge","takes one to know one","takes two to tango","the more the merrier","the real deal","the real McCoy","the red carpet treatment","the same old story","there is no accounting for taste","thick as a brick","thick as thieves","thin as a rail","think outside of the box","third time's the charm","this day and age","this hurts me worse than it hurts you","this point in time","three sheets to the wind","through thick and thin","throw in the towel","tie one on","tighter than a drum","time and time again","time is of the essence","tip of the iceberg","tired but happy","to coin a phrase","to each his own","to make a long story short","to the best of my knowledge","toe the line","tongue in cheek","too good to be true","too hot to handle","too numerous to mention","touch with a ten foot pole","tough as nails","trial and error","trials and tribulations","tried and true","trip down memory lane","twist of fate","two cents worth","two peas in a pod","ugly as sin","under the counter","under the gun","under the same roof","under the weather","until the cows come home","unvarnished truth","up the creek","uphill battle","upper crust","upset the applecart","vain attempt","vain effort","vanquish the enemy","vested interest","waiting for the other shoe to drop","wakeup call","warm welcome","watch your p's and q's","watch your tongue","watching the clock","water under the bridge","weather the storm","weed them out","week of Sundays","went belly up","wet behind the ears","what goes around comes around","what you see is what you get","when it rains, it pours","when push comes to shove","when the cat's away","when the going gets tough, the tough get going","white as a sheet","whole ball of wax","whole hog","whole nine yards","wild goose chase","will wonders never cease?","wisdom of the ages","wise as an owl","wolf at the door","words fail me","work like a dog","world weary","worst nightmare","worth its weight in gold","wrong side of the bed","yanking your chain","yappy as a dog","years young","you are what you eat","you can run but you can't hide","you only live once","you're the boss ","young and foolish","young and vibrant"];a=a.map((e=>e.replace(/ /g,"[\\b\\s\\u200C]*")));const n=new RegExp(`\\b(${a.join("|")})\\b`,"gi");const i=r(8268);e.exports=function clichesMatcher(e){return i(n,e)}},8268:e=>{function matcher(e,t){const r=[];let a=e.exec(t);while(a){r.push({index:a.index,offset:a[0].length});a=e.exec(t)}return r}e.exports=matcher},467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=_interopDefault(r(2781));var n=_interopDefault(r(3685));var i=_interopDefault(r(7310));var o=_interopDefault(r(8665));var l=_interopDefault(r(5687));var d=_interopDefault(r(9796));const u=a.Readable;const c=Symbol("buffer");const h=Symbol("type");class Blob{constructor(){this[h]="";const e=arguments[0];const t=arguments[1];const r=[];let a=0;if(e){const t=e;const n=Number(t.length);for(let e=0;e<n;e++){const n=t[e];let i;if(n instanceof Buffer){i=n}else if(ArrayBuffer.isView(n)){i=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){i=Buffer.from(n)}else if(n instanceof Blob){i=n[c]}else{i=Buffer.from(typeof n==="string"?n:String(n))}a+=i.length;r.push(i)}}this[c]=Buffer.concat(r);let n=t&&t.type!==undefined&&String(t.type).toLowerCase();if(n&&!/[^\u0020-\u007E]/.test(n)){this[h]=n}}get size(){return this[c].length}get type(){return this[h]}text(){return Promise.resolve(this[c].toString())}arrayBuffer(){const e=this[c];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new u;e._read=function(){};e.push(this[c]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const r=arguments[1];let a,n;if(t===undefined){a=0}else if(t<0){a=Math.max(e+t,0)}else{a=Math.min(t,e)}if(r===undefined){n=e}else if(r<0){n=Math.max(e+r,0)}else{n=Math.min(r,e)}const i=Math.max(n-a,0);const o=this[c];const l=o.slice(a,a+i);const d=new Blob([],{type:arguments[2]});d[c]=l;return d}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,r){Error.call(this,e);this.message=e;this.type=t;if(r){this.code=this.errno=r.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let g;try{g=r(2877).convert}catch(e){}const v=Symbol("Body internals");const w=a.PassThrough;function Body(e){var t=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=r.size;let i=n===undefined?0:n;var o=r.timeout;let l=o===undefined?0:o;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof a);else{e=Buffer.from(String(e))}this[v]={body:e,disturbed:false,error:null};this.size=i;this.timeout=l;if(e instanceof a){e.on("error",(function(e){const r=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[v].error=r}))}}Body.prototype={get body(){return this[v].body},get bodyUsed(){return this[v].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[c]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,r)}}};function consumeBody(){var e=this;if(this[v].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[v].disturbed=true;if(this[v].error){return Body.Promise.reject(this[v].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof a)){return Body.Promise.resolve(Buffer.alloc(0))}let r=[];let n=0;let i=false;return new Body.Promise((function(a,o){let l;if(e.timeout){l=setTimeout((function(){i=true;o(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){i=true;o(t)}else{o(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(i||t===null){return}if(e.size&&n+t.length>e.size){i=true;o(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=t.length;r.push(t)}));t.on("end",(function(){if(i){return}clearTimeout(l);try{a(Buffer.concat(r,n))}catch(t){o(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof g!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const r=t.get("content-type");let a="utf-8";let n,i;if(r){n=/charset=([^;]*)/i.exec(r)}i=e.slice(0,1024).toString();if(!n&&i){n=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)}if(!n&&i){n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i);if(!n){n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&i){n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)}if(n){a=n.pop();if(a==="gb2312"||a==="gbk"){a="gb18030"}}return g(e,"UTF-8",a).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,r;let n=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof a&&typeof n.getBoundary!=="function"){t=new w;r=new w;n.pipe(t);n.pipe(r);e[v].body=t;n=r}return n}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof a){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const r=t.body;if(r===null){e.end()}else if(isBlob(r)){r.stream().pipe(e)}else if(Buffer.isBuffer(r)){e.write(r);e.end()}else{r.pipe(e)}}Body.Promise=global.Promise;const b=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const y=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(b.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(y.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const r in e){if(r.toLowerCase()===t){return r}}return undefined}const k=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[k]=Object.create(null);if(e instanceof Headers){const t=e.raw();const r=Object.keys(t);for(const e of r){for(const r of t[e]){this.append(e,r)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const r=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}r.push(Array.from(t))}for(const e of r){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const r=e[t];this.append(t,r)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[k],e);if(t===undefined){return null}return this[k][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let r=getHeaders(this);let a=0;while(a<r.length){var n=r[a];const i=n[0],o=n[1];e.call(t,o,i,this);r=getHeaders(this);a++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[k],e);this[k][r!==undefined?r:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[k],e);if(r!==undefined){this[k][r].push(t)}else{this[k][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[k],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[k],e);if(t!==undefined){delete this[k][t]}}raw(){return this[k]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const r=Object.keys(e[k]).sort();return r.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[k][t].join(", ")}:function(t){return[t.toLowerCase(),e[k][t].join(", ")]})}const E=Symbol("internal");function createHeadersIterator(e,t){const r=Object.create(D);r[E]={target:e,kind:t,index:0};return r}const D=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==D){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[E];const t=e.target,r=e.kind,a=e.index;const n=getHeaders(t,r);const i=n.length;if(a>=i){return{value:undefined,done:true}}this[E].index=a+1;return{value:n[a],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(D,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[k]);const r=find(e[k],"Host");if(r!==undefined){t[r]=t[r][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const r of Object.keys(e)){if(b.test(r)){continue}if(Array.isArray(e[r])){for(const a of e[r]){if(y.test(a)){continue}if(t[k][r]===undefined){t[k][r]=[a]}else{t[k][r].push(a)}}}else if(!y.test(e[r])){t[k][r]=[e[r]]}}return t}const _=Symbol("Response internals");const A=n.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const r=t.status||200;const a=new Headers(t.headers);if(e!=null&&!a.has("Content-Type")){const t=extractContentType(e);if(t){a.append("Content-Type",t)}}this[_]={url:t.url,status:r,statusText:t.statusText||A[r],headers:a,counter:t.counter}}get url(){return this[_].url||""}get status(){return this[_].status}get ok(){return this[_].status>=200&&this[_].status<300}get redirected(){return this[_].counter>0}get statusText(){return this[_].statusText}get headers(){return this[_].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const S=Symbol("Request internals");const x=i.URL||o.URL;const C=i.parse;const T=i.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new x(e).toString()}return C(e)}const F="destroy"in a.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[S]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let r;if(!isRequest(e)){if(e&&e.href){r=parseURL(e.href)}else{r=parseURL(`${e}`)}e={}}else{r=parseURL(e.url)}let a=t.method||e.method||"GET";a=a.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(a==="GET"||a==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,n,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new Headers(t.headers||e.headers||{});if(n!=null&&!i.has("Content-Type")){const e=extractContentType(n);if(e){i.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in t)o=t.signal;if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[S]={method:a,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:r,signal:o};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[S].method}get url(){return T(this[S].parsedURL)}get headers(){return this[S].headers}get redirect(){return this[S].redirect}get signal(){return this[S].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[S].parsedURL;const r=new Headers(e[S].headers);if(!r.has("Accept")){r.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof a.Readable&&!F){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){n="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){n=String(t)}}if(n){r.set("Content-Length",n)}if(!r.has("User-Agent")){r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!r.has("Accept-Encoding")){r.set("Accept-Encoding","gzip,deflate")}let i=e.agent;if(typeof i==="function"){i=i(t)}if(!r.has("Connection")&&!i){r.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:i})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const O=i.URL||o.URL;const P=a.PassThrough;const L=function isDomainOrSubdomain(e,t){const r=new O(t).hostname;const a=new O(e).hostname;return r===a||r[r.length-a.length-1]==="."&&r.endsWith(a)};function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(r,i){const o=new Request(e,t);const u=getNodeRequestOptions(o);const c=(u.protocol==="https:"?l:n).request;const h=o.signal;let g=null;const v=function abort(){let e=new AbortError("The user aborted a request.");i(e);if(o.body&&o.body instanceof a.Readable){o.body.destroy(e)}if(!g||!g.body)return;g.body.emit("error",e)};if(h&&h.aborted){v();return}const w=function abortAndFinalize(){v();finalize()};const b=c(u);let y;if(h){h.addEventListener("abort",w)}function finalize(){b.abort();if(h)h.removeEventListener("abort",w);clearTimeout(y)}if(o.timeout){b.once("socket",(function(e){y=setTimeout((function(){i(new FetchError(`network timeout at: ${o.url}`,"request-timeout"));finalize()}),o.timeout)}))}b.on("error",(function(e){i(new FetchError(`request to ${o.url} failed, reason: ${e.message}`,"system",e));finalize()}));b.on("response",(function(e){clearTimeout(y);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const a=t.get("Location");let n=null;try{n=a===null?null:new O(a,o.url).toString()}catch(e){if(o.redirect!=="manual"){i(new FetchError(`uri requested responds with an invalid redirect URL: ${a}`,"invalid-redirect"));finalize();return}}switch(o.redirect){case"error":i(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{t.set("Location",n)}catch(e){i(e)}}break;case"follow":if(n===null){break}if(o.counter>=o.follow){i(new FetchError(`maximum redirect reached at: ${o.url}`,"max-redirect"));finalize();return}const a={headers:new Headers(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!L(o.url,n)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){a.headers.delete(e)}}if(e.statusCode!==303&&o.body&&getTotalBytes(o)===null){i(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&o.method==="POST"){a.method="GET";a.body=undefined;a.headers.delete("content-length")}r(fetch(new Request(n,a)));finalize();return}}e.once("end",(function(){if(h)h.removeEventListener("abort",w)}));let a=e.pipe(new P);const n={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:o.size,timeout:o.timeout,counter:o.counter};const l=t.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||l===null||e.statusCode===204||e.statusCode===304){g=new Response(a,n);r(g);return}const u={flush:d.Z_SYNC_FLUSH,finishFlush:d.Z_SYNC_FLUSH};if(l=="gzip"||l=="x-gzip"){a=a.pipe(d.createGunzip(u));g=new Response(a,n);r(g);return}if(l=="deflate"||l=="x-deflate"){const t=e.pipe(new P);t.once("data",(function(e){if((e[0]&15)===8){a=a.pipe(d.createInflate())}else{a=a.pipe(d.createInflateRaw())}g=new Response(a,n);r(g)}));return}if(l=="br"&&typeof d.createBrotliDecompress==="function"){a=a.pipe(d.createBrotliDecompress());g=new Response(a,n);r(g);return}g=new Response(a,n);r(g)}));writeToStream(b,o)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},1223:(e,t,r)=>{var a=r(2940);e.exports=a(once);e.exports.strict=a(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||"Function wrapped with `once`";f.onceError=t+" shouldn't be called more than once";f.called=false;return f}},8338:e=>{"use strict";e.exports=nlcstToString;function nlcstToString(e,t){var r=t||"";var a;var n;var i;if(!e||!("length"in e)&&!e.type){throw new Error("Expected node, not `"+e+"`")}if(typeof e.value==="string"){return e.value}i="length"in e?e:e.children;n=i.length;if(n===1&&"value"in i[0]){return i[0].value}a=[];while(n--){a[n]=nlcstToString(i[n],r)}return a.join(r)}},4464:e=>{var t=["awoken","been","born","beat","become","begun","bent","beset","bet","bid","bidden","bound","bitten","bled","blown","broken","bred","brought","broadcast","built","burnt","burst","bought","cast","caught","chosen","clung","come","cost","crept","cut","dealt","dug","dived","done","drawn","dreamt","driven","drunk","eaten","fallen","fed","felt","fought","found","fit","fled","flung","flown","forbidden","forgotten","foregone","forgiven","forsaken","frozen","gotten","given","gone","ground","grown","hung","heard","hidden","hit","held","hurt","kept","knelt","knit","known","laid","led","leapt","learnt","left","lent","let","lain","lighted","lost","made","meant","met","misspelt","mistaken","mown","overcome","overdone","overtaken","overthrown","paid","pled","proven","put","quit","read","rid","ridden","rung","risen","run","sawn","said","seen","sought","sold","sent","set","sewn","shaken","shaven","shorn","shed","shone","shod","shot","shown","shrunk","shut","sung","sunk","sat","slept","slain","slid","slung","slit","smitten","sown","spoken","sped","spent","spilt","spun","spit","split","spread","sprung","stood","stolen","stuck","stung","stunk","stridden","struck","strung","striven","sworn","swept","swollen","swum","swung","taken","taught","torn","told","thought","thrived","thrown","thrust","trodden","understood","upheld","upset","woken","worn","woven","wed","wept","wound","won","withheld","withstood","wrung","written"];var r=["indeed"];var a=new RegExp("\\b(am|are|were|being|is|been|was|be)\\b\\s*([\\w]+ed|"+t.join("|")+")\\b","gi");var n;e.exports=function(e,t){var i=t&&t.by?n||constructByRe():a;var o=[];while(match=i.exec(e)){if(r.indexOf(match[2].toLowerCase())===-1){o.push({index:match.index,offset:match[0].length})}}return o};function constructByRe(){return n=new RegExp(a.toString().slice(1,-3)+"\\s*by\\b","gi")}},2522:function(e){(function(t,r){if(true){e.exports=r()}else{}})(this,(function(){var e=[];var t=[];var r={};var a={};var n={};function sanitizeRule(e){if(typeof e==="string"){return new RegExp("^"+e+"$","i")}return e}function restoreCase(e,t){if(e===t)return t;if(e===e.toLowerCase())return t.toLowerCase();if(e===e.toUpperCase())return t.toUpperCase();if(e[0]===e[0].toUpperCase()){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()}return t.toLowerCase()}function interpolate(e,t){return e.replace(/\$(\d{1,2})/g,(function(e,r){return t[r]||""}))}function replace(e,t){return e.replace(t[0],(function(r,a){var n=interpolate(t[1],arguments);if(r===""){return restoreCase(e[a-1],n)}return restoreCase(r,n)}))}function sanitizeWord(e,t,a){if(!e.length||r.hasOwnProperty(e)){return t}var n=a.length;while(n--){var i=a[n];if(i[0].test(t))return replace(t,i)}return t}function replaceWord(e,t,r){return function(a){var n=a.toLowerCase();if(t.hasOwnProperty(n)){return restoreCase(a,n)}if(e.hasOwnProperty(n)){return restoreCase(a,e[n])}return sanitizeWord(n,a,r)}}function checkWord(e,t,r,a){return function(a){var n=a.toLowerCase();if(t.hasOwnProperty(n))return true;if(e.hasOwnProperty(n))return false;return sanitizeWord(n,n,r)===n}}function pluralize(e,t,r){var a=t===1?pluralize.singular(e):pluralize.plural(e);return(r?t+" ":"")+a}pluralize.plural=replaceWord(n,a,e);pluralize.isPlural=checkWord(n,a,e);pluralize.singular=replaceWord(a,n,t);pluralize.isSingular=checkWord(a,n,t);pluralize.addPluralRule=function(t,r){e.push([sanitizeRule(t),r])};pluralize.addSingularRule=function(e,r){t.push([sanitizeRule(e),r])};pluralize.addUncountableRule=function(e){if(typeof e==="string"){r[e.toLowerCase()]=true;return}pluralize.addPluralRule(e,"$0");pluralize.addSingularRule(e,"$0")};pluralize.addIrregularRule=function(e,t){t=t.toLowerCase();e=e.toLowerCase();n[e]=t;a[t]=e};[["I","we"],["me","us"],["he","they"],["she","they"],["them","them"],["myself","ourselves"],["yourself","yourselves"],["itself","themselves"],["herself","themselves"],["himself","themselves"],["themself","themselves"],["is","are"],["was","were"],["has","have"],["this","these"],["that","those"],["echo","echoes"],["dingo","dingoes"],["volcano","volcanoes"],["tornado","tornadoes"],["torpedo","torpedoes"],["genus","genera"],["viscus","viscera"],["stigma","stigmata"],["stoma","stomata"],["dogma","dogmata"],["lemma","lemmata"],["schema","schemata"],["anathema","anathemata"],["ox","oxen"],["axe","axes"],["die","dice"],["yes","yeses"],["foot","feet"],["eave","eaves"],["goose","geese"],["tooth","teeth"],["quiz","quizzes"],["human","humans"],["proof","proofs"],["carve","carves"],["valve","valves"],["looey","looies"],["thief","thieves"],["groove","grooves"],["pickaxe","pickaxes"],["passerby","passersby"]].forEach((function(e){return pluralize.addIrregularRule(e[0],e[1])}));[[/s?$/i,"s"],[/[^\u0000-\u007F]$/i,"$0"],[/([^aeiou]ese)$/i,"$1"],[/(ax|test)is$/i,"$1es"],[/(alias|[^aou]us|t[lm]as|gas|ris)$/i,"$1es"],[/(e[mn]u)s?$/i,"$1s"],[/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i,"$1"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1i"],[/(alumn|alg|vertebr)(?:a|ae)$/i,"$1ae"],[/(seraph|cherub)(?:im)?$/i,"$1im"],[/(her|at|gr)o$/i,"$1oes"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i,"$1a"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i,"$1a"],[/sis$/i,"ses"],[/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i,"$1$2ves"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/([^ch][ieo][ln])ey$/i,"$1ies"],[/(x|ch|ss|sh|zz)$/i,"$1es"],[/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i,"$1ices"],[/\b((?:tit)?m|l)(?:ice|ouse)$/i,"$1ice"],[/(pe)(?:rson|ople)$/i,"$1ople"],[/(child)(?:ren)?$/i,"$1ren"],[/eaux$/i,"$0"],[/m[ae]n$/i,"men"],["thou","you"]].forEach((function(e){return pluralize.addPluralRule(e[0],e[1])}));[[/s$/i,""],[/(ss)$/i,"$1"],[/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i,"$1fe"],[/(ar|(?:wo|[ae])l|[eo][ao])ves$/i,"$1f"],[/ies$/i,"y"],[/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i,"$1ie"],[/\b(mon|smil)ies$/i,"$1ey"],[/\b((?:tit)?m|l)ice$/i,"$1ouse"],[/(seraph|cherub)im$/i,"$1"],[/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i,"$1"],[/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i,"$1sis"],[/(movie|twelve|abuse|e[mn]u)s$/i,"$1"],[/(test)(?:is|es)$/i,"$1is"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1us"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i,"$1um"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i,"$1on"],[/(alumn|alg|vertebr)ae$/i,"$1a"],[/(cod|mur|sil|vert|ind)ices$/i,"$1ex"],[/(matr|append)ices$/i,"$1ix"],[/(pe)(rson|ople)$/i,"$1rson"],[/(child)ren$/i,"$1"],[/(eau)x?$/i,"$1"],[/men$/i,"man"]].forEach((function(e){return pluralize.addSingularRule(e[0],e[1])}));["adulthood","advice","agenda","aid","aircraft","alcohol","ammo","analytics","anime","athletics","audio","bison","blood","bream","buffalo","butter","carp","cash","chassis","chess","clothing","cod","commerce","cooperation","corps","debris","diabetes","digestion","elk","energy","equipment","excretion","expertise","firmware","flounder","fun","gallows","garbage","graffiti","hardware","headquarters","health","herpes","highjinks","homework","housework","information","jeans","justice","kudos","labour","literature","machinery","mackerel","mail","media","mews","moose","music","mud","manga","news","only","personnel","pike","plankton","pliers","police","pollution","premises","rain","research","rice","salmon","scissors","series","sewage","shambles","shrimp","software","species","staff","swine","tennis","traffic","transportation","trout","tuna","wealth","welfare","whiting","wildebeest","wildlife","you",/pok[eé]mon$/i,/[^aeiou]ese$/i,/deer$/i,/fish$/i,/measles$/i,/o[iu]s$/i,/pox$/i,/sheep$/i].forEach(pluralize.addUncountableRule);return pluralize}))},9832:(e,t,r)=>{var a=r(1017);var n=r(5768);var i=r(3367);var o=i.Spellchecker;var l=o.prototype.checkSpellingAsync;o.prototype.checkSpellingAsync=function(e){return new n(function(t,r){l.call(this,e,(function(e,a){if(e){r(e)}else{t(a)}}))}.bind(this))};var d=null;var ensureDefaultSpellCheck=function(){if(d){return}var e=process.env.LANG;e=e?e.split(".")[0]:"en_US";d=new o;setDictionary(e,getDictionaryPath())};var setDictionary=function(e,t){ensureDefaultSpellCheck();return d.setDictionary(e,t)};var isMisspelled=function(){ensureDefaultSpellCheck();return d.isMisspelled.apply(d,arguments)};var checkSpelling=function(){ensureDefaultSpellCheck();return d.checkSpelling.apply(d,arguments)};var checkSpellingAsync=function(e){ensureDefaultSpellCheck();return d.checkSpellingAsync.apply(d,arguments)};var add=function(){ensureDefaultSpellCheck();d.add.apply(d,arguments)};var remove=function(){ensureDefaultSpellCheck();d.remove.apply(d,arguments)};var getCorrectionsForMisspelling=function(){ensureDefaultSpellCheck();return d.getCorrectionsForMisspelling.apply(d,arguments)};var getAvailableDictionaries=function(){ensureDefaultSpellCheck();return d.getAvailableDictionaries.apply(d,arguments)};var getDictionaryPath=function(){var e=r.ab+"hunspell_dictionaries";try{var t=e.replace(".asar"+a.sep,".asar.unpacked"+a.sep);if(r(7147).statSync(t)){e=t}}catch(e){}return r.ab+"hunspell_dictionaries"};e.exports={setDictionary:setDictionary,add:add,remove:remove,isMisspelled:isMisspelled,checkSpelling:checkSpelling,checkSpellingAsync:checkSpellingAsync,getAvailableDictionaries:getAvailableDictionaries,getCorrectionsForMisspelling:getCorrectionsForMisspelling,getDictionaryPath:getDictionaryPath,Spellchecker:o,USE_SYSTEM_DEFAULTS:0,ALWAYS_USE_SYSTEM:1,ALWAYS_USE_HUNSPELL:2}},1434:e=>{function matcher(e,t){const r=[];let a=e.exec(t);while(a){r.push({index:a.index,offset:a[0].length});a=e.exec(t)}return r}e.exports=matcher},4530:(e,t,r)=>{const a=r(1434);let n=["a number of","abundance","accede to","accelerate","accentuate","accompany","accomplish","accorded","accrue","acquiesce","acquire","additional","adjacent to","adjustment","admissible","advantageous","adversely impact","advise","aforementioned","aggregate","aircraft","all of","all things considered","alleviate","allocate","along the lines of","already existing","alternatively","amazing","ameliorate","anticipate","apparent","appreciable","as a matter of fact","as a means of","as far as I'm concerned","as of yet","as per","as to","as yet","ascertain","assistance","at the present time","at this time","attain","attributable to","authorize","because of the fact that","belated","benefit from","bestow","by means of","by virtue of the fact that","by virtue of","cease","close proximity","commence","comply with","concerning","consequently","consolidate","constitutes","demonstrate","depart","designate","discontinue","do damage to","do harm to","due to the fact that","during the course of","each and every","economical","eliminate","elucidate","employ","endeavor","enumerate","equitable","equivalent","evaluate","evidenced","exclusively","expedite","expend","expiration","facilitate","factual evidence","feasible","finalize","first and foremost","for all intents and purposes","for the duration of","for the most part","for the purpose of","forfeit","formulate","have a tendency to","honest truth","however","if and when","impacted","implement","in a manner of speaking","in a timely manner","in a very real sense","in accordance with","in addition","in all likelihood","in an effort to","in between","in excess of","in lieu of","in light of the fact that","in many cases","in my opinion","in need of","in order to","in regard to","in some instances","in terms of","in the affirmative","in the case of","in the course of","in the event that","in the final analysis","in the midst of","in the nature of","in the near future","in the negative","in the process of","inception","incumbent upon","indicate","indication","initiate","irregardless","is applicable to","is authorized to","is responsible for","it is essential","it is","it seems that","it was","magnitude","majority of","make an effort","maximum","methodology","minimize","minimum","modify","monitor","multiple","myriad of","necessitate","nevertheless","not certain","not many","not often","not unless","not unlike","notwithstanding","null and void","numerous","objective","obligate","obtain","of late","of the fact that","off of","on the contrary","on the other hand","one particular","optimum","outside of","overall","owing to the fact that","participate","particulars","pass away","pertaining to","point in time","portion","possess","preclude","previous to","previously","prior to","prioritize","procure","proficiency","provided that","purchase","put simply","readily apparent","refer back","regarding","relocate","remainder","remuneration","requirement","reside","residence","retain","satisfy","shall","should you wish","similar to","solicit","sooner rather than later","span across","strategize","subsequent","substantial","successfully complete","sufficient","terminate","that which","the month of","the point I am trying to make","therefore","time period","took advantage of","transmit","transpire","type of","until such time as","utilization","utilize","validate","various different","what I mean to say is","whether or not","with respect to","with the exception of","witnessed"];n=n.map((e=>e.replace(/ /g,"[\\b\\s\\u200C]*")));const i=new RegExp(`\\b(?<!-)(${n.join("|")})\\b`,"gi");e.exports=function isTextWordy(e){return a(i,e)}},4256:(e,t,r)=>{"use strict";var a=r(5477);var n=r(2020);var i={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var t=0;var r=n.length-1;while(t<=r){var a=Math.floor((t+r)/2);var i=n[a];if(i[0][0]<=e&&i[0][1]>=e){return i}else if(i[0][0]>e){r=a-1}else{t=a+1}}return null}var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(o,"_").length}function mapChars(e,t,r){var a=false;var n="";var o=countSymbols(e);for(var l=0;l<o;++l){var d=e.codePointAt(l);var u=findStatus(d);switch(u[1]){case"disallowed":a=true;n+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":n+=String.fromCodePoint.apply(String,u[2]);break;case"deviation":if(r===i.TRANSITIONAL){n+=String.fromCodePoint.apply(String,u[2])}else{n+=String.fromCodePoint(d)}break;case"valid":n+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":if(t){a=true;n+=String.fromCodePoint(d)}else{n+=String.fromCodePoint.apply(String,u[2])}break;case"disallowed_STD3_valid":if(t){a=true}n+=String.fromCodePoint(d);break}}return{string:n,error:a}}var l=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,t){if(e.substr(0,4)==="xn--"){e=a.toUnicode(e);t=i.NONTRANSITIONAL}var r=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(l)===0){r=true}var n=countSymbols(e);for(var o=0;o<n;++o){var d=findStatus(e.codePointAt(o));if(processing===i.TRANSITIONAL&&d[1]!=="valid"||processing===i.NONTRANSITIONAL&&d[1]!=="valid"&&d[1]!=="deviation"){r=true;break}}return{label:e,error:r}}function processing(e,t,r){var a=mapChars(e,t,r);a.string=normalize(a.string);var n=a.string.split(".");for(var i=0;i<n.length;++i){try{var o=validateLabel(n[i]);n[i]=o.label;a.error=a.error||o.error}catch(e){a.error=true}}return{string:n.join("."),error:a.error}}e.exports.toASCII=function(e,t,r,n){var i=processing(e,t,r);var o=i.string.split(".");o=o.map((function(e){try{return a.toASCII(e)}catch(t){i.error=true;return e}}));if(n){var l=o.slice(0,o.length-1).join(".").length;if(l.length>253||l.length===0){i.error=true}for(var d=0;d<o.length;++d){if(o.length>63||o.length===0){i.error=true;break}}}if(i.error)return null;return o.join(".")};e.exports.toUnicode=function(e,t){var r=processing(e,t,i.NONTRANSITIONAL);return{domain:r.string,error:r.error}};e.exports.PROCESSING_OPTIONS=i},4294:(e,t,r)=>{e.exports=r(4219)},4219:(e,t,r)=>{"use strict";var a=r(1808);var n=r(4404);var i=r(3685);var o=r(5687);var l=r(2361);var d=r(9491);var u=r(3837);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=i.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=i.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||i.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",(function onFree(e,r,a,n){var i=toOptions(r,a,n);for(var o=0,l=t.requests.length;o<l;++o){var d=t.requests[o];if(d.host===i.host&&d.port===i.port){t.requests.splice(o,1);d.request.onSocket(e);return}}e.destroy();t.removeSocket(e)}))}u.inherits(TunnelingAgent,l.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,r,a){var n=this;var i=mergeOptions({request:e},n.options,toOptions(t,r,a));if(n.sockets.length>=this.maxSockets){n.requests.push(i);return}n.createSocket(i,(function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){n.emit("free",t,i)}function onCloseOrRemove(e){n.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var r=this;var a={};r.sockets.push(a);var n=mergeOptions({},r.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){n.localAddress=e.localAddress}if(n.proxyAuth){n.headers=n.headers||{};n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")}c("making CONNECT request");var i=r.request(n);i.useChunkedEncodingByDefault=false;i.once("response",onResponse);i.once("upgrade",onUpgrade);i.once("connect",onConnect);i.once("error",onError);i.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,r){process.nextTick((function(){onConnect(e,t,r)}))}function onConnect(n,o,l){i.removeAllListeners();o.removeAllListeners();if(n.statusCode!==200){c("tunneling socket could not be established, statusCode=%d",n.statusCode);o.destroy();var d=new Error("tunneling socket could not be established, "+"statusCode="+n.statusCode);d.code="ECONNRESET";e.request.emit("error",d);r.removeSocket(a);return}if(l.length>0){c("got illegal response body from proxy");o.destroy();var d=new Error("got illegal response body from proxy");d.code="ECONNRESET";e.request.emit("error",d);r.removeSocket(a);return}c("tunneling connection has established");r.sockets[r.sockets.indexOf(a)]=o;return t(o)}function onError(t){i.removeAllListeners();c("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var n=new Error("tunneling socket could not be established, "+"cause="+t.message);n.code="ECONNRESET";e.request.emit("error",n);r.removeSocket(a)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var r=this.requests.shift();if(r){this.createSocket(r,(function(e){r.request.onSocket(e)}))}};function createSecureSocket(e,t){var r=this;TunnelingAgent.prototype.createSocket.call(r,e,(function(a){var i=e.request.getHeader("host");var o=mergeOptions({},r.options,{socket:a,servername:i?i.replace(/:.*$/,""):e.host});var l=n.connect(0,o);r.sockets[r.sockets.indexOf(a)]=l;t(l)}))}function toOptions(e,t,r){if(typeof e==="string"){return{host:e,port:t,localAddress:r}}return e}function mergeOptions(e){for(var t=1,r=arguments.length;t<r;++t){var a=arguments[t];if(typeof a==="object"){var n=Object.keys(a);for(var i=0,o=n.length;i<o;++i){var l=n[i];if(a[l]!==undefined){e[l]=a[l]}}}}return e}var c;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){c=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{c=function(){}}t.debug=c},5968:(e,t,r)=>{"use strict";var a=r(7122);e.exports=modifierFactory;function modifierFactory(e){return iteratorFactory(wrapperFactory(e))}function iteratorFactory(e){return iterator;function iterator(t){var r=t&&t.children;if(!r){throw new Error("Missing children in `parent` for `modifier`")}a(r,e,t)}}function wrapperFactory(e){return wrapper;function wrapper(t,r){return e(t,r,this)}}},104:e=>{"use strict";e.exports=visitChildren;function visitChildren(e){return visitor;function visitor(t){var r=-1;var a=t&&t.children;if(!a){throw new Error("Missing children in `parent` for `visitor`")}while(++r in a){e(a[r],r,t)}}}},5030:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&"version"in process){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}t.getUserAgent=getUserAgent},5840:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"v1",{enumerable:true,get:function(){return a.default}});Object.defineProperty(t,"v3",{enumerable:true,get:function(){return n.default}});Object.defineProperty(t,"v4",{enumerable:true,get:function(){return i.default}});Object.defineProperty(t,"v5",{enumerable:true,get:function(){return o.default}});Object.defineProperty(t,"NIL",{enumerable:true,get:function(){return l.default}});Object.defineProperty(t,"version",{enumerable:true,get:function(){return d.default}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return u.default}});Object.defineProperty(t,"stringify",{enumerable:true,get:function(){return c.default}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return h.default}});var a=_interopRequireDefault(r(8628));var n=_interopRequireDefault(r(6409));var i=_interopRequireDefault(r(5122));var o=_interopRequireDefault(r(9120));var l=_interopRequireDefault(r(5332));var d=_interopRequireDefault(r(1595));var u=_interopRequireDefault(r(6900));var c=_interopRequireDefault(r(8950));var h=_interopRequireDefault(r(2746));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},4569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function md5(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return a.default.createHash("md5").update(e).digest()}var n=md5;t["default"]=n},5332:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r="00000000-0000-0000-0000-000000000000";t["default"]=r},2746:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function parse(e){if(!(0,a.default)(e)){throw TypeError("Invalid UUID")}let t;const r=new Uint8Array(16);r[0]=(t=parseInt(e.slice(0,8),16))>>>24;r[1]=t>>>16&255;r[2]=t>>>8&255;r[3]=t&255;r[4]=(t=parseInt(e.slice(9,13),16))>>>8;r[5]=t&255;r[6]=(t=parseInt(e.slice(14,18),16))>>>8;r[7]=t&255;r[8]=(t=parseInt(e.slice(19,23),16))>>>8;r[9]=t&255;r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255;r[11]=t/4294967296&255;r[12]=t>>>24&255;r[13]=t>>>16&255;r[14]=t>>>8&255;r[15]=t&255;return r}var n=parse;t["default"]=n},814:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;t["default"]=r},807:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=rng;var a=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=new Uint8Array(256);let i=n.length;function rng(){if(i>n.length-16){a.default.randomFillSync(n);i=0}return n.slice(i,i+=16)}},5274:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function sha1(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return a.default.createHash("sha1").update(e).digest()}var n=sha1;t["default"]=n},8950:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=[];for(let e=0;e<256;++e){n.push((e+256).toString(16).substr(1))}function stringify(e,t=0){const r=(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase();if(!(0,a.default)(r)){throw TypeError("Stringified UUID is invalid")}return r}var i=stringify;t["default"]=i},8628:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(807));var n=_interopRequireDefault(r(8950));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}let i;let o;let l=0;let d=0;function v1(e,t,r){let u=t&&r||0;const c=t||new Array(16);e=e||{};let h=e.node||i;let g=e.clockseq!==undefined?e.clockseq:o;if(h==null||g==null){const t=e.random||(e.rng||a.default)();if(h==null){h=i=[t[0]|1,t[1],t[2],t[3],t[4],t[5]]}if(g==null){g=o=(t[6]<<8|t[7])&16383}}let v=e.msecs!==undefined?e.msecs:Date.now();let w=e.nsecs!==undefined?e.nsecs:d+1;const b=v-l+(w-d)/1e4;if(b<0&&e.clockseq===undefined){g=g+1&16383}if((b<0||v>l)&&e.nsecs===undefined){w=0}if(w>=1e4){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec")}l=v;d=w;o=g;v+=122192928e5;const y=((v&268435455)*1e4+w)%4294967296;c[u++]=y>>>24&255;c[u++]=y>>>16&255;c[u++]=y>>>8&255;c[u++]=y&255;const k=v/4294967296*1e4&268435455;c[u++]=k>>>8&255;c[u++]=k&255;c[u++]=k>>>24&15|16;c[u++]=k>>>16&255;c[u++]=g>>>8|128;c[u++]=g&255;for(let e=0;e<6;++e){c[u+e]=h[e]}return t||(0,n.default)(c)}var u=v1;t["default"]=u},6409:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(5998));var n=_interopRequireDefault(r(4569));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=(0,a.default)("v3",48,n.default);var o=i;t["default"]=o},5998:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=_default;t.URL=t.DNS=void 0;var a=_interopRequireDefault(r(8950));var n=_interopRequireDefault(r(2746));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function stringToBytes(e){e=unescape(encodeURIComponent(e));const t=[];for(let r=0;r<e.length;++r){t.push(e.charCodeAt(r))}return t}const i="6ba7b810-9dad-11d1-80b4-00c04fd430c8";t.DNS=i;const o="6ba7b811-9dad-11d1-80b4-00c04fd430c8";t.URL=o;function _default(e,t,r){function generateUUID(e,i,o,l){if(typeof e==="string"){e=stringToBytes(e)}if(typeof i==="string"){i=(0,n.default)(i)}if(i.length!==16){throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)")}let d=new Uint8Array(16+e.length);d.set(i);d.set(e,i.length);d=r(d);d[6]=d[6]&15|t;d[8]=d[8]&63|128;if(o){l=l||0;for(let e=0;e<16;++e){o[l+e]=d[e]}return o}return(0,a.default)(d)}try{generateUUID.name=e}catch(e){}generateUUID.DNS=i;generateUUID.URL=o;return generateUUID}},5122:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(807));var n=_interopRequireDefault(r(8950));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function v4(e,t,r){e=e||{};const i=e.random||(e.rng||a.default)();i[6]=i[6]&15|64;i[8]=i[8]&63|128;if(t){r=r||0;for(let e=0;e<16;++e){t[r+e]=i[e]}return t}return(0,n.default)(i)}var i=v4;t["default"]=i},9120:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(5998));var n=_interopRequireDefault(r(5274));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=(0,a.default)("v5",80,n.default);var o=i;t["default"]=o},6900:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(814));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function validate(e){return typeof e==="string"&&a.default.test(e)}var n=validate;t["default"]=n},1595:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function version(e){if(!(0,a.default)(e)){throw TypeError("Invalid UUID")}return parseInt(e.substr(14,1),16)}var n=version;t["default"]=n},6862:e=>{var t=["are a number","clearly","completely","exceedingly","excellent","extremely","fairly","few","huge","interestingly","is a number","largely","many","mostly","obviously","quite","relatively","remarkably","several","significantly","substantially","surprisingly","tiny","various","vast","very"];var r=["many","few"];var a=new RegExp("\\b("+t.join("|")+")\\b","gi");e.exports=function(e,t){var n=[];while(match=a.exec(e)){var i=match[0].toLowerCase();if(r.indexOf(i)===-1||e.substr(match.index-4,4)!=="too "){n.push({index:match.index,offset:i.length})}}return n}},4886:e=>{"use strict";var t={};e.exports=t;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,t){if(!t.unsigned){--e}const r=t.unsigned?0:-Math.pow(2,e);const a=Math.pow(2,e)-1;const n=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e);const i=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){if(!o)o={};let l=+e;if(o.enforceRange){if(!Number.isFinite(l)){throw new TypeError("Argument is not a finite number")}l=sign(l)*Math.floor(Math.abs(l));if(l<r||l>a){throw new TypeError("Argument is not in byte range")}return l}if(!isNaN(l)&&o.clamp){l=evenRound(l);if(l<r)l=r;if(l>a)l=a;return l}if(!Number.isFinite(l)||l===0){return 0}l=sign(l)*Math.floor(Math.abs(l));l=l%n;if(!t.unsigned&&l>=i){return l-n}else if(t.unsigned){if(l<0){l+=n}else if(l===-0){return 0}}return l}}t["void"]=function(){return undefined};t["boolean"]=function(e){return!!e};t["byte"]=createNumberConversion(8,{unsigned:false});t["octet"]=createNumberConversion(8,{unsigned:true});t["short"]=createNumberConversion(16,{unsigned:false});t["unsigned short"]=createNumberConversion(16,{unsigned:true});t["long"]=createNumberConversion(32,{unsigned:false});t["unsigned long"]=createNumberConversion(32,{unsigned:true});t["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});t["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});t["double"]=function(e){const t=+e;if(!Number.isFinite(t)){throw new TypeError("Argument is not a finite floating-point value")}return t};t["unrestricted double"]=function(e){const t=+e;if(isNaN(t)){throw new TypeError("Argument is NaN")}return t};t["float"]=t["double"];t["unrestricted float"]=t["unrestricted double"];t["DOMString"]=function(e,t){if(!t)t={};if(t.treatNullAsEmptyString&&e===null){return""}return String(e)};t["ByteString"]=function(e,t){const r=String(e);let a=undefined;for(let e=0;(a=r.codePointAt(e))!==undefined;++e){if(a>255){throw new TypeError("Argument is not a valid bytestring")}}return r};t["USVString"]=function(e){const t=String(e);const r=t.length;const a=[];for(let e=0;e<r;++e){const n=t.charCodeAt(e);if(n<55296||n>57343){a.push(String.fromCodePoint(n))}else if(56320<=n&&n<=57343){a.push(String.fromCodePoint(65533))}else{if(e===r-1){a.push(String.fromCodePoint(65533))}else{const r=t.charCodeAt(e+1);if(56320<=r&&r<=57343){const t=n&1023;const i=r&1023;a.push(String.fromCodePoint((2<<15)+(2<<9)*t+i));++e}else{a.push(String.fromCodePoint(65533))}}}}return a.join("")};t["Date"]=function(e,t){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};t["RegExp"]=function(e,t){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},7537:(e,t,r)=>{"use strict";const a=r(2158);t.implementation=class URLImpl{constructor(e){const t=e[0];const r=e[1];let n=null;if(r!==undefined){n=a.basicURLParse(r);if(n==="failure"){throw new TypeError("Invalid base URL")}}const i=a.basicURLParse(t,{baseURL:n});if(i==="failure"){throw new TypeError("Invalid URL")}this._url=i}get href(){return a.serializeURL(this._url)}set href(e){const t=a.basicURLParse(e);if(t==="failure"){throw new TypeError("Invalid URL")}this._url=t}get origin(){return a.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){a.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}a.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}a.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return a.serializeHost(e.host)}return a.serializeHost(e.host)+":"+a.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}a.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return a.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}a.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return a.serializeInteger(this._url.port)}set port(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{a.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];a.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const t=this._url;if(e===""){t.query=null;return}const r=e[0]==="?"?e.substring(1):e;t.query="";a.basicURLParse(r,{url:t,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const t=e[0]==="#"?e.substring(1):e;this._url.fragment="";a.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},3394:(e,t,r)=>{"use strict";const a=r(4886);const n=r(3185);const i=r(7537);const o=n.implSymbol;function URL(t){if(!this||this[o]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const r=[];for(let e=0;e<arguments.length&&e<2;++e){r[e]=arguments[e]}r[0]=a["USVString"](r[0]);if(r[1]!==undefined){r[1]=a["USVString"](r[1])}e.exports.setup(this,r)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const t=[];for(let e=0;e<arguments.length&&e<0;++e){t[e]=arguments[e]}return this[o].toJSON.apply(this[o],t)};Object.defineProperty(URL.prototype,"href",{get(){return this[o].href},set(e){e=a["USVString"](e);this[o].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[o].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[o].protocol},set(e){e=a["USVString"](e);this[o].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[o].username},set(e){e=a["USVString"](e);this[o].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[o].password},set(e){e=a["USVString"](e);this[o].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[o].host},set(e){e=a["USVString"](e);this[o].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[o].hostname},set(e){e=a["USVString"](e);this[o].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[o].port},set(e){e=a["USVString"](e);this[o].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[o].pathname},set(e){e=a["USVString"](e);this[o].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[o].search},set(e){e=a["USVString"](e);this[o].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[o].hash},set(e){e=a["USVString"](e);this[o].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[o]instanceof i.implementation},create(e,t){let r=Object.create(URL.prototype);this.setup(r,e,t);return r},setup(e,t,r){if(!r)r={};r.wrapper=e;e[o]=new i.implementation(t,r);e[o][n.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},8665:(e,t,r)=>{"use strict";t.URL=r(3394)["interface"];t.serializeURL=r(2158).serializeURL;t.serializeURLOrigin=r(2158).serializeURLOrigin;t.basicURLParse=r(2158).basicURLParse;t.setTheUsername=r(2158).setTheUsername;t.setThePassword=r(2158).setThePassword;t.serializeHost=r(2158).serializeHost;t.serializeInteger=r(2158).serializeInteger;t.parseURL=r(2158).parseURL},2158:(e,t,r)=>{"use strict";const a=r(5477);const n=r(4256);const i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const o=Symbol("failure");function countSymbols(e){return a.ucs2.decode(e).length}function at(e,t){const r=e[t];return isNaN(r)?undefined:String.fromCodePoint(r)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,t){return isASCIIAlpha(e)&&(t===58||t===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return i[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return i[e]}function percentEncode(e){let t=e.toString(16).toUpperCase();if(t.length===1){t="0"+t}return"%"+t}function utf8PercentEncode(e){const t=new Buffer(e);let r="";for(let e=0;e<t.length;++e){r+=percentEncode(t[e])}return r}function utf8PercentDecode(e){const t=new Buffer(e);const r=[];for(let e=0;e<t.length;++e){if(t[e]!==37){r.push(t[e])}else if(t[e]===37&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])){r.push(parseInt(t.slice(e+1,e+3).toString(),16));e+=2}else{r.push(t[e])}}return new Buffer(r).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const l=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||l.has(e)}const d=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||d.has(e)}function percentEncodeChar(e,t){const r=String.fromCodePoint(e);if(t(e)){return utf8PercentEncode(r)}return r}function parseIPv4Number(e){let t=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);t=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);t=8}if(e===""){return 0}const r=t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(r.test(e)){return o}return parseInt(e,t)}function parseIPv4(e){const t=e.split(".");if(t[t.length-1]===""){if(t.length>1){t.pop()}}if(t.length>4){return e}const r=[];for(const a of t){if(a===""){return e}const t=parseIPv4Number(a);if(t===o){return e}r.push(t)}for(let e=0;e<r.length-1;++e){if(r[e]>255){return o}}if(r[r.length-1]>=Math.pow(256,5-r.length)){return o}let a=r.pop();let n=0;for(const e of r){a+=e*Math.pow(256,3-n);++n}return a}function serializeIPv4(e){let t="";let r=e;for(let e=1;e<=4;++e){t=String(r%256)+t;if(e!==4){t="."+t}r=Math.floor(r/256)}return t}function parseIPv6(e){const t=[0,0,0,0,0,0,0,0];let r=0;let n=null;let i=0;e=a.ucs2.decode(e);if(e[i]===58){if(e[i+1]!==58){return o}i+=2;++r;n=r}while(i<e.length){if(r===8){return o}if(e[i]===58){if(n!==null){return o}++i;++r;n=r;continue}let a=0;let l=0;while(l<4&&isASCIIHex(e[i])){a=a*16+parseInt(at(e,i),16);++i;++l}if(e[i]===46){if(l===0){return o}i-=l;if(r>6){return o}let a=0;while(e[i]!==undefined){let n=null;if(a>0){if(e[i]===46&&a<4){++i}else{return o}}if(!isASCIIDigit(e[i])){return o}while(isASCIIDigit(e[i])){const t=parseInt(at(e,i));if(n===null){n=t}else if(n===0){return o}else{n=n*10+t}if(n>255){return o}++i}t[r]=t[r]*256+n;++a;if(a===2||a===4){++r}}if(a!==4){return o}break}else if(e[i]===58){++i;if(e[i]===undefined){return o}}else if(e[i]!==undefined){return o}t[r]=a;++r}if(n!==null){let e=r-n;r=7;while(r!==0&&e>0){const a=t[n+e-1];t[n+e-1]=t[r];t[r]=a;--r;--e}}else if(n===null&&r!==8){return o}return t}function serializeIPv6(e){let t="";const r=findLongestZeroSequence(e);const a=r.idx;let n=false;for(let r=0;r<=7;++r){if(n&&e[r]===0){continue}else if(n){n=false}if(a===r){const e=r===0?"::":":";t+=e;n=true;continue}t+=e[r].toString(16);if(r!==7){t+=":"}}return t}function parseHost(e,t){if(e[0]==="["){if(e[e.length-1]!=="]"){return o}return parseIPv6(e.substring(1,e.length-1))}if(!t){return parseOpaqueHost(e)}const r=utf8PercentDecode(e);const a=n.toASCII(r,false,n.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(a===null){return o}if(containsForbiddenHostCodePoint(a)){return o}const i=parseIPv4(a);if(typeof i==="number"||i===o){return i}return a}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return o}let t="";const r=a.ucs2.decode(e);for(let e=0;e<r.length;++e){t+=percentEncodeChar(r[e],isC0ControlPercentEncode)}return t}function findLongestZeroSequence(e){let t=null;let r=1;let a=null;let n=0;for(let i=0;i<e.length;++i){if(e[i]!==0){if(n>r){t=a;r=n}a=null;n=0}else{if(a===null){a=i}++n}}if(n>r){t=a;r=n}return{idx:t,len:r}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const t=e.path;if(t.length===0){return}if(e.scheme==="file"&&t.length===1&&isNormalizedWindowsDriveLetter(t[0])){return}t.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,t,r,n,i){this.pointer=0;this.input=e;this.base=t||null;this.encodingOverride=r||"utf-8";this.stateOverride=i;this.url=n;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const l=trimTabAndNewline(this.input);if(l!==this.input){this.parseError=true}this.input=l;this.state=i||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=a.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const t=isNaN(e)?undefined:String.fromCodePoint(e);const r=this["parse "+this.state](e,t);if(!r){break}else if(r===o){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,t){if(isASCIIAlpha(e)){this.buffer+=t.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,t){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=t.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return o}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,t){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const r=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=r}else{this.url.username+=r}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return o}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=t}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,t){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return o}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return o}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=t}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,t){if(isASCIIDigit(e)){this.buffer+=t}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return o}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return o}return true};const u=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!u.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,t){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=t}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,t){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e){if(t[e]<33||t[e]>126||t[e]===34||t[e]===35||t[e]===60||t[e]===62){this.url.query+=percentEncode(t[e])}else{this.url.query+=String.fromCodePoint(t[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=t}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,t){let r=e.scheme+":";if(e.host!==null){r+="//";if(e.username!==""||e.password!==""){r+=e.username;if(e.password!==""){r+=":"+e.password}r+="@"}r+=serializeHost(e.host);if(e.port!==null){r+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){r+="//"}if(e.cannotBeABaseURL){r+=e.path[0]}else{for(const t of e.path){r+="/"+t}}if(e.query!==null){r+="?"+e.query}if(!t&&e.fragment!==null){r+="#"+e.fragment}return r}function serializeOrigin(e){let t=e.scheme+"://";t+=serializeHost(e.host);if(e.port!==null){t+=":"+e.port}return t}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,t){if(t===undefined){t={}}const r=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);if(r.failure){return"failure"}return r.url};e.exports.setTheUsername=function(e,t){e.username="";const r=a.ucs2.decode(t);for(let t=0;t<r.length;++t){e.username+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,t){e.password="";const r=a.ucs2.decode(t);for(let t=0;t<r.length;++t){e.password+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(t,r){if(r===undefined){r={}}return e.exports.basicURLParse(t,{baseURL:r.baseURL,encodingOverride:r.encodingOverride})}},3185:e=>{"use strict";e.exports.mixin=function mixin(e,t){const r=Object.getOwnPropertyNames(t);for(let a=0;a<r.length;++a){Object.defineProperty(e,r[a],Object.getOwnPropertyDescriptor(t,r[a]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},2940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var r=0;r<t.length;r++){t[r]=arguments[r]}var a=e.apply(this,t);var n=t[t.length-1];if(typeof a==="function"&&a!==n){Object.keys(n).forEach((function(e){a[e]=n[e]}))}return a}}},7836:e=>{function repeatChar(e,t){let r="";for(let a=t;a>0;a--){r+=e}return r}function generateStartOfLineIndex(e,t){const r=t.slice(0);r.splice(e-1);return r.join("\n").length+(r.length>0)}function findLineColumn(e,t,r){const a=e.substr(0,r).split("\n").length;const n=generateStartOfLineIndex(a,t);const i=r-n;return{line:a,col:i}}e.exports=function annotate(e,t,r){const a=e.split("\n");return t.map((t=>{const n=findLineColumn(e,a,t.index);let i=0;if(n.col>25){i=n.col-25}if(r){return{reason:t.reason,line:n.line,col:n.col}}const o=a[n.line-1].substr(i,80);return[o,repeatChar(" ",n.col-i)+repeatChar("^",t.offset),`${t.reason} on line ${n.line} at column ${n.col}`].join("\n")}))}},6604:e=>{const t=new RegExp("(\\s*)([^\\s]+)","gi");const r=/\w+/;e.exports=function lexicalIllusions(e){const a=[];let n="";let i;while(i=t.exec(e)){if(r.test(i[2])&&i[2].toLowerCase()===n){a.push({index:i.index+i[1].length,offset:i[2].length})}n=i[2].toLowerCase()}return a}},609:e=>{const t=new RegExp("([^\n\\.;!?]+)([\\.;!?]+)","gi");const r=new RegExp("^(\\s)*so\\b[\\s\\S]","i");e.exports=function startsWithSo(e){const a=[];let n;let i;while(n=t.exec(e)){if(i=r.exec(n[1])){a.push({index:n.index+(i[1]||"").length,offset:2})}}return a}},4228:e=>{const t=new RegExp("([^\n\\.;!?]+)([\\.;!?]+)","gi");const r=new RegExp("^(\\s)*there\\b\\s(is|are)\\b","i");e.exports=function startsWithThereIs(e){const a=[];let n;let i;while(n=t.exec(e)){if(i=r.exec(n[1])){a.push({index:n.index+(i[1]||"").length,offset:i[0].length-(i[1]||"").length})}}return a}},311:(e,t,r)=>{const a=r(6862);const n=r(4464);const i=r(9047);const o=r(4530);const l=r(7743);const d=r(6702);const u=r(6604);const c=r(609);const h=r(4228);const g={weasel:{fn:a,explanation:"is a weasel word"},illusion:{fn:u,explanation:"is repeated"},so:{fn:c,explanation:"adds no meaning"},thereIs:{fn:h,explanation:"is unnecessary verbiage"},passive:{fn:n,explanation:"may be passive voice"},adverb:{fn:i,explanation:"can weaken meaning"},tooWordy:{fn:o,explanation:"is wordy or unneeded"},cliches:{fn:l,explanation:"is a cliche"},eprime:{fn:d,explanation:"is a form of 'to be'"}};const v={eprime:false};function filter(e,t,r=[]){const a=r.reduce(((t,r)=>{let a=e.indexOf(r);while(a>0){t.push({from:a,to:a+r.length});a=e.indexOf(r,a+1)}return t}),[]);return t.reduce(((e,t)=>{if(!a.find((e=>{const r=t.index;const a=t.index+t.offset;return r<=e.from&&a>=e.to||r>=e.from&&r<=e.to||a>=e.from&&a<=e.to}))){e.push(t)}return e}),[])}function dedup(e){const t={};return e.reduce(((e,r)=>{const a=`${r.index}:${r.offset}`;if(!t[a]){t[a]=r;e.push(r)}else{t[a].reason+=` and ${r.reason.substring(r.offset+3)}`}return e}),[])}function reasonable(e,t){return function reasonableSuggestion(r){r.reason=`"${e.substr(r.index,r.offset)}" ${t}`;return r}}e.exports=function writeGood(e,t={}){const r={};const a=Object.assign({},v,t);Object.keys(a).forEach((e=>{if(e!=="checks"){r[e]=a[e]}}));const n=t.checks||g;let i=[];Object.keys(n).forEach((t=>{if(r[t]!==false){i=i.concat(n[t].fn(e).map(reasonable(e,n[t].explanation)))}}));const o=filter(e,i,t.whitelist);return dedup(o).sort(((e,t)=>e.index<t.index?-1:1))};e.exports.annotate=r(7836)},3367:(e,t,r)=>{e.exports=require(r.ab+"build/Release/spellchecker.node")},2877:module=>{module.exports=eval("require")("encoding")},9491:e=>{"use strict";e.exports=require("assert")},6113:e=>{"use strict";e.exports=require("crypto")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},5687:e=>{"use strict";e.exports=require("https")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},4404:e=>{"use strict";e.exports=require("tls")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")},1322:(e,t,r)=>{"use strict";var a;a={value:true};t.rf=codeFrameColumns;a=_default;var n=r(7654);let i=false;function getDefs(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}const o=/\r\n|[\n\r\u2028\u2029]/;function getMarkerLines(e,t,r){const a=Object.assign({column:0,line:-1},e.start);const n=Object.assign({},a,e.end);const{linesAbove:i=2,linesBelow:o=3}=r||{};const l=a.line;const d=a.column;const u=n.line;const c=n.column;let h=Math.max(l-(i+1),0);let g=Math.min(t.length,u+o);if(l===-1){h=0}if(u===-1){g=t.length}const v=u-l;const w={};if(v){for(let e=0;e<=v;e++){const r=e+l;if(!d){w[r]=true}else if(e===0){const e=t[r-1].length;w[r]=[d,e-d+1]}else if(e===v){w[r]=[0,c]}else{const a=t[r-e].length;w[r]=[0,a]}}}else{if(d===c){if(d){w[l]=[d,0]}else{w[l]=true}}else{w[l]=[d,c-d]}}return{start:h,end:g,markerLines:w}}function codeFrameColumns(e,t,r={}){const a=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r);const i=(0,n.getChalk)(r);const l=getDefs(i);const maybeHighlight=(e,t)=>a?e(t):t;const d=e.split(o);const{start:u,end:c,markerLines:h}=getMarkerLines(t,d,r);const g=t.start&&typeof t.start.column==="number";const v=String(c).length;const w=a?(0,n.default)(e,r):e;let b=w.split(o,c).slice(u,c).map(((e,t)=>{const a=u+1+t;const n=` ${a}`.slice(-v);const i=` ${n} |`;const o=h[a];const d=!h[a+1];if(o){let t="";if(Array.isArray(o)){const a=e.slice(0,Math.max(o[0]-1,0)).replace(/[^\t]/g," ");const n=o[1]||1;t=["\n ",maybeHighlight(l.gutter,i.replace(/\d/g," "))," ",a,maybeHighlight(l.marker,"^").repeat(n)].join("");if(d&&r.message){t+=" "+maybeHighlight(l.message,r.message)}}return[maybeHighlight(l.marker,">"),maybeHighlight(l.gutter,i),e.length>0?` ${e}`:"",t].join("")}else{return` ${maybeHighlight(l.gutter,i)}${e.length>0?` ${e}`:""}`}})).join("\n");if(r.message&&!g){b=`${" ".repeat(v+1)}${r.message}\n${b}`}if(a){return i.reset(b)}else{return b}}function _default(e,t,r,a={}){if(!i){i=true;const e="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(process.emitWarning){process.emitWarning(e,"DeprecationWarning")}else{const t=new Error(e);t.name="DeprecationWarning";console.warn(new Error(e))}}r=Math.max(r,0);const n={start:{column:r,line:t}};return codeFrameColumns(e,n,a)}},8875:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isIdentifierChar=isIdentifierChar;t.isIdentifierName=isIdentifierName;t.isIdentifierStart=isIdentifierStart;let r="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";let a="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const n=new RegExp("["+r+"]");const i=new RegExp("["+r+a+"]");r=a=null;const o=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];const l=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];function isInAstralSet(e,t){let r=65536;for(let a=0,n=t.length;a<n;a+=2){r+=t[a];if(r>e)return false;r+=t[a+1];if(r>=e)return true}return false}function isIdentifierStart(e){if(e<65)return e===36;if(e<=90)return true;if(e<97)return e===95;if(e<=122)return true;if(e<=65535){return e>=170&&n.test(String.fromCharCode(e))}return isInAstralSet(e,o)}function isIdentifierChar(e){if(e<48)return e===36;if(e<58)return true;if(e<65)return false;if(e<=90)return true;if(e<97)return e===95;if(e<=122)return true;if(e<=65535){return e>=170&&i.test(String.fromCharCode(e))}return isInAstralSet(e,o)||isInAstralSet(e,l)}function isIdentifierName(e){let t=true;for(let r=0;r<e.length;r++){let a=e.charCodeAt(r);if((a&64512)===55296&&r+1<e.length){const t=e.charCodeAt(++r);if((t&64512)===56320){a=65536+((a&1023)<<10)+(t&1023)}}if(t){t=false;if(!isIdentifierStart(a)){return false}}else if(!isIdentifierChar(a)){return false}}return!t}},2738:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"isIdentifierChar",{enumerable:true,get:function(){return a.isIdentifierChar}});Object.defineProperty(t,"isIdentifierName",{enumerable:true,get:function(){return a.isIdentifierName}});Object.defineProperty(t,"isIdentifierStart",{enumerable:true,get:function(){return a.isIdentifierStart}});Object.defineProperty(t,"isKeyword",{enumerable:true,get:function(){return n.isKeyword}});Object.defineProperty(t,"isReservedWord",{enumerable:true,get:function(){return n.isReservedWord}});Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:true,get:function(){return n.isStrictBindOnlyReservedWord}});Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:true,get:function(){return n.isStrictBindReservedWord}});Object.defineProperty(t,"isStrictReservedWord",{enumerable:true,get:function(){return n.isStrictReservedWord}});var a=r(8875);var n=r(17)},17:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isKeyword=isKeyword;t.isReservedWord=isReservedWord;t.isStrictBindOnlyReservedWord=isStrictBindOnlyReservedWord;t.isStrictBindReservedWord=isStrictBindReservedWord;t.isStrictReservedWord=isStrictReservedWord;const r={keyword:["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"],strict:["implements","interface","let","package","private","protected","public","static","yield"],strictBind:["eval","arguments"]};const a=new Set(r.keyword);const n=new Set(r.strict);const i=new Set(r.strictBind);function isReservedWord(e,t){return t&&e==="await"||e==="enum"}function isStrictReservedWord(e,t){return isReservedWord(e,t)||n.has(e)}function isStrictBindOnlyReservedWord(e){return i.has(e)}function isStrictBindReservedWord(e,t){return isStrictReservedWord(e,t)||isStrictBindOnlyReservedWord(e)}function isKeyword(e){return a.has(e)}},7654:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=highlight;t.getChalk=getChalk;t.shouldHighlight=shouldHighlight;var a=r(1531);var n=r(2738);var i=r(8707);const o=new Set(["as","async","from","get","of","set"]);function getDefs(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}const l=/\r\n|[\n\r\u2028\u2029]/;const d=/^[()[\]{}]$/;let u;{const e=/^[a-z][\w-]*$/i;const getTokenType=function(t,r,a){if(t.type==="name"){if((0,n.isKeyword)(t.value)||(0,n.isStrictReservedWord)(t.value,true)||o.has(t.value)){return"keyword"}if(e.test(t.value)&&(a[r-1]==="<"||a.slice(r-2,r)=="</")){return"jsxIdentifier"}if(t.value[0]!==t.value[0].toLowerCase()){return"capitalized"}}if(t.type==="punctuator"&&d.test(t.value)){return"bracket"}if(t.type==="invalid"&&(t.value==="@"||t.value==="#")){return"punctuator"}return t.type};u=function*(e){let t;while(t=a.default.exec(e)){const r=a.matchToToken(t);yield{type:getTokenType(r,t.index,e),value:r.value}}}}function highlightTokens(e,t){let r="";for(const{type:a,value:n}of u(t)){const t=e[a];if(t){r+=n.split(l).map((e=>t(e))).join("\n")}else{r+=n}}return r}function shouldHighlight(e){return!!i.supportsColor||e.forceColor}function getChalk(e){return e.forceColor?new i.constructor({enabled:true,level:1}):i}function highlight(e,t={}){if(e!==""&&shouldHighlight(t)){const r=getChalk(t);const a=getDefs(r);return highlightTokens(a,e)}else{return e}}},4623:(e,t,r)=>{"use strict";r.r(t);r.d(t,{JSONError:()=>u,default:()=>parseJson});var a=r(3505);var n=r(9062);var i=r(1322);var o="\n";var l="\r";var d=function(){function LinesAndColumns(e){this.length=e.length;var t=[0];for(var r=0;r<e.length;){switch(e[r]){case o:r+=o.length;t.push(r);break;case l:r+=l.length;if(e[r]===o){r+=o.length}t.push(r);break;default:r++;break}}this.offsets=t}LinesAndColumns.prototype.locationForIndex=function(e){if(e<0||e>this.length){return null}var t=0;var r=this.offsets;while(r[t+1]<=e){t++}var a=e-r[t];return{line:t,column:a}};LinesAndColumns.prototype.indexForLocation=function(e){var t=e.line,r=e.column;if(t<0||t>=this.offsets.length){return null}if(r<0||r>this.lengthOfLine(t)){return null}return this.offsets[t]+r};LinesAndColumns.prototype.lengthOfLine=function(e){var t=this.offsets[e];var r=e===this.offsets.length-1?this.length:this.offsets[e+1];return r-t};return LinesAndColumns}();const u=a("JSONError",{fileName:a.append("in %s"),codeFrame:a.append("\n\n%s\n")});function parseJson(e,t,r){if(typeof t==="string"){r=t;t=null}try{try{return JSON.parse(e,t)}catch(r){n(e,t);throw r}}catch(t){t.message=t.message.replace(/\n/g,"");const a=t.message.match(/in JSON at position (\d+) while parsing/);const n=new u(t);if(r){n.fileName=r}if(a&&a.length>0){const t=new d(e);const r=Number(a[1]);const o=t.locationForIndex(r);const l=(0,i.rf)(e,{start:{line:o.line+1,column:o.column+1}},{highlightCode:true});n.codeFrame=l}throw n}}},4482:(e,t,r)=>{"use strict";r.r(t);r.d(t,{default:()=>stripJsonComments});const a=Symbol("singleComment");const n=Symbol("multiComment");const stripWithoutWhitespace=()=>"";const stripWithWhitespace=(e,t,r)=>e.slice(t,r).replace(/\S/g," ");const isEscaped=(e,t)=>{let r=t-1;let a=0;while(e[r]==="\\"){r-=1;a+=1}return Boolean(a%2)};function stripJsonComments(e,{whitespace:t=true,trailingCommas:r=false}={}){if(typeof e!=="string"){throw new TypeError(`Expected argument \`jsonString\` to be a \`string\`, got \`${typeof e}\``)}const i=t?stripWithWhitespace:stripWithoutWhitespace;let o=false;let l=false;let d=0;let u="";let c="";let h=-1;for(let t=0;t<e.length;t++){const g=e[t];const v=e[t+1];if(!l&&g==='"'){const r=isEscaped(e,t);if(!r){o=!o}}if(o){continue}if(!l&&g+v==="//"){u+=e.slice(d,t);d=t;l=a;t++}else if(l===a&&g+v==="\r\n"){t++;l=false;u+=i(e,d,t);d=t;continue}else if(l===a&&g==="\n"){l=false;u+=i(e,d,t);d=t}else if(!l&&g+v==="/*"){u+=e.slice(d,t);d=t;l=n;t++;continue}else if(l===n&&g+v==="*/"){t++;l=false;u+=i(e,d,t+1);d=t+1;continue}else if(r&&!l){if(h!==-1){if(g==="}"||g==="]"){u+=e.slice(d,t);c+=i(u,0,1)+u.slice(1);u="";d=t;h=-1}else if(g!==" "&&g!=="\t"&&g!=="\r"&&g!=="\n"){u+=e.slice(d,t);d=t;h=-1}}else if(g===","){c+=u+e.slice(d,t);u="";d=t;h=t}}}return c+u+(l?i(e.slice(d)):e.slice(d))}},2020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};var __webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var r=__webpack_module_cache__[e]={id:e,loaded:false,exports:{}};var a=true;try{__webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__);a=false}finally{if(a)delete __webpack_module_cache__[e]}r.loaded=true;return r.exports}(()=>{__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e["default"]:()=>e;__webpack_require__.d(t,{a:t});return t}})();(()=>{__webpack_require__.d=(e,t)=>{for(var r in t){if(__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)){Object.defineProperty(e,r,{enumerable:true,get:t[r]})}}}})();(()=>{__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__webpack_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();(()=>{__webpack_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __webpack_require__!=="undefined")__webpack_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{run:()=>run});var e={};__webpack_require__.r(e);__webpack_require__.d(e,{attentionMarkers:()=>Ae,contentInitial:()=>be,disable:()=>Se,document:()=>we,flow:()=>ke,flowInitial:()=>ye,insideSpan:()=>_e,string:()=>Ee,text:()=>De});var t=__webpack_require__(2186);var r=__webpack_require__(3973);var a=__webpack_require__.n(r);var n=__webpack_require__(9268);var i=__webpack_require__.n(n);var o=__webpack_require__(5438);const l=/^@@ -([0-9]*),?\S* \+([0-9]*),?/;function tokenlize(e){const t=[];let r;e.forEach((e=>{if(e.startsWith("@@")){const[,a,n]=e.match(l);r={deletedStartLineNumber:parseInt(a,10),addedStartLineNumber:parseInt(n,10),lines:[]};t.push(r)}else{r.lines.push(e)}}));return t}function parsePatch(e){const t=e.split("\n");const r=[];tokenlize(t).forEach((e=>{let t=e.addedStartLineNumber;let a=e.deletedStartLineNumber;e.lines.forEach((e=>{if(e.startsWith("+")){r.push({type:"added",line:e.substring(1),lineNumber:t});t+=1}else if(e.startsWith("-")){r.push({type:"deleted",line:e.substring(1),lineNumber:a});a+=1}else{t+=1;a+=1}}))}));return r}var d=__webpack_require__(5625);function stringifyPosition(e){if(!e||typeof e!=="object"){return""}if("position"in e||"type"in e){return position(e.position)}if("start"in e||"end"in e){return position(e)}if("line"in e||"column"in e){return point(e)}return""}function point(e){return index(e&&e.line)+":"+index(e&&e.column)}function position(e){return point(e&&e.start)+"-"+point(e&&e.end)}function index(e){return e&&typeof e==="number"?e:1}class VFileMessage extends Error{constructor(e,t,r){const a=[null,null];let n={start:{line:null,column:null},end:{line:null,column:null}};super();if(typeof t==="string"){r=t;t=undefined}if(typeof r==="string"){const e=r.indexOf(":");if(e===-1){a[1]=r}else{a[0]=r.slice(0,e);a[1]=r.slice(e+1)}}if(t){if("type"in t||"position"in t){if(t.position){n=t.position}}else if("start"in t||"end"in t){n=t}else if("line"in t||"column"in t){n.start=t}}this.name=stringifyPosition(t)||"1:1";this.message=typeof e==="object"?e.message:e;this.stack="";if(typeof e==="object"&&e.stack){this.stack=e.stack}this.reason=this.message;this.fatal;this.line=n.start.line;this.column=n.start.column;this.position=n;this.source=a[0];this.ruleId=a[1];this.file;this.actual;this.expected;this.url;this.note}}VFileMessage.prototype.file="";VFileMessage.prototype.name="";VFileMessage.prototype.reason="";VFileMessage.prototype.message="";VFileMessage.prototype.stack="";VFileMessage.prototype.fatal=null;VFileMessage.prototype.column=null;VFileMessage.prototype.line=null;VFileMessage.prototype.source=null;VFileMessage.prototype.ruleId=null;VFileMessage.prototype.position=null;var u=__webpack_require__(1017);const c=require("process");function isUrl(e){return e!==null&&typeof e==="object"&&e.href&&e.origin}var h=__webpack_require__(7310);const g=["history","path","basename","stem","extname","dirname"];class VFile{constructor(e){let t;if(!e){t={}}else if(typeof e==="string"||d(e)){t={value:e}}else if(isUrl(e)){t={path:e}}else{t=e}this.data={};this.messages=[];this.history=[];this.cwd=c.cwd();this.value;this.stored;this.result;this.map;let r=-1;while(++r<g.length){const e=g[r];if(e in t&&t[e]!==undefined){this[e]=e==="history"?[...t[e]]:t[e]}}let a;for(a in t){if(!g.includes(a))this[a]=t[a]}}get path(){return this.history[this.history.length-1]}set path(e){if(isUrl(e)){e=(0,h.fileURLToPath)(e)}assertNonEmpty(e,"path");if(this.path!==e){this.history.push(e)}}get dirname(){return typeof this.path==="string"?u.dirname(this.path):undefined}set dirname(e){assertPath(this.basename,"dirname");this.path=u.join(e||"",this.basename)}get basename(){return typeof this.path==="string"?u.basename(this.path):undefined}set basename(e){assertNonEmpty(e,"basename");assertPart(e,"basename");this.path=u.join(this.dirname||"",e)}get extname(){return typeof this.path==="string"?u.extname(this.path):undefined}set extname(e){assertPart(e,"extname");assertPath(this.dirname,"extname");if(e){if(e.charCodeAt(0)!==46){throw new Error("`extname` must start with `.`")}if(e.includes(".",1)){throw new Error("`extname` cannot contain multiple dots")}}this.path=u.join(this.dirname,this.stem+(e||""))}get stem(){return typeof this.path==="string"?u.basename(this.path,this.extname):undefined}set stem(e){assertNonEmpty(e,"stem");assertPart(e,"stem");this.path=u.join(this.dirname||"",e+(this.extname||""))}toString(e){return(this.value||"").toString(e)}message(e,t,r){const a=new VFileMessage(e,t,r);if(this.path){a.name=this.path+":"+a.name;a.file=this.path}a.fatal=false;this.messages.push(a);return a}info(e,t,r){const a=this.message(e,t,r);a.fatal=null;return a}fail(e,t,r){const a=this.message(e,t,r);a.fatal=true;throw a}}function assertPart(e,t){if(e&&e.includes(u.sep)){throw new Error("`"+t+"` cannot be a path: did not expect `"+u.sep+"`")}}function assertNonEmpty(e,t){if(!e){throw new Error("`"+t+"` cannot be empty")}}function assertPath(e,t){if(!e){throw new Error("Setting `"+t+"` requires `path` to be set too")}}function bail(e){if(e){throw e}}var v=__webpack_require__(8171);function isPlainObject(e){if(typeof e!=="object"||e===null){return false}const t=Object.getPrototypeOf(e);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function trough(){const e=[];const t={run:run,use:use};return t;function run(...t){let r=-1;const a=t.pop();if(typeof a!=="function"){throw new TypeError("Expected function as last argument, not "+a)}next(null,...t);function next(n,...i){const o=e[++r];let l=-1;if(n){a(n);return}while(++l<t.length){if(i[l]===null||i[l]===undefined){i[l]=t[l]}}t=i;if(o){wrap(o,next)(...i)}else{a(null,...i)}}}function use(r){if(typeof r!=="function"){throw new TypeError("Expected `middelware` to be a function, not "+r)}e.push(r);return t}}function wrap(e,t){let r;return wrapped;function wrapped(...t){const a=e.length>t.length;let n;if(a){t.push(done)}try{n=e.apply(this,t)}catch(e){const t=e;if(a&&r){throw t}return done(t)}if(!a){if(n instanceof Promise){n.then(then,done)}else if(n instanceof Error){done(n)}else{then(n)}}}function done(e,...a){if(!r){r=true;t(e,...a)}}function then(e){done(null,e)}}const w=base().freeze();const b={}.hasOwnProperty;function base(){const e=trough();const t=[];let r={};let a;let n=-1;processor.data=data;processor.Parser=undefined;processor.Compiler=undefined;processor.freeze=freeze;processor.attachers=t;processor.use=use;processor.parse=parse;processor.stringify=stringify;processor.run=run;processor.runSync=runSync;processor.process=process;processor.processSync=processSync;return processor;function processor(){const e=base();let a=-1;while(++a<t.length){e.use(...t[a])}e.data(v(true,{},r));return e}function data(e,t){if(typeof e==="string"){if(arguments.length===2){assertUnfrozen("data",a);r[e]=t;return processor}return b.call(r,e)&&r[e]||null}if(e){assertUnfrozen("data",a);r=e;return processor}return r}function freeze(){if(a){return processor}while(++n<t.length){const[r,...a]=t[n];if(a[0]===false){continue}if(a[0]===true){a[0]=undefined}const i=r.call(processor,...a);if(typeof i==="function"){e.use(i)}}a=true;n=Number.POSITIVE_INFINITY;return processor}function use(e,...n){let i;assertUnfrozen("use",a);if(e===null||e===undefined){}else if(typeof e==="function"){addPlugin(e,...n)}else if(typeof e==="object"){if(Array.isArray(e)){addList(e)}else{addPreset(e)}}else{throw new TypeError("Expected usable value, not `"+e+"`")}if(i){r.settings=Object.assign(r.settings||{},i)}return processor;function add(e){if(typeof e==="function"){addPlugin(e)}else if(typeof e==="object"){if(Array.isArray(e)){const[t,...r]=e;addPlugin(t,...r)}else{addPreset(e)}}else{throw new TypeError("Expected usable value, not `"+e+"`")}}function addPreset(e){addList(e.plugins);if(e.settings){i=Object.assign(i||{},e.settings)}}function addList(e){let t=-1;if(e===null||e===undefined){}else if(Array.isArray(e)){while(++t<e.length){const r=e[t];add(r)}}else{throw new TypeError("Expected a list of plugins, not `"+e+"`")}}function addPlugin(e,r){let a=-1;let n;while(++a<t.length){if(t[a][0]===e){n=t[a];break}}if(n){if(isPlainObject(n[1])&&isPlainObject(r)){r=v(true,n[1],r)}n[1]=r}else{t.push([...arguments])}}}function parse(e){processor.freeze();const t=vfile(e);const r=processor.Parser;assertParser("parse",r);if(newable(r,"parse")){return new r(String(t),t).parse()}return r(String(t),t)}function stringify(e,t){processor.freeze();const r=vfile(t);const a=processor.Compiler;assertCompiler("stringify",a);assertNode(e);if(newable(a,"compile")){return new a(e,r).compile()}return a(e,r)}function run(t,r,a){assertNode(t);processor.freeze();if(!a&&typeof r==="function"){a=r;r=undefined}if(!a){return new Promise(executor)}executor(null,a);function executor(n,i){e.run(t,vfile(r),done);function done(e,r,o){r=r||t;if(e){i(e)}else if(n){n(r)}else{a(null,r,o)}}}}function runSync(e,t){let r;let a;processor.run(e,t,done);assertDone("runSync","run",a);return r;function done(e,t){bail(e);r=t;a=true}}function process(e,t){processor.freeze();assertParser("process",processor.Parser);assertCompiler("process",processor.Compiler);if(!t){return new Promise(executor)}executor(null,t);function executor(r,a){const n=vfile(e);processor.run(processor.parse(n),n,((e,t,r)=>{if(e||!t||!r){done(e)}else{const a=processor.stringify(t,r);if(a===undefined||a===null){}else if(looksLikeAVFileValue(a)){r.value=a}else{r.result=a}done(e,r)}}));function done(e,n){if(e||!n){a(e)}else if(r){r(n)}else{t(null,n)}}}}function processSync(e){let t;processor.freeze();assertParser("processSync",processor.Parser);assertCompiler("processSync",processor.Compiler);const r=vfile(e);processor.process(r,done);assertDone("processSync","process",t);return r;function done(e){t=true;bail(e)}}}function newable(e,t){return typeof e==="function"&&e.prototype&&(keys(e.prototype)||t in e.prototype)}function keys(e){let t;for(t in e){if(b.call(e,t)){return true}}return false}function assertParser(e,t){if(typeof t!=="function"){throw new TypeError("Cannot `"+e+"` without `Parser`")}}function assertCompiler(e,t){if(typeof t!=="function"){throw new TypeError("Cannot `"+e+"` without `Compiler`")}}function assertUnfrozen(e,t){if(t){throw new Error("Cannot call `"+e+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}}function assertNode(e){if(!isPlainObject(e)||typeof e.type!=="string"){throw new TypeError("Expected node, got `"+e+"`")}}function assertDone(e,t,r){if(!r){throw new Error("`"+e+"` finished async. Use `"+t+"` instead")}}function vfile(e){return looksLikeAVFile(e)?e:new VFile(e)}function looksLikeAVFile(e){return Boolean(e&&typeof e==="object"&&"message"in e&&"messages"in e)}function looksLikeAVFileValue(e){return typeof e==="string"||d(e)}function mdast_util_to_string_toString(e,t){var{includeImageAlt:r=true}=t||{};return one(e,r)}function one(e,t){return e&&typeof e==="object"&&(e.value||(t?e.alt:"")||"children"in e&&mdast_util_to_string_all(e.children,t)||Array.isArray(e)&&mdast_util_to_string_all(e,t))||""}function mdast_util_to_string_all(e,t){var r=[];var a=-1;while(++a<e.length){r[a]=one(e[a],t)}return r.join("")}function splice(e,t,r,a){const n=e.length;let i=0;let o;if(t<0){t=-t>n?0:n+t}else{t=t>n?n:t}r=r>0?r:0;if(a.length<1e4){o=Array.from(a);o.unshift(t,r);[].splice.apply(e,o)}else{if(r)[].splice.apply(e,[t,r]);while(i<a.length){o=a.slice(i,i+1e4);o.unshift(t,0);[].splice.apply(e,o);i+=1e4;t+=1e4}}}function push(e,t){if(e.length>0){splice(e,e.length,0,t);return e}return t}const y={}.hasOwnProperty;function combineExtensions(e){const t={};let r=-1;while(++r<e.length){syntaxExtension(t,e[r])}return t}function syntaxExtension(e,t){let r;for(r in t){const a=y.call(e,r)?e[r]:undefined;const n=a||(e[r]={});const i=t[r];let o;for(o in i){if(!y.call(n,o))n[o]=[];const e=i[o];constructs(n[o],Array.isArray(e)?e:e?[e]:[])}}}function constructs(e,t){let r=-1;const a=[];while(++r<t.length){(t[r].add==="after"?e:a).push(t[r])}splice(e,0,0,a)}function micromark_util_combine_extensions_combineHtmlExtensions(e){const t={};let r=-1;while(++r<e.length){htmlExtension(t,e[r])}return t}function htmlExtension(e,t){let r;for(r in t){const a=y.call(e,r)?e[r]:undefined;const n=a||(e[r]={});const i=t[r];let o;if(i){for(o in i){n[o]=i[o]}}}}const k=/[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;const E=regexCheck(/[A-Za-z]/);const D=regexCheck(/\d/);const _=regexCheck(/[\dA-Fa-f]/);const A=regexCheck(/[\dA-Za-z]/);const S=regexCheck(/[!-/:-@[-`{-~]/);const x=regexCheck(/[#-'*+\--9=?A-Z^-~]/);function asciiControl(e){return e!==null&&(e<32||e===127)}function markdownLineEndingOrSpace(e){return e!==null&&(e<0||e===32)}function markdownLineEnding(e){return e!==null&&e<-2}function markdownSpace(e){return e===-2||e===-1||e===32}const C=regexCheck(/\s/);const T=regexCheck(k);function regexCheck(e){return check;function check(t){return t!==null&&e.test(String.fromCharCode(t))}}function factorySpace(e,t,r,a){const n=a?a-1:Number.POSITIVE_INFINITY;let i=0;return start;function start(a){if(markdownSpace(a)){e.enter(r);return prefix(a)}return t(a)}function prefix(a){if(markdownSpace(a)&&i++<n){e.consume(a);return prefix}e.exit(r);return t(a)}}const F={tokenize:initializeContent};function initializeContent(e){const t=e.attempt(this.parser.constructs.contentInitial,afterContentStartConstruct,paragraphInitial);let r;return t;function afterContentStartConstruct(r){if(r===null){e.consume(r);return}e.enter("lineEnding");e.consume(r);e.exit("lineEnding");return factorySpace(e,t,"linePrefix")}function paragraphInitial(t){e.enter("paragraph");return lineStart(t)}function lineStart(t){const a=e.enter("chunkText",{contentType:"text",previous:r});if(r){r.next=a}r=a;return data(t)}function data(t){if(t===null){e.exit("chunkText");e.exit("paragraph");e.consume(t);return}if(markdownLineEnding(t)){e.consume(t);e.exit("chunkText");return lineStart}e.consume(t);return data}}const O={tokenize:initializeDocument};const P={tokenize:tokenizeContainer};function initializeDocument(e){const t=this;const r=[];let a=0;let n;let i;let o;return start;function start(n){if(a<r.length){const i=r[a];t.containerState=i[1];return e.attempt(i[0].continuation,documentContinue,checkNewContainers)(n)}return checkNewContainers(n)}function documentContinue(e){a++;if(t.containerState._closeFlow){t.containerState._closeFlow=undefined;if(n){closeFlow()}const r=t.events.length;let i=r;let o;while(i--){if(t.events[i][0]==="exit"&&t.events[i][1].type==="chunkFlow"){o=t.events[i][1].end;break}}exitContainers(a);let l=r;while(l<t.events.length){t.events[l][1].end=Object.assign({},o);l++}splice(t.events,i+1,0,t.events.slice(r));t.events.length=l;return checkNewContainers(e)}return start(e)}function checkNewContainers(i){if(a===r.length){if(!n){return documentContinued(i)}if(n.currentConstruct&&n.currentConstruct.concrete){return flowStart(i)}t.interrupt=Boolean(n.currentConstruct&&!n._gfmTableDynamicInterruptHack)}t.containerState={};return e.check(P,thereIsANewContainer,thereIsNoNewContainer)(i)}function thereIsANewContainer(e){if(n)closeFlow();exitContainers(a);return documentContinued(e)}function thereIsNoNewContainer(e){t.parser.lazy[t.now().line]=a!==r.length;o=t.now().offset;return flowStart(e)}function documentContinued(r){t.containerState={};return e.attempt(P,containerContinue,flowStart)(r)}function containerContinue(e){a++;r.push([t.currentConstruct,t.containerState]);return documentContinued(e)}function flowStart(r){if(r===null){if(n)closeFlow();exitContainers(0);e.consume(r);return}n=n||t.parser.flow(t.now());e.enter("chunkFlow",{contentType:"flow",previous:i,_tokenizer:n});return flowContinue(r)}function flowContinue(r){if(r===null){writeToChild(e.exit("chunkFlow"),true);exitContainers(0);e.consume(r);return}if(markdownLineEnding(r)){e.consume(r);writeToChild(e.exit("chunkFlow"));a=0;t.interrupt=undefined;return start}e.consume(r);return flowContinue}function writeToChild(e,r){const l=t.sliceStream(e);if(r)l.push(null);e.previous=i;if(i)i.next=e;i=e;n.defineSkip(e.start);n.write(l);if(t.parser.lazy[e.start.line]){let e=n.events.length;while(e--){if(n.events[e][1].start.offset<o&&(!n.events[e][1].end||n.events[e][1].end.offset>o)){return}}const r=t.events.length;let i=r;let l;let d;while(i--){if(t.events[i][0]==="exit"&&t.events[i][1].type==="chunkFlow"){if(l){d=t.events[i][1].end;break}l=true}}exitContainers(a);e=r;while(e<t.events.length){t.events[e][1].end=Object.assign({},d);e++}splice(t.events,i+1,0,t.events.slice(r));t.events.length=e}}function exitContainers(a){let n=r.length;while(n-- >a){const a=r[n];t.containerState=a[1];a[0].exit.call(t,e)}r.length=a}function closeFlow(){n.write([null]);i=undefined;n=undefined;t.containerState._closeFlow=undefined}}function tokenizeContainer(e,t,r){return factorySpace(e,e.attempt(this.parser.constructs.document,t,r),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?undefined:4)}const L={tokenize:tokenizeBlankLine,partial:true};function tokenizeBlankLine(e,t,r){return factorySpace(e,afterWhitespace,"linePrefix");function afterWhitespace(e){return e===null||markdownLineEnding(e)?t(e):r(e)}}function subtokenize(e){const t={};let r=-1;let a;let n;let i;let o;let l;let d;let u;while(++r<e.length){while(r in t){r=t[r]}a=e[r];if(r&&a[1].type==="chunkFlow"&&e[r-1][1].type==="listItemPrefix"){d=a[1]._tokenizer.events;i=0;if(i<d.length&&d[i][1].type==="lineEndingBlank"){i+=2}if(i<d.length&&d[i][1].type==="content"){while(++i<d.length){if(d[i][1].type==="content"){break}if(d[i][1].type==="chunkText"){d[i][1]._isInFirstContentOfListItem=true;i++}}}}if(a[0]==="enter"){if(a[1].contentType){Object.assign(t,subcontent(e,r));r=t[r];u=true}}else if(a[1]._container){i=r;n=undefined;while(i--){o=e[i];if(o[1].type==="lineEnding"||o[1].type==="lineEndingBlank"){if(o[0]==="enter"){if(n){e[n][1].type="lineEndingBlank"}o[1].type="lineEnding";n=i}}else{break}}if(n){a[1].end=Object.assign({},e[n][1].start);l=e.slice(n,r);l.unshift(a);splice(e,n,r-n+1,l)}}}return!u}function subcontent(e,t){const r=e[t][1];const a=e[t][2];let n=t-1;const i=[];const o=r._tokenizer||a.parser[r.contentType](r.start);const l=o.events;const d=[];const u={};let c;let h;let g=-1;let v=r;let w=0;let b=0;const y=[b];while(v){while(e[++n][1]!==v){}i.push(n);if(!v._tokenizer){c=a.sliceStream(v);if(!v.next){c.push(null)}if(h){o.defineSkip(v.start)}if(v._isInFirstContentOfListItem){o._gfmTasklistFirstContentOfListItem=true}o.write(c);if(v._isInFirstContentOfListItem){o._gfmTasklistFirstContentOfListItem=undefined}}h=v;v=v.next}v=r;while(++g<l.length){if(l[g][0]==="exit"&&l[g-1][0]==="enter"&&l[g][1].type===l[g-1][1].type&&l[g][1].start.line!==l[g][1].end.line){b=g+1;y.push(b);v._tokenizer=undefined;v.previous=undefined;v=v.next}}o.events=[];if(v){v._tokenizer=undefined;v.previous=undefined}else{y.pop()}g=y.length;while(g--){const t=l.slice(y[g],y[g+1]);const r=i.pop();d.unshift([r,r+t.length-1]);splice(e,r,2,t)}g=-1;while(++g<d.length){u[w+d[g][0]]=w+d[g][1];w+=d[g][1]-d[g][0]-1}return u}const R={tokenize:tokenizeContent,resolve:resolveContent};const B={tokenize:tokenizeContinuation,partial:true};function resolveContent(e){subtokenize(e);return e}function tokenizeContent(e,t){let r;return start;function start(t){e.enter("content");r=e.enter("chunkContent",{contentType:"content"});return data(t)}function data(t){if(t===null){return contentEnd(t)}if(markdownLineEnding(t)){return e.check(B,contentContinue,contentEnd)(t)}e.consume(t);return data}function contentEnd(r){e.exit("chunkContent");e.exit("content");return t(r)}function contentContinue(t){e.consume(t);e.exit("chunkContent");r.next=e.enter("chunkContent",{contentType:"content",previous:r});r=r.next;return data}}function tokenizeContinuation(e,t,r){const a=this;return startLookahead;function startLookahead(t){e.exit("chunkContent");e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return factorySpace(e,prefixed,"linePrefix")}function prefixed(n){if(n===null||markdownLineEnding(n)){return r(n)}const i=a.events[a.events.length-1];if(!a.parser.constructs.disable.null.includes("codeIndented")&&i&&i[1].type==="linePrefix"&&i[2].sliceSerialize(i[1],true).length>=4){return t(n)}return e.interrupt(a.parser.constructs.flow,r,t)(n)}}const N={tokenize:initializeFlow};function initializeFlow(e){const t=this;const r=e.attempt(L,atBlankEnding,e.attempt(this.parser.constructs.flowInitial,afterConstruct,factorySpace(e,e.attempt(this.parser.constructs.flow,afterConstruct,e.attempt(R,afterConstruct)),"linePrefix")));return r;function atBlankEnding(a){if(a===null){e.consume(a);return}e.enter("lineEndingBlank");e.consume(a);e.exit("lineEndingBlank");t.currentConstruct=undefined;return r}function afterConstruct(a){if(a===null){e.consume(a);return}e.enter("lineEnding");e.consume(a);e.exit("lineEnding");t.currentConstruct=undefined;return r}}const j={resolveAll:createResolver()};const I=initializeFactory("string");const q=initializeFactory("text");function initializeFactory(e){return{tokenize:initializeText,resolveAll:createResolver(e==="text"?resolveAllLineSuffixes:undefined)};function initializeText(t){const r=this;const a=this.parser.constructs[e];const n=t.attempt(a,start,notText);return start;function start(e){return atBreak(e)?n(e):notText(e)}function notText(e){if(e===null){t.consume(e);return}t.enter("data");t.consume(e);return data}function data(e){if(atBreak(e)){t.exit("data");return n(e)}t.consume(e);return data}function atBreak(e){if(e===null){return true}const t=a[e];let n=-1;if(t){while(++n<t.length){const e=t[n];if(!e.previous||e.previous.call(r,r.previous)){return true}}}return false}}}function createResolver(e){return resolveAllText;function resolveAllText(t,r){let a=-1;let n;while(++a<=t.length){if(n===undefined){if(t[a]&&t[a][1].type==="data"){n=a;a++}}else if(!t[a]||t[a][1].type!=="data"){if(a!==n+2){t[n][1].end=t[a-1][1].end;t.splice(n+2,a-n-2);a=n+2}n=undefined}}return e?e(t,r):t}}function resolveAllLineSuffixes(e,t){let r=0;while(++r<=e.length){if((r===e.length||e[r][1].type==="lineEnding")&&e[r-1][1].type==="data"){const a=e[r-1][1];const n=t.sliceStream(a);let i=n.length;let o=-1;let l=0;let d;while(i--){const e=n[i];if(typeof e==="string"){o=e.length;while(e.charCodeAt(o-1)===32){l++;o--}if(o)break;o=-1}else if(e===-2){d=true;l++}else if(e===-1){}else{i++;break}}if(l){const n={type:r===e.length||d||l<2?"lineSuffix":"hardBreakTrailing",start:{line:a.end.line,column:a.end.column-l,offset:a.end.offset-l,_index:a.start._index+i,_bufferIndex:i?o:a.start._bufferIndex+o},end:Object.assign({},a.end)};a.end=Object.assign({},n.start);if(a.start.offset===a.end.offset){Object.assign(a,n)}else{e.splice(r,0,["enter",n,t],["exit",n,t]);r+=2}}r++}}return e}function resolveAll(e,t,r){const a=[];let n=-1;while(++n<e.length){const i=e[n].resolveAll;if(i&&!a.includes(i)){t=i(t,r);a.push(i)}}return t}function createTokenizer(e,t,r){let a=Object.assign(r?Object.assign({},r):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const n={};const i=[];let o=[];let l=[];let d=true;const u={consume:consume,enter:enter,exit:exit,attempt:constructFactory(onsuccessfulconstruct),check:constructFactory(onsuccessfulcheck),interrupt:constructFactory(onsuccessfulcheck,{interrupt:true})};const c={previous:null,code:null,containerState:{},events:[],parser:e,sliceStream:sliceStream,sliceSerialize:sliceSerialize,now:now,defineSkip:defineSkip,write:write};let h=t.tokenize.call(c,u);let g;if(t.resolveAll){i.push(t)}return c;function write(e){o=push(o,e);main();if(o[o.length-1]!==null){return[]}addResult(t,0);c.events=resolveAll(i,c.events,c);return c.events}function sliceSerialize(e,t){return serializeChunks(sliceStream(e),t)}function sliceStream(e){return sliceChunks(o,e)}function now(){return Object.assign({},a)}function defineSkip(e){n[e.line]=e.column;accountForPotentialSkip()}function main(){let e;while(a._index<o.length){const t=o[a._index];if(typeof t==="string"){e=a._index;if(a._bufferIndex<0){a._bufferIndex=0}while(a._index===e&&a._bufferIndex<t.length){go(t.charCodeAt(a._bufferIndex))}}else{go(t)}}}function go(e){d=undefined;g=e;h=h(e)}function consume(e){if(markdownLineEnding(e)){a.line++;a.column=1;a.offset+=e===-3?2:1;accountForPotentialSkip()}else if(e!==-1){a.column++;a.offset++}if(a._bufferIndex<0){a._index++}else{a._bufferIndex++;if(a._bufferIndex===o[a._index].length){a._bufferIndex=-1;a._index++}}c.previous=e;d=true}function enter(e,t){const r=t||{};r.type=e;r.start=now();c.events.push(["enter",r,c]);l.push(r);return r}function exit(e){const t=l.pop();t.end=now();c.events.push(["exit",t,c]);return t}function onsuccessfulconstruct(e,t){addResult(e,t.from)}function onsuccessfulcheck(e,t){t.restore()}function constructFactory(e,t){return hook;function hook(r,a,n){let i;let o;let l;let h;return Array.isArray(r)?handleListOfConstructs(r):"tokenize"in r?handleListOfConstructs([r]):handleMapOfConstructs(r);function handleMapOfConstructs(e){return start;function start(t){const r=t!==null&&e[t];const a=t!==null&&e.null;const n=[...Array.isArray(r)?r:r?[r]:[],...Array.isArray(a)?a:a?[a]:[]];return handleListOfConstructs(n)(t)}}function handleListOfConstructs(e){i=e;o=0;if(e.length===0){return n}return handleConstruct(e[o])}function handleConstruct(e){return start;function start(r){h=store();l=e;if(!e.partial){c.currentConstruct=e}if(e.name&&c.parser.constructs.disable.null.includes(e.name)){return nok(r)}return e.tokenize.call(t?Object.assign(Object.create(c),t):c,u,ok,nok)(r)}}function ok(t){d=true;e(l,h);return a}function nok(e){d=true;h.restore();if(++o<i.length){return handleConstruct(i[o])}return n}}}function addResult(e,t){if(e.resolveAll&&!i.includes(e)){i.push(e)}if(e.resolve){splice(c.events,t,c.events.length-t,e.resolve(c.events.slice(t),c))}if(e.resolveTo){c.events=e.resolveTo(c.events,c)}}function store(){const e=now();const t=c.previous;const r=c.currentConstruct;const n=c.events.length;const i=Array.from(l);return{restore:restore,from:n};function restore(){a=e;c.previous=t;c.currentConstruct=r;c.events.length=n;l=i;accountForPotentialSkip()}}function accountForPotentialSkip(){if(a.line in n&&a.column<2){a.column=n[a.line];a.offset+=n[a.line]-1}}}function sliceChunks(e,t){const r=t.start._index;const a=t.start._bufferIndex;const n=t.end._index;const i=t.end._bufferIndex;let o;if(r===n){o=[e[r].slice(a,i)]}else{o=e.slice(r,n);if(a>-1){o[0]=o[0].slice(a)}if(i>0){o.push(e[n].slice(0,i))}}return o}function serializeChunks(e,t){let r=-1;const a=[];let n;while(++r<e.length){const i=e[r];let o;if(typeof i==="string"){o=i}else switch(i){case-5:{o="\r";break}case-4:{o="\n";break}case-3:{o="\r"+"\n";break}case-2:{o=t?" ":"\t";break}case-1:{if(!t&&n)continue;o=" ";break}default:{o=String.fromCharCode(i)}}n=i===-2;a.push(o)}return a.join("")}const U={name:"thematicBreak",tokenize:tokenizeThematicBreak};function tokenizeThematicBreak(e,t,r){let a=0;let n;return start;function start(t){e.enter("thematicBreak");n=t;return atBreak(t)}function atBreak(i){if(i===n){e.enter("thematicBreakSequence");return sequence(i)}if(markdownSpace(i)){return factorySpace(e,atBreak,"whitespace")(i)}if(a<3||i!==null&&!markdownLineEnding(i)){return r(i)}e.exit("thematicBreak");return t(i)}function sequence(t){if(t===n){e.consume(t);a++;return sequence}e.exit("thematicBreakSequence");return atBreak(t)}}const G={name:"list",tokenize:tokenizeListStart,continuation:{tokenize:tokenizeListContinuation},exit:tokenizeListEnd};const V={tokenize:tokenizeListItemPrefixWhitespace,partial:true};const z={tokenize:tokenizeIndent,partial:true};function tokenizeListStart(e,t,r){const a=this;const n=a.events[a.events.length-1];let i=n&&n[1].type==="linePrefix"?n[2].sliceSerialize(n[1],true).length:0;let o=0;return start;function start(t){const n=a.containerState.type||(t===42||t===43||t===45?"listUnordered":"listOrdered");if(n==="listUnordered"?!a.containerState.marker||t===a.containerState.marker:D(t)){if(!a.containerState.type){a.containerState.type=n;e.enter(n,{_container:true})}if(n==="listUnordered"){e.enter("listItemPrefix");return t===42||t===45?e.check(U,r,atMarker)(t):atMarker(t)}if(!a.interrupt||t===49){e.enter("listItemPrefix");e.enter("listItemValue");return inside(t)}}return r(t)}function inside(t){if(D(t)&&++o<10){e.consume(t);return inside}if((!a.interrupt||o<2)&&(a.containerState.marker?t===a.containerState.marker:t===41||t===46)){e.exit("listItemValue");return atMarker(t)}return r(t)}function atMarker(t){e.enter("listItemMarker");e.consume(t);e.exit("listItemMarker");a.containerState.marker=a.containerState.marker||t;return e.check(L,a.interrupt?r:onBlank,e.attempt(V,endOfPrefix,otherPrefix))}function onBlank(e){a.containerState.initialBlankLine=true;i++;return endOfPrefix(e)}function otherPrefix(t){if(markdownSpace(t)){e.enter("listItemPrefixWhitespace");e.consume(t);e.exit("listItemPrefixWhitespace");return endOfPrefix}return r(t)}function endOfPrefix(r){a.containerState.size=i+a.sliceSerialize(e.exit("listItemPrefix"),true).length;return t(r)}}function tokenizeListContinuation(e,t,r){const a=this;a.containerState._closeFlow=undefined;return e.check(L,onBlank,notBlank);function onBlank(r){a.containerState.furtherBlankLines=a.containerState.furtherBlankLines||a.containerState.initialBlankLine;return factorySpace(e,t,"listItemIndent",a.containerState.size+1)(r)}function notBlank(r){if(a.containerState.furtherBlankLines||!markdownSpace(r)){a.containerState.furtherBlankLines=undefined;a.containerState.initialBlankLine=undefined;return notInCurrentItem(r)}a.containerState.furtherBlankLines=undefined;a.containerState.initialBlankLine=undefined;return e.attempt(z,t,notInCurrentItem)(r)}function notInCurrentItem(n){a.containerState._closeFlow=true;a.interrupt=undefined;return factorySpace(e,e.attempt(G,t,r),"linePrefix",a.parser.constructs.disable.null.includes("codeIndented")?undefined:4)(n)}}function tokenizeIndent(e,t,r){const a=this;return factorySpace(e,afterPrefix,"listItemIndent",a.containerState.size+1);function afterPrefix(e){const n=a.events[a.events.length-1];return n&&n[1].type==="listItemIndent"&&n[2].sliceSerialize(n[1],true).length===a.containerState.size?t(e):r(e)}}function tokenizeListEnd(e){e.exit(this.containerState.type)}function tokenizeListItemPrefixWhitespace(e,t,r){const a=this;return factorySpace(e,afterPrefix,"listItemPrefixWhitespace",a.parser.constructs.disable.null.includes("codeIndented")?undefined:4+1);function afterPrefix(e){const n=a.events[a.events.length-1];return!markdownSpace(e)&&n&&n[1].type==="listItemPrefixWhitespace"?t(e):r(e)}}const M={name:"blockQuote",tokenize:tokenizeBlockQuoteStart,continuation:{tokenize:tokenizeBlockQuoteContinuation},exit:exit};function tokenizeBlockQuoteStart(e,t,r){const a=this;return start;function start(t){if(t===62){const r=a.containerState;if(!r.open){e.enter("blockQuote",{_container:true});r.open=true}e.enter("blockQuotePrefix");e.enter("blockQuoteMarker");e.consume(t);e.exit("blockQuoteMarker");return after}return r(t)}function after(r){if(markdownSpace(r)){e.enter("blockQuotePrefixWhitespace");e.consume(r);e.exit("blockQuotePrefixWhitespace");e.exit("blockQuotePrefix");return t}e.exit("blockQuotePrefix");return t(r)}}function tokenizeBlockQuoteContinuation(e,t,r){return factorySpace(e,e.attempt(M,t,r),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?undefined:4)}function exit(e){e.exit("blockQuote")}function factoryDestination(e,t,r,a,n,i,o,l,d){const u=d||Number.POSITIVE_INFINITY;let c=0;return start;function start(t){if(t===60){e.enter(a);e.enter(n);e.enter(i);e.consume(t);e.exit(i);return destinationEnclosedBefore}if(t===null||t===41||asciiControl(t)){return r(t)}e.enter(a);e.enter(o);e.enter(l);e.enter("chunkString",{contentType:"string"});return destinationRaw(t)}function destinationEnclosedBefore(r){if(r===62){e.enter(i);e.consume(r);e.exit(i);e.exit(n);e.exit(a);return t}e.enter(l);e.enter("chunkString",{contentType:"string"});return destinationEnclosed(r)}function destinationEnclosed(t){if(t===62){e.exit("chunkString");e.exit(l);return destinationEnclosedBefore(t)}if(t===null||t===60||markdownLineEnding(t)){return r(t)}e.consume(t);return t===92?destinationEnclosedEscape:destinationEnclosed}function destinationEnclosedEscape(t){if(t===60||t===62||t===92){e.consume(t);return destinationEnclosed}return destinationEnclosed(t)}function destinationRaw(n){if(n===40){if(++c>u)return r(n);e.consume(n);return destinationRaw}if(n===41){if(!c--){e.exit("chunkString");e.exit(l);e.exit(o);e.exit(a);return t(n)}e.consume(n);return destinationRaw}if(n===null||markdownLineEndingOrSpace(n)){if(c)return r(n);e.exit("chunkString");e.exit(l);e.exit(o);e.exit(a);return t(n)}if(asciiControl(n))return r(n);e.consume(n);return n===92?destinationRawEscape:destinationRaw}function destinationRawEscape(t){if(t===40||t===41||t===92){e.consume(t);return destinationRaw}return destinationRaw(t)}}function factoryLabel(e,t,r,a,n,i){const o=this;let l=0;let d;return start;function start(t){e.enter(a);e.enter(n);e.consume(t);e.exit(n);e.enter(i);return atBreak}function atBreak(u){if(u===null||u===91||u===93&&!d||u===94&&!l&&"_hiddenFootnoteSupport"in o.parser.constructs||l>999){return r(u)}if(u===93){e.exit(i);e.enter(n);e.consume(u);e.exit(n);e.exit(a);return t}if(markdownLineEnding(u)){e.enter("lineEnding");e.consume(u);e.exit("lineEnding");return atBreak}e.enter("chunkString",{contentType:"string"});return label(u)}function label(t){if(t===null||t===91||t===93||markdownLineEnding(t)||l++>999){e.exit("chunkString");return atBreak(t)}e.consume(t);d=d||!markdownSpace(t);return t===92?labelEscape:label}function labelEscape(t){if(t===91||t===92||t===93){e.consume(t);l++;return label}return label(t)}}function factoryTitle(e,t,r,a,n,i){let o;return start;function start(t){e.enter(a);e.enter(n);e.consume(t);e.exit(n);o=t===40?41:t;return atFirstTitleBreak}function atFirstTitleBreak(r){if(r===o){e.enter(n);e.consume(r);e.exit(n);e.exit(a);return t}e.enter(i);return atTitleBreak(r)}function atTitleBreak(t){if(t===o){e.exit(i);return atFirstTitleBreak(o)}if(t===null){return r(t)}if(markdownLineEnding(t)){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return factorySpace(e,atTitleBreak,"linePrefix")}e.enter("chunkString",{contentType:"string"});return title(t)}function title(t){if(t===o||t===null||markdownLineEnding(t)){e.exit("chunkString");return atTitleBreak(t)}e.consume(t);return t===92?titleEscape:title}function titleEscape(t){if(t===o||t===92){e.consume(t);return title}return title(t)}}function factoryWhitespace(e,t){let r;return start;function start(a){if(markdownLineEnding(a)){e.enter("lineEnding");e.consume(a);e.exit("lineEnding");r=true;return start}if(markdownSpace(a)){return factorySpace(e,start,r?"linePrefix":"lineSuffix")(a)}return t(a)}}function normalizeIdentifier(e){return e.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}const H={name:"definition",tokenize:tokenizeDefinition};const $={tokenize:tokenizeTitle,partial:true};function tokenizeDefinition(e,t,r){const a=this;let n;return start;function start(t){e.enter("definition");return factoryLabel.call(a,e,labelAfter,r,"definitionLabel","definitionLabelMarker","definitionLabelString")(t)}function labelAfter(t){n=normalizeIdentifier(a.sliceSerialize(a.events[a.events.length-1][1]).slice(1,-1));if(t===58){e.enter("definitionMarker");e.consume(t);e.exit("definitionMarker");return factoryWhitespace(e,factoryDestination(e,e.attempt($,factorySpace(e,after,"whitespace"),factorySpace(e,after,"whitespace")),r,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString"))}return r(t)}function after(i){if(i===null||markdownLineEnding(i)){e.exit("definition");if(!a.parser.defined.includes(n)){a.parser.defined.push(n)}return t(i)}return r(i)}}function tokenizeTitle(e,t,r){return start;function start(t){return markdownLineEndingOrSpace(t)?factoryWhitespace(e,before)(t):r(t)}function before(t){if(t===34||t===39||t===40){return factoryTitle(e,factorySpace(e,after,"whitespace"),r,"definitionTitle","definitionTitleMarker","definitionTitleString")(t)}return r(t)}function after(e){return e===null||markdownLineEnding(e)?t(e):r(e)}}const W={name:"codeIndented",tokenize:tokenizeCodeIndented};const Y={tokenize:tokenizeIndentedContent,partial:true};function tokenizeCodeIndented(e,t,r){const a=this;return start;function start(t){e.enter("codeIndented");return factorySpace(e,afterStartPrefix,"linePrefix",4+1)(t)}function afterStartPrefix(e){const t=a.events[a.events.length-1];return t&&t[1].type==="linePrefix"&&t[2].sliceSerialize(t[1],true).length>=4?afterPrefix(e):r(e)}function afterPrefix(t){if(t===null){return after(t)}if(markdownLineEnding(t)){return e.attempt(Y,afterPrefix,after)(t)}e.enter("codeFlowValue");return content(t)}function content(t){if(t===null||markdownLineEnding(t)){e.exit("codeFlowValue");return afterPrefix(t)}e.consume(t);return content}function after(r){e.exit("codeIndented");return t(r)}}function tokenizeIndentedContent(e,t,r){const a=this;return start;function start(t){if(a.parser.lazy[a.now().line]){return r(t)}if(markdownLineEnding(t)){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return start}return factorySpace(e,afterPrefix,"linePrefix",4+1)(t)}function afterPrefix(e){const n=a.events[a.events.length-1];return n&&n[1].type==="linePrefix"&&n[2].sliceSerialize(n[1],true).length>=4?t(e):markdownLineEnding(e)?start(e):r(e)}}const K={name:"headingAtx",tokenize:tokenizeHeadingAtx,resolve:resolveHeadingAtx};function resolveHeadingAtx(e,t){let r=e.length-2;let a=3;let n;let i;if(e[a][1].type==="whitespace"){a+=2}if(r-2>a&&e[r][1].type==="whitespace"){r-=2}if(e[r][1].type==="atxHeadingSequence"&&(a===r-1||r-4>a&&e[r-2][1].type==="whitespace")){r-=a+1===r?2:4}if(r>a){n={type:"atxHeadingText",start:e[a][1].start,end:e[r][1].end};i={type:"chunkText",start:e[a][1].start,end:e[r][1].end,contentType:"text"};splice(e,a,r-a+1,[["enter",n,t],["enter",i,t],["exit",i,t],["exit",n,t]])}return e}function tokenizeHeadingAtx(e,t,r){const a=this;let n=0;return start;function start(t){e.enter("atxHeading");e.enter("atxHeadingSequence");return fenceOpenInside(t)}function fenceOpenInside(i){if(i===35&&n++<6){e.consume(i);return fenceOpenInside}if(i===null||markdownLineEndingOrSpace(i)){e.exit("atxHeadingSequence");return a.interrupt?t(i):headingBreak(i)}return r(i)}function headingBreak(r){if(r===35){e.enter("atxHeadingSequence");return sequence(r)}if(r===null||markdownLineEnding(r)){e.exit("atxHeading");return t(r)}if(markdownSpace(r)){return factorySpace(e,headingBreak,"whitespace")(r)}e.enter("atxHeadingText");return data(r)}function sequence(t){if(t===35){e.consume(t);return sequence}e.exit("atxHeadingSequence");return headingBreak(t)}function data(t){if(t===null||t===35||markdownLineEndingOrSpace(t)){e.exit("atxHeadingText");return headingBreak(t)}e.consume(t);return data}}const J={name:"setextUnderline",tokenize:tokenizeSetextUnderline,resolveTo:resolveToSetextUnderline};function resolveToSetextUnderline(e,t){let r=e.length;let a;let n;let i;while(r--){if(e[r][0]==="enter"){if(e[r][1].type==="content"){a=r;break}if(e[r][1].type==="paragraph"){n=r}}else{if(e[r][1].type==="content"){e.splice(r,1)}if(!i&&e[r][1].type==="definition"){i=r}}}const o={type:"setextHeading",start:Object.assign({},e[n][1].start),end:Object.assign({},e[e.length-1][1].end)};e[n][1].type="setextHeadingText";if(i){e.splice(n,0,["enter",o,t]);e.splice(i+1,0,["exit",e[a][1],t]);e[a][1].end=Object.assign({},e[i][1].end)}else{e[a][1]=o}e.push(["exit",o,t]);return e}function tokenizeSetextUnderline(e,t,r){const a=this;let n=a.events.length;let i;let o;while(n--){if(a.events[n][1].type!=="lineEnding"&&a.events[n][1].type!=="linePrefix"&&a.events[n][1].type!=="content"){o=a.events[n][1].type==="paragraph";break}}return start;function start(t){if(!a.parser.lazy[a.now().line]&&(a.interrupt||o)){e.enter("setextHeadingLine");e.enter("setextHeadingLineSequence");i=t;return closingSequence(t)}return r(t)}function closingSequence(t){if(t===i){e.consume(t);return closingSequence}e.exit("setextHeadingLineSequence");return factorySpace(e,closingSequenceEnd,"lineSuffix")(t)}function closingSequenceEnd(a){if(a===null||markdownLineEnding(a)){e.exit("setextHeadingLine");return t(a)}return r(a)}}const Z=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"];const Q=["pre","script","style","textarea"];const X={name:"htmlFlow",tokenize:tokenizeHtmlFlow,resolveTo:resolveToHtmlFlow,concrete:true};const ee={tokenize:tokenizeNextBlank,partial:true};function resolveToHtmlFlow(e){let t=e.length;while(t--){if(e[t][0]==="enter"&&e[t][1].type==="htmlFlow"){break}}if(t>1&&e[t-2][1].type==="linePrefix"){e[t][1].start=e[t-2][1].start;e[t+1][1].start=e[t-2][1].start;e.splice(t-2,2)}return e}function tokenizeHtmlFlow(e,t,r){const a=this;let n;let i;let o;let l;let d;return start;function start(t){e.enter("htmlFlow");e.enter("htmlFlowData");e.consume(t);return open}function open(l){if(l===33){e.consume(l);return declarationStart}if(l===47){e.consume(l);return tagCloseStart}if(l===63){e.consume(l);n=3;return a.interrupt?t:continuationDeclarationInside}if(E(l)){e.consume(l);o=String.fromCharCode(l);i=true;return tagName}return r(l)}function declarationStart(i){if(i===45){e.consume(i);n=2;return commentOpenInside}if(i===91){e.consume(i);n=5;o="CDATA[";l=0;return cdataOpenInside}if(E(i)){e.consume(i);n=4;return a.interrupt?t:continuationDeclarationInside}return r(i)}function commentOpenInside(n){if(n===45){e.consume(n);return a.interrupt?t:continuationDeclarationInside}return r(n)}function cdataOpenInside(n){if(n===o.charCodeAt(l++)){e.consume(n);return l===o.length?a.interrupt?t:continuation:cdataOpenInside}return r(n)}function tagCloseStart(t){if(E(t)){e.consume(t);o=String.fromCharCode(t);return tagName}return r(t)}function tagName(l){if(l===null||l===47||l===62||markdownLineEndingOrSpace(l)){if(l!==47&&i&&Q.includes(o.toLowerCase())){n=1;return a.interrupt?t(l):continuation(l)}if(Z.includes(o.toLowerCase())){n=6;if(l===47){e.consume(l);return basicSelfClosing}return a.interrupt?t(l):continuation(l)}n=7;return a.interrupt&&!a.parser.lazy[a.now().line]?r(l):i?completeAttributeNameBefore(l):completeClosingTagAfter(l)}if(l===45||A(l)){e.consume(l);o+=String.fromCharCode(l);return tagName}return r(l)}function basicSelfClosing(n){if(n===62){e.consume(n);return a.interrupt?t:continuation}return r(n)}function completeClosingTagAfter(t){if(markdownSpace(t)){e.consume(t);return completeClosingTagAfter}return completeEnd(t)}function completeAttributeNameBefore(t){if(t===47){e.consume(t);return completeEnd}if(t===58||t===95||E(t)){e.consume(t);return completeAttributeName}if(markdownSpace(t)){e.consume(t);return completeAttributeNameBefore}return completeEnd(t)}function completeAttributeName(t){if(t===45||t===46||t===58||t===95||A(t)){e.consume(t);return completeAttributeName}return completeAttributeNameAfter(t)}function completeAttributeNameAfter(t){if(t===61){e.consume(t);return completeAttributeValueBefore}if(markdownSpace(t)){e.consume(t);return completeAttributeNameAfter}return completeAttributeNameBefore(t)}function completeAttributeValueBefore(t){if(t===null||t===60||t===61||t===62||t===96){return r(t)}if(t===34||t===39){e.consume(t);d=t;return completeAttributeValueQuoted}if(markdownSpace(t)){e.consume(t);return completeAttributeValueBefore}d=null;return completeAttributeValueUnquoted(t)}function completeAttributeValueQuoted(t){if(t===null||markdownLineEnding(t)){return r(t)}if(t===d){e.consume(t);return completeAttributeValueQuotedAfter}e.consume(t);return completeAttributeValueQuoted}function completeAttributeValueUnquoted(t){if(t===null||t===34||t===39||t===60||t===61||t===62||t===96||markdownLineEndingOrSpace(t)){return completeAttributeNameAfter(t)}e.consume(t);return completeAttributeValueUnquoted}function completeAttributeValueQuotedAfter(e){if(e===47||e===62||markdownSpace(e)){return completeAttributeNameBefore(e)}return r(e)}function completeEnd(t){if(t===62){e.consume(t);return completeAfter}return r(t)}function completeAfter(t){if(markdownSpace(t)){e.consume(t);return completeAfter}return t===null||markdownLineEnding(t)?continuation(t):r(t)}function continuation(t){if(t===45&&n===2){e.consume(t);return continuationCommentInside}if(t===60&&n===1){e.consume(t);return continuationRawTagOpen}if(t===62&&n===4){e.consume(t);return continuationClose}if(t===63&&n===3){e.consume(t);return continuationDeclarationInside}if(t===93&&n===5){e.consume(t);return continuationCharacterDataInside}if(markdownLineEnding(t)&&(n===6||n===7)){return e.check(ee,continuationClose,continuationAtLineEnding)(t)}if(t===null||markdownLineEnding(t)){return continuationAtLineEnding(t)}e.consume(t);return continuation}function continuationAtLineEnding(t){e.exit("htmlFlowData");return htmlContinueStart(t)}function htmlContinueStart(t){if(t===null){return done(t)}if(markdownLineEnding(t)){return e.attempt({tokenize:htmlLineEnd,partial:true},htmlContinueStart,done)(t)}e.enter("htmlFlowData");return continuation(t)}function htmlLineEnd(e,t,r){return start;function start(t){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return lineStart}function lineStart(e){return a.parser.lazy[a.now().line]?r(e):t(e)}}function continuationCommentInside(t){if(t===45){e.consume(t);return continuationDeclarationInside}return continuation(t)}function continuationRawTagOpen(t){if(t===47){e.consume(t);o="";return continuationRawEndTag}return continuation(t)}function continuationRawEndTag(t){if(t===62&&Q.includes(o.toLowerCase())){e.consume(t);return continuationClose}if(E(t)&&o.length<8){e.consume(t);o+=String.fromCharCode(t);return continuationRawEndTag}return continuation(t)}function continuationCharacterDataInside(t){if(t===93){e.consume(t);return continuationDeclarationInside}return continuation(t)}function continuationDeclarationInside(t){if(t===62){e.consume(t);return continuationClose}if(t===45&&n===2){e.consume(t);return continuationDeclarationInside}return continuation(t)}function continuationClose(t){if(t===null||markdownLineEnding(t)){e.exit("htmlFlowData");return done(t)}e.consume(t);return continuationClose}function done(r){e.exit("htmlFlow");return t(r)}}function tokenizeNextBlank(e,t,r){return start;function start(a){e.exit("htmlFlowData");e.enter("lineEndingBlank");e.consume(a);e.exit("lineEndingBlank");return e.attempt(L,t,r)}}const te={name:"codeFenced",tokenize:tokenizeCodeFenced,concrete:true};function tokenizeCodeFenced(e,t,r){const a=this;const n={tokenize:tokenizeClosingFence,partial:true};const i={tokenize:tokenizeNonLazyLine,partial:true};const o=this.events[this.events.length-1];const l=o&&o[1].type==="linePrefix"?o[2].sliceSerialize(o[1],true).length:0;let d=0;let u;return start;function start(t){e.enter("codeFenced");e.enter("codeFencedFence");e.enter("codeFencedFenceSequence");u=t;return sequenceOpen(t)}function sequenceOpen(t){if(t===u){e.consume(t);d++;return sequenceOpen}e.exit("codeFencedFenceSequence");return d<3?r(t):factorySpace(e,infoOpen,"whitespace")(t)}function infoOpen(t){if(t===null||markdownLineEnding(t)){return openAfter(t)}e.enter("codeFencedFenceInfo");e.enter("chunkString",{contentType:"string"});return info(t)}function info(t){if(t===null||markdownLineEndingOrSpace(t)){e.exit("chunkString");e.exit("codeFencedFenceInfo");return factorySpace(e,infoAfter,"whitespace")(t)}if(t===96&&t===u)return r(t);e.consume(t);return info}function infoAfter(t){if(t===null||markdownLineEnding(t)){return openAfter(t)}e.enter("codeFencedFenceMeta");e.enter("chunkString",{contentType:"string"});return meta(t)}function meta(t){if(t===null||markdownLineEnding(t)){e.exit("chunkString");e.exit("codeFencedFenceMeta");return openAfter(t)}if(t===96&&t===u)return r(t);e.consume(t);return meta}function openAfter(r){e.exit("codeFencedFence");return a.interrupt?t(r):contentStart(r)}function contentStart(t){if(t===null){return after(t)}if(markdownLineEnding(t)){return e.attempt(i,e.attempt(n,after,l?factorySpace(e,contentStart,"linePrefix",l+1):contentStart),after)(t)}e.enter("codeFlowValue");return contentContinue(t)}function contentContinue(t){if(t===null||markdownLineEnding(t)){e.exit("codeFlowValue");return contentStart(t)}e.consume(t);return contentContinue}function after(r){e.exit("codeFenced");return t(r)}function tokenizeNonLazyLine(e,t,r){const a=this;return start;function start(t){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return lineStart}function lineStart(e){return a.parser.lazy[a.now().line]?r(e):t(e)}}function tokenizeClosingFence(e,t,r){let a=0;return factorySpace(e,closingSequenceStart,"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?undefined:4);function closingSequenceStart(t){e.enter("codeFencedFence");e.enter("codeFencedFenceSequence");return closingSequence(t)}function closingSequence(t){if(t===u){e.consume(t);a++;return closingSequence}if(a<d)return r(t);e.exit("codeFencedFenceSequence");return factorySpace(e,closingSequenceEnd,"whitespace")(t)}function closingSequenceEnd(a){if(a===null||markdownLineEnding(a)){e.exit("codeFencedFence");return t(a)}return r(a)}}}const re={AElig:"Æ",AMP:"&",Aacute:"Á",Abreve:"Ă",Acirc:"Â",Acy:"А",Afr:"𝔄",Agrave:"À",Alpha:"Α",Amacr:"Ā",And:"⩓",Aogon:"Ą",Aopf:"𝔸",ApplyFunction:"⁡",Aring:"Å",Ascr:"𝒜",Assign:"≔",Atilde:"Ã",Auml:"Ä",Backslash:"∖",Barv:"⫧",Barwed:"⌆",Bcy:"Б",Because:"∵",Bernoullis:"ℬ",Beta:"Β",Bfr:"𝔅",Bopf:"𝔹",Breve:"˘",Bscr:"ℬ",Bumpeq:"≎",CHcy:"Ч",COPY:"©",Cacute:"Ć",Cap:"⋒",CapitalDifferentialD:"ⅅ",Cayleys:"ℭ",Ccaron:"Č",Ccedil:"Ç",Ccirc:"Ĉ",Cconint:"∰",Cdot:"Ċ",Cedilla:"¸",CenterDot:"·",Cfr:"ℭ",Chi:"Χ",CircleDot:"⊙",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",Colon:"∷",Colone:"⩴",Congruent:"≡",Conint:"∯",ContourIntegral:"∮",Copf:"ℂ",Coproduct:"∐",CounterClockwiseContourIntegral:"∳",Cross:"⨯",Cscr:"𝒞",Cup:"⋓",CupCap:"≍",DD:"ⅅ",DDotrahd:"⤑",DJcy:"Ђ",DScy:"Ѕ",DZcy:"Џ",Dagger:"‡",Darr:"↡",Dashv:"⫤",Dcaron:"Ď",Dcy:"Д",Del:"∇",Delta:"Δ",Dfr:"𝔇",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",Diamond:"⋄",DifferentialD:"ⅆ",Dopf:"𝔻",Dot:"¨",DotDot:"⃜",DotEqual:"≐",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",Downarrow:"⇓",Dscr:"𝒟",Dstrok:"Đ",ENG:"Ŋ",ETH:"Ð",Eacute:"É",Ecaron:"Ě",Ecirc:"Ê",Ecy:"Э",Edot:"Ė",Efr:"𝔈",Egrave:"È",Element:"∈",Emacr:"Ē",EmptySmallSquare:"◻",EmptyVerySmallSquare:"▫",Eogon:"Ę",Eopf:"𝔼",Epsilon:"Ε",Equal:"⩵",EqualTilde:"≂",Equilibrium:"⇌",Escr:"ℰ",Esim:"⩳",Eta:"Η",Euml:"Ë",Exists:"∃",ExponentialE:"ⅇ",Fcy:"Ф",Ffr:"𝔉",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",Fopf:"𝔽",ForAll:"∀",Fouriertrf:"ℱ",Fscr:"ℱ",GJcy:"Ѓ",GT:">",Gamma:"Γ",Gammad:"Ϝ",Gbreve:"Ğ",Gcedil:"Ģ",Gcirc:"Ĝ",Gcy:"Г",Gdot:"Ġ",Gfr:"𝔊",Gg:"⋙",Gopf:"𝔾",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",Gt:"≫",HARDcy:"Ъ",Hacek:"ˇ",Hat:"^",Hcirc:"Ĥ",Hfr:"ℌ",HilbertSpace:"ℋ",Hopf:"ℍ",HorizontalLine:"─",Hscr:"ℋ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",IEcy:"Е",IJlig:"Ĳ",IOcy:"Ё",Iacute:"Í",Icirc:"Î",Icy:"И",Idot:"İ",Ifr:"ℑ",Igrave:"Ì",Im:"ℑ",Imacr:"Ī",ImaginaryI:"ⅈ",Implies:"⇒",Int:"∬",Integral:"∫",Intersection:"⋂",InvisibleComma:"⁣",InvisibleTimes:"⁢",Iogon:"Į",Iopf:"𝕀",Iota:"Ι",Iscr:"ℐ",Itilde:"Ĩ",Iukcy:"І",Iuml:"Ï",Jcirc:"Ĵ",Jcy:"Й",Jfr:"𝔍",Jopf:"𝕁",Jscr:"𝒥",Jsercy:"Ј",Jukcy:"Є",KHcy:"Х",KJcy:"Ќ",Kappa:"Κ",Kcedil:"Ķ",Kcy:"К",Kfr:"𝔎",Kopf:"𝕂",Kscr:"𝒦",LJcy:"Љ",LT:"<",Lacute:"Ĺ",Lambda:"Λ",Lang:"⟪",Laplacetrf:"ℒ",Larr:"↞",Lcaron:"Ľ",Lcedil:"Ļ",Lcy:"Л",LeftAngleBracket:"⟨",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",LeftRightArrow:"↔",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",Leftarrow:"⇐",Leftrightarrow:"⇔",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",LessLess:"⪡",LessSlantEqual:"⩽",LessTilde:"≲",Lfr:"𝔏",Ll:"⋘",Lleftarrow:"⇚",Lmidot:"Ŀ",LongLeftArrow:"⟵",LongLeftRightArrow:"⟷",LongRightArrow:"⟶",Longleftarrow:"⟸",Longleftrightarrow:"⟺",Longrightarrow:"⟹",Lopf:"𝕃",LowerLeftArrow:"↙",LowerRightArrow:"↘",Lscr:"ℒ",Lsh:"↰",Lstrok:"Ł",Lt:"≪",Map:"⤅",Mcy:"М",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",MinusPlus:"∓",Mopf:"𝕄",Mscr:"ℳ",Mu:"Μ",NJcy:"Њ",Nacute:"Ń",Ncaron:"Ň",Ncedil:"Ņ",Ncy:"Н",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",Nfr:"𝔑",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",Nscr:"𝒩",Ntilde:"Ñ",Nu:"Ν",OElig:"Œ",Oacute:"Ó",Ocirc:"Ô",Ocy:"О",Odblac:"Ő",Ofr:"𝔒",Ograve:"Ò",Omacr:"Ō",Omega:"Ω",Omicron:"Ο",Oopf:"𝕆",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",Or:"⩔",Oscr:"𝒪",Oslash:"Ø",Otilde:"Õ",Otimes:"⨷",Ouml:"Ö",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",PartialD:"∂",Pcy:"П",Pfr:"𝔓",Phi:"Φ",Pi:"Π",PlusMinus:"±",Poincareplane:"ℌ",Popf:"ℙ",Pr:"⪻",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",Prime:"″",Product:"∏",Proportion:"∷",Proportional:"∝",Pscr:"𝒫",Psi:"Ψ",QUOT:'"',Qfr:"𝔔",Qopf:"ℚ",Qscr:"𝒬",RBarr:"⤐",REG:"®",Racute:"Ŕ",Rang:"⟫",Rarr:"↠",Rarrtl:"⤖",Rcaron:"Ř",Rcedil:"Ŗ",Rcy:"Р",Re:"ℜ",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",Rfr:"ℜ",Rho:"Ρ",RightAngleBracket:"⟩",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",Rightarrow:"⇒",Ropf:"ℝ",RoundImplies:"⥰",Rrightarrow:"⇛",Rscr:"ℛ",Rsh:"↱",RuleDelayed:"⧴",SHCHcy:"Щ",SHcy:"Ш",SOFTcy:"Ь",Sacute:"Ś",Sc:"⪼",Scaron:"Š",Scedil:"Ş",Scirc:"Ŝ",Scy:"С",Sfr:"𝔖",ShortDownArrow:"↓",ShortLeftArrow:"←",ShortRightArrow:"→",ShortUpArrow:"↑",Sigma:"Σ",SmallCircle:"∘",Sopf:"𝕊",Sqrt:"√",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",Sscr:"𝒮",Star:"⋆",Sub:"⋐",Subset:"⋐",SubsetEqual:"⊆",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",SuchThat:"∋",Sum:"∑",Sup:"⋑",Superset:"⊃",SupersetEqual:"⊇",Supset:"⋑",THORN:"Þ",TRADE:"™",TSHcy:"Ћ",TScy:"Ц",Tab:"\t",Tau:"Τ",Tcaron:"Ť",Tcedil:"Ţ",Tcy:"Т",Tfr:"𝔗",Therefore:"∴",Theta:"Θ",ThickSpace:"  ",ThinSpace:" ",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",Topf:"𝕋",TripleDot:"⃛",Tscr:"𝒯",Tstrok:"Ŧ",Uacute:"Ú",Uarr:"↟",Uarrocir:"⥉",Ubrcy:"Ў",Ubreve:"Ŭ",Ucirc:"Û",Ucy:"У",Udblac:"Ű",Ufr:"𝔘",Ugrave:"Ù",Umacr:"Ū",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",Uopf:"𝕌",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",UpEquilibrium:"⥮",UpTee:"⊥",UpTeeArrow:"↥",Uparrow:"⇑",Updownarrow:"⇕",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",Upsilon:"Υ",Uring:"Ů",Uscr:"𝒰",Utilde:"Ũ",Uuml:"Ü",VDash:"⊫",Vbar:"⫫",Vcy:"В",Vdash:"⊩",Vdashl:"⫦",Vee:"⋁",Verbar:"‖",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",Vopf:"𝕍",Vscr:"𝒱",Vvdash:"⊪",Wcirc:"Ŵ",Wedge:"⋀",Wfr:"𝔚",Wopf:"𝕎",Wscr:"𝒲",Xfr:"𝔛",Xi:"Ξ",Xopf:"𝕏",Xscr:"𝒳",YAcy:"Я",YIcy:"Ї",YUcy:"Ю",Yacute:"Ý",Ycirc:"Ŷ",Ycy:"Ы",Yfr:"𝔜",Yopf:"𝕐",Yscr:"𝒴",Yuml:"Ÿ",ZHcy:"Ж",Zacute:"Ź",Zcaron:"Ž",Zcy:"З",Zdot:"Ż",ZeroWidthSpace:"​",Zeta:"Ζ",Zfr:"ℨ",Zopf:"ℤ",Zscr:"𝒵",aacute:"á",abreve:"ă",ac:"∾",acE:"∾̳",acd:"∿",acirc:"â",acute:"´",acy:"а",aelig:"æ",af:"⁡",afr:"𝔞",agrave:"à",alefsym:"ℵ",aleph:"ℵ",alpha:"α",amacr:"ā",amalg:"⨿",amp:"&",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",aopf:"𝕒",ap:"≈",apE:"⩰",apacir:"⩯",ape:"≊",apid:"≋",apos:"'",approx:"≈",approxeq:"≊",aring:"å",ascr:"𝒶",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",auml:"ä",awconint:"∳",awint:"⨑",bNot:"⫭",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",barvee:"⊽",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",beta:"β",beth:"ℶ",between:"≬",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxDL:"╗",boxDR:"╔",boxDl:"╖",boxDr:"╓",boxH:"═",boxHD:"╦",boxHU:"╩",boxHd:"╤",boxHu:"╧",boxUL:"╝",boxUR:"╚",boxUl:"╜",boxUr:"╙",boxV:"║",boxVH:"╬",boxVL:"╣",boxVR:"╠",boxVh:"╫",boxVl:"╢",boxVr:"╟",boxbox:"⧉",boxdL:"╕",boxdR:"╒",boxdl:"┐",boxdr:"┌",boxh:"─",boxhD:"╥",boxhU:"╨",boxhd:"┬",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxuL:"╛",boxuR:"╘",boxul:"┘",boxur:"└",boxv:"│",boxvH:"╪",boxvL:"╡",boxvR:"╞",boxvh:"┼",boxvl:"┤",boxvr:"├",bprime:"‵",breve:"˘",brvbar:"¦",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",bumpeq:"≏",cacute:"ć",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",caps:"∩︀",caret:"⁁",caron:"ˇ",ccaps:"⩍",ccaron:"č",ccedil:"ç",ccirc:"ĉ",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",cedil:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",cfr:"𝔠",chcy:"ч",check:"✓",checkmark:"✓",chi:"χ",cir:"○",cirE:"⧃",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledR:"®",circledS:"Ⓢ",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",clubs:"♣",clubsuit:"♣",colon:":",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",conint:"∮",copf:"𝕔",coprod:"∐",copy:"©",copysr:"℗",crarr:"↵",cross:"✗",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",cupbrcap:"⩈",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dArr:"⇓",dHar:"⥥",dagger:"†",daleth:"ℸ",darr:"↓",dash:"‐",dashv:"⊣",dbkarow:"⤏",dblac:"˝",dcaron:"ď",dcy:"д",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",ddotseq:"⩷",deg:"°",delta:"δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",dharl:"⇃",dharr:"⇂",diam:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",dot:"˙",doteq:"≐",doteqdot:"≑",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",downarrow:"↓",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",dscy:"ѕ",dsol:"⧶",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",dzigrarr:"⟿",eDDot:"⩷",eDot:"≑",eacute:"é",easter:"⩮",ecaron:"ě",ecir:"≖",ecirc:"ê",ecolon:"≕",ecy:"э",edot:"ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",eg:"⪚",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",empty:"∅",emptyset:"∅",emptyv:"∅",emsp13:" ",emsp14:" ",emsp:" ",eng:"ŋ",ensp:" ",eogon:"ę",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",equals:"=",equest:"≟",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erDot:"≓",erarr:"⥱",escr:"ℯ",esdot:"≐",esim:"≂",eta:"η",eth:"ð",euml:"ë",euro:"€",excl:"!",exist:"∃",expectation:"ℰ",exponentiale:"ⅇ",fallingdotseq:"≒",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",filig:"ﬁ",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",forall:"∀",fork:"⋔",forkv:"⫙",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",gE:"≧",gEl:"⪌",gacute:"ǵ",gamma:"γ",gammad:"ϝ",gap:"⪆",gbreve:"ğ",gcirc:"ĝ",gcy:"г",gdot:"ġ",ge:"≥",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",gg:"≫",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",gl:"≷",glE:"⪒",gla:"⪥",glj:"⪤",gnE:"≩",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",grave:"`",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",hArr:"⇔",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",harr:"↔",harrcir:"⥈",harrw:"↭",hbar:"ℏ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",horbar:"―",hscr:"𝒽",hslash:"ℏ",hstrok:"ħ",hybull:"⁃",hyphen:"‐",iacute:"í",ic:"⁣",icirc:"î",icy:"и",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",imacr:"ī",image:"ℑ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",intcal:"⊺",integers:"ℤ",intercal:"⊺",intlarhk:"⨗",intprod:"⨼",iocy:"ё",iogon:"į",iopf:"𝕚",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",isin:"∈",isinE:"⋹",isindot:"⋵",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",iukcy:"і",iuml:"ï",jcirc:"ĵ",jcy:"й",jfr:"𝔧",jmath:"ȷ",jopf:"𝕛",jscr:"𝒿",jsercy:"ј",jukcy:"є",kappa:"κ",kappav:"ϰ",kcedil:"ķ",kcy:"к",kfr:"𝔨",kgreen:"ĸ",khcy:"х",kjcy:"ќ",kopf:"𝕜",kscr:"𝓀",lAarr:"⇚",lArr:"⇐",lAtail:"⤛",lBarr:"⤎",lE:"≦",lEg:"⪋",lHar:"⥢",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",laquo:"«",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",late:"⪭",lates:"⪭︀",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",lcedil:"ļ",lceil:"⌈",lcub:"{",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",leftarrow:"←",leftarrowtail:"↢",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",leftthreetimes:"⋋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",lessgtr:"≶",lesssim:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",lg:"≶",lgE:"⪑",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",ll:"≪",llarr:"⇇",llcorner:"⌞",llhard:"⥫",lltri:"◺",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnE:"≨",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",longleftrightarrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltrPar:"⦖",ltri:"◃",ltrie:"⊴",ltrif:"◂",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",mDDot:"∺",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",mdash:"—",measuredangle:"∡",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",mp:"∓",mscr:"𝓂",mstpos:"∾",mu:"μ",multimap:"⊸",mumap:"⊸",nGg:"⋙̸",nGt:"≫⃒",nGtv:"≫̸",nLeftarrow:"⇍",nLeftrightarrow:"⇎",nLl:"⋘̸",nLt:"≪⃒",nLtv:"≪̸",nRightarrow:"⇏",nVDash:"⊯",nVdash:"⊮",nabla:"∇",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",ndash:"–",ne:"≠",neArr:"⇗",nearhk:"⤤",nearr:"↗",nearrow:"↗",nedot:"≐̸",nequiv:"≢",nesear:"⤨",nesim:"≂̸",nexist:"∄",nexists:"∄",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",ngsim:"≵",ngt:"≯",ngtr:"≯",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",nlArr:"⇍",nlE:"≦̸",nlarr:"↚",nldr:"‥",nle:"≰",nleftarrow:"↚",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nlsim:"≴",nlt:"≮",nltri:"⋪",nltrie:"⋬",nmid:"∤",nopf:"𝕟",not:"¬",notin:"∉",notinE:"⋹̸",notindot:"⋵̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",num:"#",numero:"№",numsp:" ",nvDash:"⊭",nvHarr:"⤄",nvap:"≍⃒",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwArr:"⇖",nwarhk:"⤣",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",oS:"Ⓢ",oacute:"ó",oast:"⊛",ocir:"⊚",ocirc:"ô",ocy:"о",odash:"⊝",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",ofcir:"⦿",ofr:"𝔬",ogon:"˛",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",omega:"ω",omicron:"ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",opar:"⦷",operp:"⦹",oplus:"⊕",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oscr:"ℴ",oslash:"ø",osol:"⊘",otilde:"õ",otimes:"⊗",otimesas:"⨶",ouml:"ö",ovbar:"⌽",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",pointint:"⨕",popf:"𝕡",pound:"£",pr:"≺",prE:"⪳",prap:"⪷",prcue:"≼",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",primes:"ℙ",prnE:"⪵",prnap:"⪹",prnsim:"⋨",prod:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",psi:"ψ",puncsp:" ",qfr:"𝔮",qint:"⨌",qopf:"𝕢",qprime:"⁗",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',rAarr:"⇛",rArr:"⇒",rAtail:"⤜",rBarr:"⤏",rHar:"⥤",race:"∽̱",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",rarrw:"↝",ratail:"⤚",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",rcedil:"ŗ",rceil:"⌉",rcub:"}",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",rhov:"ϱ",rightarrow:"→",rightarrowtail:"↣",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",rightthreetimes:"⋌",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",rsaquo:"›",rscr:"𝓇",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",ruluhar:"⥨",rx:"℞",sacute:"ś",sbquo:"‚",sc:"≻",scE:"⪴",scap:"⪸",scaron:"š",sccue:"≽",sce:"⪰",scedil:"ş",scirc:"ŝ",scnE:"⪶",scnap:"⪺",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",seArr:"⇘",searhk:"⤥",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",sfrown:"⌢",sharp:"♯",shchcy:"щ",shcy:"ш",shortmid:"∣",shortparallel:"∥",shy:"­",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",subE:"⫅",subdot:"⪽",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",supE:"⫆",supdot:"⪾",supdsub:"⫘",supe:"⊇",supedot:"⫄",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swArr:"⇙",swarhk:"⤦",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",target:"⌖",tau:"τ",tbrk:"⎴",tcaron:"ť",tcedil:"ţ",tcy:"т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",there4:"∴",therefore:"∴",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",thinsp:" ",thkap:"≈",thksim:"∼",thorn:"þ",tilde:"˜",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",tscy:"ц",tshcy:"ћ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uArr:"⇑",uHar:"⥣",uacute:"ú",uarr:"↑",ubrcy:"ў",ubreve:"ŭ",ucirc:"û",ucy:"у",udarr:"⇅",udblac:"ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",ugrave:"ù",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",uml:"¨",uogon:"ų",uopf:"𝕦",uparrow:"↑",updownarrow:"↕",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",upsi:"υ",upsih:"ϒ",upsilon:"υ",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",urtri:"◹",uscr:"𝓊",utdot:"⋰",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",uwangle:"⦧",vArr:"⇕",vBar:"⫨",vBarv:"⫩",vDash:"⊨",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vcy:"в",vdash:"⊢",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",vert:"|",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",vprop:"∝",vrtri:"⊳",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",vzigzag:"⦚",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",wedgeq:"≙",weierp:"℘",wfr:"𝔴",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",yacy:"я",ycirc:"ŷ",ycy:"ы",yen:"¥",yfr:"𝔶",yicy:"ї",yopf:"𝕪",yscr:"𝓎",yucy:"ю",yuml:"ÿ",zacute:"ź",zcaron:"ž",zcy:"з",zdot:"ż",zeetrf:"ℨ",zeta:"ζ",zfr:"𝔷",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",zscr:"𝓏",zwj:"‍",zwnj:"‌"};const ae={}.hasOwnProperty;function decodeNamedCharacterReference(e){return ae.call(re,e)?re[e]:false}const ne={name:"characterReference",tokenize:tokenizeCharacterReference};function tokenizeCharacterReference(e,t,r){const a=this;let n=0;let i;let o;return start;function start(t){e.enter("characterReference");e.enter("characterReferenceMarker");e.consume(t);e.exit("characterReferenceMarker");return open}function open(t){if(t===35){e.enter("characterReferenceMarkerNumeric");e.consume(t);e.exit("characterReferenceMarkerNumeric");return numeric}e.enter("characterReferenceValue");i=31;o=A;return value(t)}function numeric(t){if(t===88||t===120){e.enter("characterReferenceMarkerHexadecimal");e.consume(t);e.exit("characterReferenceMarkerHexadecimal");e.enter("characterReferenceValue");i=6;o=_;return value}e.enter("characterReferenceValue");i=7;o=D;return value(t)}function value(l){let d;if(l===59&&n){d=e.exit("characterReferenceValue");if(o===A&&!decodeNamedCharacterReference(a.sliceSerialize(d))){return r(l)}e.enter("characterReferenceMarker");e.consume(l);e.exit("characterReferenceMarker");e.exit("characterReference");return t}if(o(l)&&n++<i){e.consume(l);return value}return r(l)}}const ie={name:"characterEscape",tokenize:tokenizeCharacterEscape};function tokenizeCharacterEscape(e,t,r){return start;function start(t){e.enter("characterEscape");e.enter("escapeMarker");e.consume(t);e.exit("escapeMarker");return open}function open(a){if(S(a)){e.enter("characterEscapeValue");e.consume(a);e.exit("characterEscapeValue");e.exit("characterEscape");return t}return r(a)}}const oe={name:"lineEnding",tokenize:tokenizeLineEnding};function tokenizeLineEnding(e,t){return start;function start(r){e.enter("lineEnding");e.consume(r);e.exit("lineEnding");return factorySpace(e,t,"linePrefix")}}const se={name:"labelEnd",tokenize:tokenizeLabelEnd,resolveTo:resolveToLabelEnd,resolveAll:resolveAllLabelEnd};const pe={tokenize:tokenizeResource};const le={tokenize:tokenizeFullReference};const de={tokenize:tokenizeCollapsedReference};function resolveAllLabelEnd(e){let t=-1;let r;while(++t<e.length){r=e[t][1];if(r.type==="labelImage"||r.type==="labelLink"||r.type==="labelEnd"){e.splice(t+1,r.type==="labelImage"?4:2);r.type="data";t++}}return e}function resolveToLabelEnd(e,t){let r=e.length;let a=0;let n;let i;let o;let l;while(r--){n=e[r][1];if(i){if(n.type==="link"||n.type==="labelLink"&&n._inactive){break}if(e[r][0]==="enter"&&n.type==="labelLink"){n._inactive=true}}else if(o){if(e[r][0]==="enter"&&(n.type==="labelImage"||n.type==="labelLink")&&!n._balanced){i=r;if(n.type!=="labelLink"){a=2;break}}}else if(n.type==="labelEnd"){o=r}}const d={type:e[i][1].type==="labelLink"?"link":"image",start:Object.assign({},e[i][1].start),end:Object.assign({},e[e.length-1][1].end)};const u={type:"label",start:Object.assign({},e[i][1].start),end:Object.assign({},e[o][1].end)};const c={type:"labelText",start:Object.assign({},e[i+a+2][1].end),end:Object.assign({},e[o-2][1].start)};l=[["enter",d,t],["enter",u,t]];l=push(l,e.slice(i+1,i+a+3));l=push(l,[["enter",c,t]]);l=push(l,resolveAll(t.parser.constructs.insideSpan.null,e.slice(i+a+4,o-3),t));l=push(l,[["exit",c,t],e[o-2],e[o-1],["exit",u,t]]);l=push(l,e.slice(o+1));l=push(l,[["exit",d,t]]);splice(e,i,e.length,l);return e}function tokenizeLabelEnd(e,t,r){const a=this;let n=a.events.length;let i;let o;while(n--){if((a.events[n][1].type==="labelImage"||a.events[n][1].type==="labelLink")&&!a.events[n][1]._balanced){i=a.events[n][1];break}}return start;function start(t){if(!i){return r(t)}if(i._inactive)return balanced(t);o=a.parser.defined.includes(normalizeIdentifier(a.sliceSerialize({start:i.end,end:a.now()})));e.enter("labelEnd");e.enter("labelMarker");e.consume(t);e.exit("labelMarker");e.exit("labelEnd");return afterLabelEnd}function afterLabelEnd(r){if(r===40){return e.attempt(pe,t,o?t:balanced)(r)}if(r===91){return e.attempt(le,t,o?e.attempt(de,t,balanced):balanced)(r)}return o?t(r):balanced(r)}function balanced(e){i._balanced=true;return r(e)}}function tokenizeResource(e,t,r){return start;function start(t){e.enter("resource");e.enter("resourceMarker");e.consume(t);e.exit("resourceMarker");return factoryWhitespace(e,open)}function open(t){if(t===41){return end(t)}return factoryDestination(e,destinationAfter,r,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",32)(t)}function destinationAfter(t){return markdownLineEndingOrSpace(t)?factoryWhitespace(e,between)(t):end(t)}function between(t){if(t===34||t===39||t===40){return factoryTitle(e,factoryWhitespace(e,end),r,"resourceTitle","resourceTitleMarker","resourceTitleString")(t)}return end(t)}function end(a){if(a===41){e.enter("resourceMarker");e.consume(a);e.exit("resourceMarker");e.exit("resource");return t}return r(a)}}function tokenizeFullReference(e,t,r){const a=this;return start;function start(t){return factoryLabel.call(a,e,afterLabel,r,"reference","referenceMarker","referenceString")(t)}function afterLabel(e){return a.parser.defined.includes(normalizeIdentifier(a.sliceSerialize(a.events[a.events.length-1][1]).slice(1,-1)))?t(e):r(e)}}function tokenizeCollapsedReference(e,t,r){return start;function start(t){e.enter("reference");e.enter("referenceMarker");e.consume(t);e.exit("referenceMarker");return open}function open(a){if(a===93){e.enter("referenceMarker");e.consume(a);e.exit("referenceMarker");e.exit("reference");return t}return r(a)}}const ue={name:"labelStartImage",tokenize:tokenizeLabelStartImage,resolveAll:se.resolveAll};function tokenizeLabelStartImage(e,t,r){const a=this;return start;function start(t){e.enter("labelImage");e.enter("labelImageMarker");e.consume(t);e.exit("labelImageMarker");return open}function open(t){if(t===91){e.enter("labelMarker");e.consume(t);e.exit("labelMarker");e.exit("labelImage");return after}return r(t)}function after(e){return e===94&&"_hiddenFootnoteSupport"in a.parser.constructs?r(e):t(e)}}function classifyCharacter(e){if(e===null||markdownLineEndingOrSpace(e)||C(e)){return 1}if(T(e)){return 2}}const ce={name:"attention",tokenize:tokenizeAttention,resolveAll:resolveAllAttention};function resolveAllAttention(e,t){let r=-1;let a;let n;let i;let o;let l;let d;let u;let c;while(++r<e.length){if(e[r][0]==="enter"&&e[r][1].type==="attentionSequence"&&e[r][1]._close){a=r;while(a--){if(e[a][0]==="exit"&&e[a][1].type==="attentionSequence"&&e[a][1]._open&&t.sliceSerialize(e[a][1]).charCodeAt(0)===t.sliceSerialize(e[r][1]).charCodeAt(0)){if((e[a][1]._close||e[r][1]._open)&&(e[r][1].end.offset-e[r][1].start.offset)%3&&!((e[a][1].end.offset-e[a][1].start.offset+e[r][1].end.offset-e[r][1].start.offset)%3)){continue}d=e[a][1].end.offset-e[a][1].start.offset>1&&e[r][1].end.offset-e[r][1].start.offset>1?2:1;const h=Object.assign({},e[a][1].end);const g=Object.assign({},e[r][1].start);movePoint(h,-d);movePoint(g,d);o={type:d>1?"strongSequence":"emphasisSequence",start:h,end:Object.assign({},e[a][1].end)};l={type:d>1?"strongSequence":"emphasisSequence",start:Object.assign({},e[r][1].start),end:g};i={type:d>1?"strongText":"emphasisText",start:Object.assign({},e[a][1].end),end:Object.assign({},e[r][1].start)};n={type:d>1?"strong":"emphasis",start:Object.assign({},o.start),end:Object.assign({},l.end)};e[a][1].end=Object.assign({},o.start);e[r][1].start=Object.assign({},l.end);u=[];if(e[a][1].end.offset-e[a][1].start.offset){u=push(u,[["enter",e[a][1],t],["exit",e[a][1],t]])}u=push(u,[["enter",n,t],["enter",o,t],["exit",o,t],["enter",i,t]]);u=push(u,resolveAll(t.parser.constructs.insideSpan.null,e.slice(a+1,r),t));u=push(u,[["exit",i,t],["enter",l,t],["exit",l,t],["exit",n,t]]);if(e[r][1].end.offset-e[r][1].start.offset){c=2;u=push(u,[["enter",e[r][1],t],["exit",e[r][1],t]])}else{c=0}splice(e,a-1,r-a+3,u);r=a+u.length-c-2;break}}}}r=-1;while(++r<e.length){if(e[r][1].type==="attentionSequence"){e[r][1].type="data"}}return e}function tokenizeAttention(e,t){const r=this.parser.constructs.attentionMarkers.null;const a=this.previous;const n=classifyCharacter(a);let i;return start;function start(t){e.enter("attentionSequence");i=t;return sequence(t)}function sequence(o){if(o===i){e.consume(o);return sequence}const l=e.exit("attentionSequence");const d=classifyCharacter(o);const u=!d||d===2&&n||r.includes(o);const c=!n||n===2&&d||r.includes(a);l._open=Boolean(i===42?u:u&&(n||!c));l._close=Boolean(i===42?c:c&&(d||!u));return t(o)}}function movePoint(e,t){e.column+=t;e.offset+=t;e._bufferIndex+=t}const me={name:"autolink",tokenize:tokenizeAutolink};function tokenizeAutolink(e,t,r){let a=1;return start;function start(t){e.enter("autolink");e.enter("autolinkMarker");e.consume(t);e.exit("autolinkMarker");e.enter("autolinkProtocol");return open}function open(t){if(E(t)){e.consume(t);return schemeOrEmailAtext}return x(t)?emailAtext(t):r(t)}function schemeOrEmailAtext(e){return e===43||e===45||e===46||A(e)?schemeInsideOrEmailAtext(e):emailAtext(e)}function schemeInsideOrEmailAtext(t){if(t===58){e.consume(t);return urlInside}if((t===43||t===45||t===46||A(t))&&a++<32){e.consume(t);return schemeInsideOrEmailAtext}return emailAtext(t)}function urlInside(t){if(t===62){e.exit("autolinkProtocol");return end(t)}if(t===null||t===32||t===60||asciiControl(t)){return r(t)}e.consume(t);return urlInside}function emailAtext(t){if(t===64){e.consume(t);a=0;return emailAtSignOrDot}if(x(t)){e.consume(t);return emailAtext}return r(t)}function emailAtSignOrDot(e){return A(e)?emailLabel(e):r(e)}function emailLabel(t){if(t===46){e.consume(t);a=0;return emailAtSignOrDot}if(t===62){e.exit("autolinkProtocol").type="autolinkEmail";return end(t)}return emailValue(t)}function emailValue(t){if((t===45||A(t))&&a++<63){e.consume(t);return t===45?emailValue:emailLabel}return r(t)}function end(r){e.enter("autolinkMarker");e.consume(r);e.exit("autolinkMarker");e.exit("autolink");return t}}const fe={name:"htmlText",tokenize:tokenizeHtmlText};function tokenizeHtmlText(e,t,r){const a=this;let n;let i;let o;let l;return start;function start(t){e.enter("htmlText");e.enter("htmlTextData");e.consume(t);return open}function open(t){if(t===33){e.consume(t);return declarationOpen}if(t===47){e.consume(t);return tagCloseStart}if(t===63){e.consume(t);return instruction}if(E(t)){e.consume(t);return tagOpen}return r(t)}function declarationOpen(t){if(t===45){e.consume(t);return commentOpen}if(t===91){e.consume(t);i="CDATA[";o=0;return cdataOpen}if(E(t)){e.consume(t);return declaration}return r(t)}function commentOpen(t){if(t===45){e.consume(t);return commentStart}return r(t)}function commentStart(t){if(t===null||t===62){return r(t)}if(t===45){e.consume(t);return commentStartDash}return comment(t)}function commentStartDash(e){if(e===null||e===62){return r(e)}return comment(e)}function comment(t){if(t===null){return r(t)}if(t===45){e.consume(t);return commentClose}if(markdownLineEnding(t)){l=comment;return atLineEnding(t)}e.consume(t);return comment}function commentClose(t){if(t===45){e.consume(t);return end}return comment(t)}function cdataOpen(t){if(t===i.charCodeAt(o++)){e.consume(t);return o===i.length?cdata:cdataOpen}return r(t)}function cdata(t){if(t===null){return r(t)}if(t===93){e.consume(t);return cdataClose}if(markdownLineEnding(t)){l=cdata;return atLineEnding(t)}e.consume(t);return cdata}function cdataClose(t){if(t===93){e.consume(t);return cdataEnd}return cdata(t)}function cdataEnd(t){if(t===62){return end(t)}if(t===93){e.consume(t);return cdataEnd}return cdata(t)}function declaration(t){if(t===null||t===62){return end(t)}if(markdownLineEnding(t)){l=declaration;return atLineEnding(t)}e.consume(t);return declaration}function instruction(t){if(t===null){return r(t)}if(t===63){e.consume(t);return instructionClose}if(markdownLineEnding(t)){l=instruction;return atLineEnding(t)}e.consume(t);return instruction}function instructionClose(e){return e===62?end(e):instruction(e)}function tagCloseStart(t){if(E(t)){e.consume(t);return tagClose}return r(t)}function tagClose(t){if(t===45||A(t)){e.consume(t);return tagClose}return tagCloseBetween(t)}function tagCloseBetween(t){if(markdownLineEnding(t)){l=tagCloseBetween;return atLineEnding(t)}if(markdownSpace(t)){e.consume(t);return tagCloseBetween}return end(t)}function tagOpen(t){if(t===45||A(t)){e.consume(t);return tagOpen}if(t===47||t===62||markdownLineEndingOrSpace(t)){return tagOpenBetween(t)}return r(t)}function tagOpenBetween(t){if(t===47){e.consume(t);return end}if(t===58||t===95||E(t)){e.consume(t);return tagOpenAttributeName}if(markdownLineEnding(t)){l=tagOpenBetween;return atLineEnding(t)}if(markdownSpace(t)){e.consume(t);return tagOpenBetween}return end(t)}function tagOpenAttributeName(t){if(t===45||t===46||t===58||t===95||A(t)){e.consume(t);return tagOpenAttributeName}return tagOpenAttributeNameAfter(t)}function tagOpenAttributeNameAfter(t){if(t===61){e.consume(t);return tagOpenAttributeValueBefore}if(markdownLineEnding(t)){l=tagOpenAttributeNameAfter;return atLineEnding(t)}if(markdownSpace(t)){e.consume(t);return tagOpenAttributeNameAfter}return tagOpenBetween(t)}function tagOpenAttributeValueBefore(t){if(t===null||t===60||t===61||t===62||t===96){return r(t)}if(t===34||t===39){e.consume(t);n=t;return tagOpenAttributeValueQuoted}if(markdownLineEnding(t)){l=tagOpenAttributeValueBefore;return atLineEnding(t)}if(markdownSpace(t)){e.consume(t);return tagOpenAttributeValueBefore}e.consume(t);n=undefined;return tagOpenAttributeValueUnquoted}function tagOpenAttributeValueQuoted(t){if(t===n){e.consume(t);return tagOpenAttributeValueQuotedAfter}if(t===null){return r(t)}if(markdownLineEnding(t)){l=tagOpenAttributeValueQuoted;return atLineEnding(t)}e.consume(t);return tagOpenAttributeValueQuoted}function tagOpenAttributeValueQuotedAfter(e){if(e===62||e===47||markdownLineEndingOrSpace(e)){return tagOpenBetween(e)}return r(e)}function tagOpenAttributeValueUnquoted(t){if(t===null||t===34||t===39||t===60||t===61||t===96){return r(t)}if(t===62||markdownLineEndingOrSpace(t)){return tagOpenBetween(t)}e.consume(t);return tagOpenAttributeValueUnquoted}function atLineEnding(t){e.exit("htmlTextData");e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return factorySpace(e,afterPrefix,"linePrefix",a.parser.constructs.disable.null.includes("codeIndented")?undefined:4)}function afterPrefix(t){e.enter("htmlTextData");return l(t)}function end(a){if(a===62){e.consume(a);e.exit("htmlTextData");e.exit("htmlText");return t}return r(a)}}const he={name:"labelStartLink",tokenize:tokenizeLabelStartLink,resolveAll:se.resolveAll};function tokenizeLabelStartLink(e,t,r){const a=this;return start;function start(t){e.enter("labelLink");e.enter("labelMarker");e.consume(t);e.exit("labelMarker");e.exit("labelLink");return after}function after(e){return e===94&&"_hiddenFootnoteSupport"in a.parser.constructs?r(e):t(e)}}const ge={name:"hardBreakEscape",tokenize:tokenizeHardBreakEscape};function tokenizeHardBreakEscape(e,t,r){return start;function start(t){e.enter("hardBreakEscape");e.enter("escapeMarker");e.consume(t);return open}function open(a){if(markdownLineEnding(a)){e.exit("escapeMarker");e.exit("hardBreakEscape");return t(a)}return r(a)}}const ve={name:"codeText",tokenize:tokenizeCodeText,resolve:resolveCodeText,previous:previous};function resolveCodeText(e){let t=e.length-4;let r=3;let a;let n;if((e[r][1].type==="lineEnding"||e[r][1].type==="space")&&(e[t][1].type==="lineEnding"||e[t][1].type==="space")){a=r;while(++a<t){if(e[a][1].type==="codeTextData"){e[r][1].type="codeTextPadding";e[t][1].type="codeTextPadding";r+=2;t-=2;break}}}a=r-1;t++;while(++a<=t){if(n===undefined){if(a!==t&&e[a][1].type!=="lineEnding"){n=a}}else if(a===t||e[a][1].type==="lineEnding"){e[n][1].type="codeTextData";if(a!==n+2){e[n][1].end=e[a-1][1].end;e.splice(n+2,a-n-2);t-=a-n-2;a=n+2}n=undefined}}return e}function previous(e){return e!==96||this.events[this.events.length-1][1].type==="characterEscape"}function tokenizeCodeText(e,t,r){const a=this;let n=0;let i;let o;return start;function start(t){e.enter("codeText");e.enter("codeTextSequence");return openingSequence(t)}function openingSequence(t){if(t===96){e.consume(t);n++;return openingSequence}e.exit("codeTextSequence");return gap(t)}function gap(t){if(t===null){return r(t)}if(t===96){o=e.enter("codeTextSequence");i=0;return closingSequence(t)}if(t===32){e.enter("space");e.consume(t);e.exit("space");return gap}if(markdownLineEnding(t)){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return gap}e.enter("codeTextData");return data(t)}function data(t){if(t===null||t===32||t===96||markdownLineEnding(t)){e.exit("codeTextData");return gap(t)}e.consume(t);return data}function closingSequence(r){if(r===96){e.consume(r);i++;return closingSequence}if(i===n){e.exit("codeTextSequence");e.exit("codeText");return t(r)}o.type="codeTextData";return data(r)}}const we={[42]:G,[43]:G,[45]:G,[48]:G,[49]:G,[50]:G,[51]:G,[52]:G,[53]:G,[54]:G,[55]:G,[56]:G,[57]:G,[62]:M};const be={[91]:H};const ye={[-2]:W,[-1]:W,[32]:W};const ke={[35]:K,[42]:U,[45]:[J,U],[60]:X,[61]:J,[95]:U,[96]:te,[126]:te};const Ee={[38]:ne,[92]:ie};const De={[-5]:oe,[-4]:oe,[-3]:oe,[33]:ue,[38]:ne,[42]:ce,[60]:[me,fe],[91]:he,[92]:[ge,ie],[93]:se,[95]:ce,[96]:ve};const _e={null:[ce,j]};const Ae={null:[42,95]};const Se={null:[]};function parse(t={}){const r=combineExtensions([e].concat(t.extensions||[]));const a={defined:[],lazy:{},constructs:r,content:create(F),document:create(O),flow:create(N),string:create(I),text:create(q)};return a;function create(e){return creator;function creator(t){return createTokenizer(a,e,t)}}}const xe=/[\0\t\n\r]/g;function preprocess(){let e=1;let t="";let r=true;let a;return preprocessor;function preprocessor(n,i,o){const l=[];let d;let u;let c;let h;let g;n=t+n.toString(i);c=0;t="";if(r){if(n.charCodeAt(0)===65279){c++}r=undefined}while(c<n.length){xe.lastIndex=c;d=xe.exec(n);h=d&&d.index!==undefined?d.index:n.length;g=n.charCodeAt(h);if(!d){t=n.slice(c);break}if(g===10&&c===h&&a){l.push(-3);a=undefined}else{if(a){l.push(-5);a=undefined}if(c<h){l.push(n.slice(c,h));e+=h-c}switch(g){case 0:{l.push(65533);e++;break}case 9:{u=Math.ceil(e/4)*4;l.push(-2);while(e++<u)l.push(-1);break}case 10:{l.push(-4);e=1;break}default:{a=true;e=1}}}c=h+1}if(o){if(a)l.push(-5);if(t)l.push(t);l.push(null)}return l}}function postprocess(e){while(!subtokenize(e)){}return e}function decodeNumericCharacterReference(e,t){const r=Number.parseInt(e,t);if(r<9||r===11||r>13&&r<32||r>126&&r<160||r>55295&&r<57344||r>64975&&r<65008||(r&65535)===65535||(r&65535)===65534||r>1114111){return"�"}return String.fromCharCode(r)}const Ce=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function decodeString(e){return e.replace(Ce,decode)}function decode(e,t,r){if(t){return t}const a=r.charCodeAt(0);if(a===35){const e=r.charCodeAt(1);const t=e===120||e===88;return decodeNumericCharacterReference(r.slice(t?2:1),t?16:10)}return decodeNamedCharacterReference(r)||e}const Te={}.hasOwnProperty;const fromMarkdown=function(e,t,r){if(typeof t!=="string"){r=t;t=undefined}return compiler(r)(postprocess(parse(r).document().write(preprocess()(e,t,true))))};function compiler(e={}){const t=configure({transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:opener(link),autolinkProtocol:onenterdata,autolinkEmail:onenterdata,atxHeading:opener(heading),blockQuote:opener(blockQuote),characterEscape:onenterdata,characterReference:onenterdata,codeFenced:opener(codeFlow),codeFencedFenceInfo:buffer,codeFencedFenceMeta:buffer,codeIndented:opener(codeFlow,buffer),codeText:opener(codeText,buffer),codeTextData:onenterdata,data:onenterdata,codeFlowValue:onenterdata,definition:opener(definition),definitionDestinationString:buffer,definitionLabelString:buffer,definitionTitleString:buffer,emphasis:opener(emphasis),hardBreakEscape:opener(hardBreak),hardBreakTrailing:opener(hardBreak),htmlFlow:opener(html,buffer),htmlFlowData:onenterdata,htmlText:opener(html,buffer),htmlTextData:onenterdata,image:opener(image),label:buffer,link:opener(link),listItem:opener(listItem),listItemValue:onenterlistitemvalue,listOrdered:opener(list,onenterlistordered),listUnordered:opener(list),paragraph:opener(paragraph),reference:onenterreference,referenceString:buffer,resourceDestinationString:buffer,resourceTitleString:buffer,setextHeading:opener(heading),strong:opener(strong),thematicBreak:opener(thematicBreak)},exit:{atxHeading:closer(),atxHeadingSequence:onexitatxheadingsequence,autolink:closer(),autolinkEmail:onexitautolinkemail,autolinkProtocol:onexitautolinkprotocol,blockQuote:closer(),characterEscapeValue:onexitdata,characterReferenceMarkerHexadecimal:onexitcharacterreferencemarker,characterReferenceMarkerNumeric:onexitcharacterreferencemarker,characterReferenceValue:onexitcharacterreferencevalue,codeFenced:closer(onexitcodefenced),codeFencedFence:onexitcodefencedfence,codeFencedFenceInfo:onexitcodefencedfenceinfo,codeFencedFenceMeta:onexitcodefencedfencemeta,codeFlowValue:onexitdata,codeIndented:closer(onexitcodeindented),codeText:closer(onexitcodetext),codeTextData:onexitdata,data:onexitdata,definition:closer(),definitionDestinationString:onexitdefinitiondestinationstring,definitionLabelString:onexitdefinitionlabelstring,definitionTitleString:onexitdefinitiontitlestring,emphasis:closer(),hardBreakEscape:closer(onexithardbreak),hardBreakTrailing:closer(onexithardbreak),htmlFlow:closer(onexithtmlflow),htmlFlowData:onexitdata,htmlText:closer(onexithtmltext),htmlTextData:onexitdata,image:closer(onexitimage),label:onexitlabel,labelText:onexitlabeltext,lineEnding:onexitlineending,link:closer(onexitlink),listItem:closer(),listOrdered:closer(),listUnordered:closer(),paragraph:closer(),referenceString:onexitreferencestring,resourceDestinationString:onexitresourcedestinationstring,resourceTitleString:onexitresourcetitlestring,resource:onexitresource,setextHeading:closer(onexitsetextheading),setextHeadingLineSequence:onexitsetextheadinglinesequence,setextHeadingText:onexitsetextheadingtext,strong:closer(),thematicBreak:closer()}},e.mdastExtensions||[]);const r={};return compile;function compile(e){let r={type:"root",children:[]};const a=[r];const n=[];const i=[];const o={stack:a,tokenStack:n,config:t,enter:enter,exit:exit,buffer:buffer,resume:resume,setData:setData,getData:getData};let l=-1;while(++l<e.length){if(e[l][1].type==="listOrdered"||e[l][1].type==="listUnordered"){if(e[l][0]==="enter"){i.push(l)}else{const t=i.pop();l=prepareList(e,t,l)}}}l=-1;while(++l<e.length){const r=t[e[l][0]];if(Te.call(r,e[l][1].type)){r[e[l][1].type].call(Object.assign({sliceSerialize:e[l][2].sliceSerialize},o),e[l][1])}}if(n.length>0){const e=n[n.length-1];const t=e[1]||defaultOnError;t.call(o,undefined,e[0])}r.position={start:point(e.length>0?e[0][1].start:{line:1,column:1,offset:0}),end:point(e.length>0?e[e.length-2][1].end:{line:1,column:1,offset:0})};l=-1;while(++l<t.transforms.length){r=t.transforms[l](r)||r}return r}function prepareList(e,t,r){let a=t-1;let n=-1;let i=false;let o;let l;let d;let u;while(++a<=r){const t=e[a];if(t[1].type==="listUnordered"||t[1].type==="listOrdered"||t[1].type==="blockQuote"){if(t[0]==="enter"){n++}else{n--}u=undefined}else if(t[1].type==="lineEndingBlank"){if(t[0]==="enter"){if(o&&!u&&!n&&!d){d=a}u=undefined}}else if(t[1].type==="linePrefix"||t[1].type==="listItemValue"||t[1].type==="listItemMarker"||t[1].type==="listItemPrefix"||t[1].type==="listItemPrefixWhitespace"){}else{u=undefined}if(!n&&t[0]==="enter"&&t[1].type==="listItemPrefix"||n===-1&&t[0]==="exit"&&(t[1].type==="listUnordered"||t[1].type==="listOrdered")){if(o){let n=a;l=undefined;while(n--){const t=e[n];if(t[1].type==="lineEnding"||t[1].type==="lineEndingBlank"){if(t[0]==="exit")continue;if(l){e[l][1].type="lineEndingBlank";i=true}t[1].type="lineEnding";l=n}else if(t[1].type==="linePrefix"||t[1].type==="blockQuotePrefix"||t[1].type==="blockQuotePrefixWhitespace"||t[1].type==="blockQuoteMarker"||t[1].type==="listItemIndent"){}else{break}}if(d&&(!l||d<l)){o._spread=true}o.end=Object.assign({},l?e[l][1].start:t[1].end);e.splice(l||a,0,["exit",o,t[2]]);a++;r++}if(t[1].type==="listItemPrefix"){o={type:"listItem",_spread:false,start:Object.assign({},t[1].start)};e.splice(a,0,["enter",o,t[2]]);a++;r++;d=undefined;u=true}}}e[t][1]._spread=i;return r}function setData(e,t){r[e]=t}function getData(e){return r[e]}function point(e){return{line:e.line,column:e.column,offset:e.offset}}function opener(e,t){return open;function open(r){enter.call(this,e(r),r);if(t)t.call(this,r)}}function buffer(){this.stack.push({type:"fragment",children:[]})}function enter(e,t,r){const a=this.stack[this.stack.length-1];a.children.push(e);this.stack.push(e);this.tokenStack.push([t,r]);e.position={start:point(t.start)};return e}function closer(e){return close;function close(t){if(e)e.call(this,t);exit.call(this,t)}}function exit(e,t){const r=this.stack.pop();const a=this.tokenStack.pop();if(!a){throw new Error("Cannot close `"+e.type+"` ("+stringifyPosition({start:e.start,end:e.end})+"): it’s not open")}else if(a[0].type!==e.type){if(t){t.call(this,e,a[0])}else{const t=a[1]||defaultOnError;t.call(this,e,a[0])}}r.position.end=point(e.end);return r}function resume(){return mdast_util_to_string_toString(this.stack.pop())}function onenterlistordered(){setData("expectingFirstListItemValue",true)}function onenterlistitemvalue(e){if(getData("expectingFirstListItemValue")){const t=this.stack[this.stack.length-2];t.start=Number.parseInt(this.sliceSerialize(e),10);setData("expectingFirstListItemValue")}}function onexitcodefencedfenceinfo(){const e=this.resume();const t=this.stack[this.stack.length-1];t.lang=e}function onexitcodefencedfencemeta(){const e=this.resume();const t=this.stack[this.stack.length-1];t.meta=e}function onexitcodefencedfence(){if(getData("flowCodeInside"))return;this.buffer();setData("flowCodeInside",true)}function onexitcodefenced(){const e=this.resume();const t=this.stack[this.stack.length-1];t.value=e.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,"");setData("flowCodeInside")}function onexitcodeindented(){const e=this.resume();const t=this.stack[this.stack.length-1];t.value=e.replace(/(\r?\n|\r)$/g,"")}function onexitdefinitionlabelstring(e){const t=this.resume();const r=this.stack[this.stack.length-1];r.label=t;r.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase()}function onexitdefinitiontitlestring(){const e=this.resume();const t=this.stack[this.stack.length-1];t.title=e}function onexitdefinitiondestinationstring(){const e=this.resume();const t=this.stack[this.stack.length-1];t.url=e}function onexitatxheadingsequence(e){const t=this.stack[this.stack.length-1];if(!t.depth){const r=this.sliceSerialize(e).length;t.depth=r}}function onexitsetextheadingtext(){setData("setextHeadingSlurpLineEnding",true)}function onexitsetextheadinglinesequence(e){const t=this.stack[this.stack.length-1];t.depth=this.sliceSerialize(e).charCodeAt(0)===61?1:2}function onexitsetextheading(){setData("setextHeadingSlurpLineEnding")}function onenterdata(e){const t=this.stack[this.stack.length-1];let r=t.children[t.children.length-1];if(!r||r.type!=="text"){r=text();r.position={start:point(e.start)};t.children.push(r)}this.stack.push(r)}function onexitdata(e){const t=this.stack.pop();t.value+=this.sliceSerialize(e);t.position.end=point(e.end)}function onexitlineending(e){const r=this.stack[this.stack.length-1];if(getData("atHardBreak")){const t=r.children[r.children.length-1];t.position.end=point(e.end);setData("atHardBreak");return}if(!getData("setextHeadingSlurpLineEnding")&&t.canContainEols.includes(r.type)){onenterdata.call(this,e);onexitdata.call(this,e)}}function onexithardbreak(){setData("atHardBreak",true)}function onexithtmlflow(){const e=this.resume();const t=this.stack[this.stack.length-1];t.value=e}function onexithtmltext(){const e=this.resume();const t=this.stack[this.stack.length-1];t.value=e}function onexitcodetext(){const e=this.resume();const t=this.stack[this.stack.length-1];t.value=e}function onexitlink(){const e=this.stack[this.stack.length-1];if(getData("inReference")){e.type+="Reference";e.referenceType=getData("referenceType")||"shortcut";delete e.url;delete e.title}else{delete e.identifier;delete e.label}setData("referenceType")}function onexitimage(){const e=this.stack[this.stack.length-1];if(getData("inReference")){e.type+="Reference";e.referenceType=getData("referenceType")||"shortcut";delete e.url;delete e.title}else{delete e.identifier;delete e.label}setData("referenceType")}function onexitlabeltext(e){const t=this.stack[this.stack.length-2];const r=this.sliceSerialize(e);t.label=decodeString(r);t.identifier=normalizeIdentifier(r).toLowerCase()}function onexitlabel(){const e=this.stack[this.stack.length-1];const t=this.resume();const r=this.stack[this.stack.length-1];setData("inReference",true);if(r.type==="link"){r.children=e.children}else{r.alt=t}}function onexitresourcedestinationstring(){const e=this.resume();const t=this.stack[this.stack.length-1];t.url=e}function onexitresourcetitlestring(){const e=this.resume();const t=this.stack[this.stack.length-1];t.title=e}function onexitresource(){setData("inReference")}function onenterreference(){setData("referenceType","collapsed")}function onexitreferencestring(e){const t=this.resume();const r=this.stack[this.stack.length-1];r.label=t;r.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase();setData("referenceType","full")}function onexitcharacterreferencemarker(e){setData("characterReferenceType",e.type)}function onexitcharacterreferencevalue(e){const t=this.sliceSerialize(e);const r=getData("characterReferenceType");let a;if(r){a=decodeNumericCharacterReference(t,r==="characterReferenceMarkerNumeric"?10:16);setData("characterReferenceType")}else{a=decodeNamedCharacterReference(t)}const n=this.stack.pop();n.value+=a;n.position.end=point(e.end)}function onexitautolinkprotocol(e){onexitdata.call(this,e);const t=this.stack[this.stack.length-1];t.url=this.sliceSerialize(e)}function onexitautolinkemail(e){onexitdata.call(this,e);const t=this.stack[this.stack.length-1];t.url="mailto:"+this.sliceSerialize(e)}function blockQuote(){return{type:"blockquote",children:[]}}function codeFlow(){return{type:"code",lang:null,meta:null,value:""}}function codeText(){return{type:"inlineCode",value:""}}function definition(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function emphasis(){return{type:"emphasis",children:[]}}function heading(){return{type:"heading",depth:undefined,children:[]}}function hardBreak(){return{type:"break"}}function html(){return{type:"html",value:""}}function image(){return{type:"image",title:null,url:"",alt:null}}function link(){return{type:"link",title:null,url:"",children:[]}}function list(e){return{type:"list",ordered:e.type==="listOrdered",start:null,spread:e._spread,children:[]}}function listItem(e){return{type:"listItem",spread:e._spread,checked:null,children:[]}}function paragraph(){return{type:"paragraph",children:[]}}function strong(){return{type:"strong",children:[]}}function text(){return{type:"text",value:""}}function thematicBreak(){return{type:"thematicBreak"}}}function configure(e,t){let r=-1;while(++r<t.length){const a=t[r];if(Array.isArray(a)){configure(e,a)}else{extension(e,a)}}return e}function extension(e,t){let r;for(r in t){if(Te.call(t,r)){const a=r==="canContainEols"||r==="transforms";const n=Te.call(e,r)?e[r]:undefined;const i=n||(e[r]=a?[]:{});const o=t[r];if(o){if(a){e[r]=[...i,...o]}else{Object.assign(i,o)}}}}}function defaultOnError(e,t){if(e){throw new Error("Cannot close `"+e.type+"` ("+stringifyPosition({start:e.start,end:e.end})+"): a different token (`"+t.type+"`, "+stringifyPosition({start:t.start,end:t.end})+") is open")}else{throw new Error("Cannot close document, a token (`"+t.type+"`, "+stringifyPosition({start:t.start,end:t.end})+") is still open")}}function lib_remarkParse(e){const parser=t=>{const r=this.data("settings");return fromMarkdown(t,Object.assign({},r,e,{extensions:this.data("micromarkExtensions")||[],mdastExtensions:this.data("fromMarkdownExtensions")||[]}))};Object.assign(this,{Parser:parser})}const Fe=lib_remarkParse;const Oe={tokenize:tokenizeWww,partial:true};const Pe={tokenize:tokenizeDomain,partial:true};const Le={tokenize:tokenizePath,partial:true};const Re={tokenize:tokenizePunctuation,partial:true};const Be={tokenize:tokenizeNamedCharacterReference,partial:true};const Ne={tokenize:tokenizeWwwAutolink,previous:previousWww};const je={tokenize:tokenizeHttpAutolink,previous:previousHttp};const Ie={tokenize:tokenizeEmailAutolink,previous:previousEmail};const qe={};const Ue={text:qe};let Ge=48;while(Ge<123){qe[Ge]=Ie;Ge++;if(Ge===58)Ge=65;else if(Ge===91)Ge=97}qe[43]=Ie;qe[45]=Ie;qe[46]=Ie;qe[95]=Ie;qe[72]=[Ie,je];qe[104]=[Ie,je];qe[87]=[Ie,Ne];qe[119]=[Ie,Ne];function tokenizeEmailAutolink(e,t,r){const a=this;let n;let i;return start;function start(t){if(!gfmAtext(t)||!previousEmail(a.previous)||previousUnbalanced(a.events)){return r(t)}e.enter("literalAutolink");e.enter("literalAutolinkEmail");return atext(t)}function atext(t){if(gfmAtext(t)){e.consume(t);return atext}if(t===64){e.consume(t);return label}return r(t)}function label(t){if(t===46){return e.check(Re,done,dotContinuation)(t)}if(t===45||t===95){return e.check(Re,r,dashOrUnderscoreContinuation)(t)}if(A(t)){if(!i&&D(t)){i=true}e.consume(t);return label}return done(t)}function dotContinuation(t){e.consume(t);n=true;i=undefined;return label}function dashOrUnderscoreContinuation(t){e.consume(t);return afterDashOrUnderscore}function afterDashOrUnderscore(t){if(t===46){return e.check(Re,r,dotContinuation)(t)}return label(t)}function done(a){if(n&&!i){e.exit("literalAutolinkEmail");e.exit("literalAutolink");return t(a)}return r(a)}}function tokenizeWwwAutolink(e,t,r){const a=this;return start;function start(t){if(t!==87&&t!==119||!previousWww(a.previous)||previousUnbalanced(a.events)){return r(t)}e.enter("literalAutolink");e.enter("literalAutolinkWww");return e.check(Oe,e.attempt(Pe,e.attempt(Le,done),r),r)(t)}function done(r){e.exit("literalAutolinkWww");e.exit("literalAutolink");return t(r)}}function tokenizeHttpAutolink(e,t,r){const a=this;return start;function start(t){if(t!==72&&t!==104||!previousHttp(a.previous)||previousUnbalanced(a.events)){return r(t)}e.enter("literalAutolink");e.enter("literalAutolinkHttp");e.consume(t);return t1}function t1(t){if(t===84||t===116){e.consume(t);return t2}return r(t)}function t2(t){if(t===84||t===116){e.consume(t);return p}return r(t)}function p(t){if(t===80||t===112){e.consume(t);return s}return r(t)}function s(t){if(t===83||t===115){e.consume(t);return colon}return colon(t)}function colon(t){if(t===58){e.consume(t);return slash1}return r(t)}function slash1(t){if(t===47){e.consume(t);return slash2}return r(t)}function slash2(t){if(t===47){e.consume(t);return after}return r(t)}function after(t){return t===null||asciiControl(t)||C(t)||T(t)?r(t):e.attempt(Pe,e.attempt(Le,done),r)(t)}function done(r){e.exit("literalAutolinkHttp");e.exit("literalAutolink");return t(r)}}function tokenizeWww(e,t,r){return start;function start(t){e.consume(t);return w2}function w2(t){if(t===87||t===119){e.consume(t);return w3}return r(t)}function w3(t){if(t===87||t===119){e.consume(t);return dot}return r(t)}function dot(t){if(t===46){e.consume(t);return after}return r(t)}function after(e){return e===null||markdownLineEnding(e)?r(e):t(e)}}function tokenizeDomain(e,t,r){let a;let n;return domain;function domain(t){if(t===38){return e.check(Be,done,punctuationContinuation)(t)}if(t===46||t===95){return e.check(Re,done,punctuationContinuation)(t)}if(t===null||asciiControl(t)||C(t)||t!==45&&T(t)){return done(t)}e.consume(t);return domain}function punctuationContinuation(t){if(t===46){n=a;a=undefined;e.consume(t);return domain}if(t===95)a=true;e.consume(t);return domain}function done(e){if(!n&&!a){return t(e)}return r(e)}}function tokenizePath(e,t){let r=0;return inPath;function inPath(a){if(a===38){return e.check(Be,t,continuedPunctuation)(a)}if(a===40){r++}if(a===41){return e.check(Re,parenAtPathEnd,continuedPunctuation)(a)}if(pathEnd(a)){return t(a)}if(trailingPunctuation(a)){return e.check(Re,t,continuedPunctuation)(a)}e.consume(a);return inPath}function continuedPunctuation(t){e.consume(t);return inPath}function parenAtPathEnd(e){r--;return r<0?t(e):continuedPunctuation(e)}}function tokenizeNamedCharacterReference(e,t,r){return start;function start(t){e.consume(t);return inside}function inside(t){if(E(t)){e.consume(t);return inside}if(t===59){e.consume(t);return after}return r(t)}function after(e){return pathEnd(e)?t(e):r(e)}}function tokenizePunctuation(e,t,r){return start;function start(t){e.consume(t);return after}function after(a){if(trailingPunctuation(a)){e.consume(a);return after}return pathEnd(a)?t(a):r(a)}}function trailingPunctuation(e){return e===33||e===34||e===39||e===41||e===42||e===44||e===46||e===58||e===59||e===60||e===63||e===95||e===126}function pathEnd(e){return e===null||e===60||markdownLineEndingOrSpace(e)}function gfmAtext(e){return e===43||e===45||e===46||e===95||A(e)}function previousWww(e){return e===null||e===40||e===42||e===95||e===126||markdownLineEndingOrSpace(e)}function previousHttp(e){return e===null||!E(e)}function previousEmail(e){return e!==47&&previousHttp(e)}function previousUnbalanced(e){let t=e.length;let r=false;while(t--){const a=e[t][1];if((a.type==="labelLink"||a.type==="labelImage")&&!a._balanced){r=true;break}if(a._gfmAutolinkLiteralWalkedInto){r=false;break}}if(e.length>0&&!r){e[e.length-1][1]._gfmAutolinkLiteralWalkedInto=true}return r}const Ve={tokenize:syntax_tokenizeIndent,partial:true};function gfmFootnote(){return{document:{[91]:{tokenize:tokenizeDefinitionStart,continuation:{tokenize:tokenizeDefinitionContinuation},exit:gfmFootnoteDefinitionEnd}},text:{[91]:{tokenize:tokenizeGfmFootnoteCall},[93]:{add:"after",tokenize:tokenizePotentialGfmFootnoteCall,resolveTo:resolveToPotentialGfmFootnoteCall}}}}function tokenizePotentialGfmFootnoteCall(e,t,r){const a=this;let n=a.events.length;const i=a.parser.gfmFootnotes||(a.parser.gfmFootnotes=[]);let o;while(n--){const e=a.events[n][1];if(e.type==="labelImage"){o=e;break}if(e.type==="gfmFootnoteCall"||e.type==="labelLink"||e.type==="label"||e.type==="image"||e.type==="link"){break}}return start;function start(n){if(!o||!o._balanced){return r(n)}const l=normalizeIdentifier(a.sliceSerialize({start:o.end,end:a.now()}));if(l.charCodeAt(0)!==94||!i.includes(l.slice(1))){return r(n)}e.enter("gfmFootnoteCallLabelMarker");e.consume(n);e.exit("gfmFootnoteCallLabelMarker");return t(n)}}function resolveToPotentialGfmFootnoteCall(e,t){let r=e.length;let a;while(r--){if(e[r][1].type==="labelImage"&&e[r][0]==="enter"){a=e[r][1];break}}e[r+1][1].type="data";e[r+3][1].type="gfmFootnoteCallLabelMarker";const n={type:"gfmFootnoteCall",start:Object.assign({},e[r+3][1].start),end:Object.assign({},e[e.length-1][1].end)};const i={type:"gfmFootnoteCallMarker",start:Object.assign({},e[r+3][1].end),end:Object.assign({},e[r+3][1].end)};i.end.column++;i.end.offset++;i.end._bufferIndex++;const o={type:"gfmFootnoteCallString",start:Object.assign({},i.end),end:Object.assign({},e[e.length-1][1].start)};const l={type:"chunkString",contentType:"string",start:Object.assign({},o.start),end:Object.assign({},o.end)};const d=[e[r+1],e[r+2],["enter",n,t],e[r+3],e[r+4],["enter",i,t],["exit",i,t],["enter",o,t],["enter",l,t],["exit",l,t],["exit",o,t],e[e.length-2],e[e.length-1],["exit",n,t]];e.splice(r,e.length-r+1,...d);return e}function tokenizeGfmFootnoteCall(e,t,r){const a=this;const n=a.parser.gfmFootnotes||(a.parser.gfmFootnotes=[]);let i=0;let o;return start;function start(t){e.enter("gfmFootnoteCall");e.enter("gfmFootnoteCallLabelMarker");e.consume(t);e.exit("gfmFootnoteCallLabelMarker");return callStart}function callStart(t){if(t!==94)return r(t);e.enter("gfmFootnoteCallMarker");e.consume(t);e.exit("gfmFootnoteCallMarker");e.enter("gfmFootnoteCallString");e.enter("chunkString").contentType="string";return callData}function callData(t){let l;if(t===null||t===91||i++>999){return r(t)}if(t===93){if(!o){return r(t)}e.exit("chunkString");l=e.exit("gfmFootnoteCallString");return n.includes(normalizeIdentifier(a.sliceSerialize(l)))?end(t):r(t)}e.consume(t);if(!markdownLineEndingOrSpace(t)){o=true}return t===92?callEscape:callData}function callEscape(t){if(t===91||t===92||t===93){e.consume(t);i++;return callData}return callData(t)}function end(r){e.enter("gfmFootnoteCallLabelMarker");e.consume(r);e.exit("gfmFootnoteCallLabelMarker");e.exit("gfmFootnoteCall");return t}}function tokenizeDefinitionStart(e,t,r){const a=this;const n=a.parser.gfmFootnotes||(a.parser.gfmFootnotes=[]);let i;let o=0;let l;return start;function start(t){e.enter("gfmFootnoteDefinition")._container=true;e.enter("gfmFootnoteDefinitionLabel");e.enter("gfmFootnoteDefinitionLabelMarker");e.consume(t);e.exit("gfmFootnoteDefinitionLabelMarker");return labelStart}function labelStart(t){if(t===94){e.enter("gfmFootnoteDefinitionMarker");e.consume(t);e.exit("gfmFootnoteDefinitionMarker");e.enter("gfmFootnoteDefinitionLabelString");return atBreak}return r(t)}function atBreak(t){let n;if(t===null||t===91||o>999){return r(t)}if(t===93){if(!l){return r(t)}n=e.exit("gfmFootnoteDefinitionLabelString");i=normalizeIdentifier(a.sliceSerialize(n));e.enter("gfmFootnoteDefinitionLabelMarker");e.consume(t);e.exit("gfmFootnoteDefinitionLabelMarker");e.exit("gfmFootnoteDefinitionLabel");return labelAfter}if(markdownLineEnding(t)){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");o++;return atBreak}e.enter("chunkString").contentType="string";return label(t)}function label(t){if(t===null||markdownLineEnding(t)||t===91||t===93||o>999){e.exit("chunkString");return atBreak(t)}if(!markdownLineEndingOrSpace(t)){l=true}o++;e.consume(t);return t===92?labelEscape:label}function labelEscape(t){if(t===91||t===92||t===93){e.consume(t);o++;return label}return label(t)}function labelAfter(t){if(t===58){e.enter("definitionMarker");e.consume(t);e.exit("definitionMarker");return factorySpace(e,done,"gfmFootnoteDefinitionWhitespace")}return r(t)}function done(e){if(!n.includes(i)){n.push(i)}return t(e)}}function tokenizeDefinitionContinuation(e,t,r){return e.check(L,t,e.attempt(Ve,t,r))}function gfmFootnoteDefinitionEnd(e){e.exit("gfmFootnoteDefinition")}function syntax_tokenizeIndent(e,t,r){const a=this;return factorySpace(e,afterPrefix,"gfmFootnoteDefinitionIndent",4+1);function afterPrefix(e){const n=a.events[a.events.length-1];return n&&n[1].type==="gfmFootnoteDefinitionIndent"&&n[2].sliceSerialize(n[1],true).length===4?t(e):r(e)}}function gfmStrikethrough(e={}){let t=e.singleTilde;const r={tokenize:tokenizeStrikethrough,resolveAll:resolveAllStrikethrough};if(t===null||t===undefined){t=true}return{text:{[126]:r},insideSpan:{null:[r]},attentionMarkers:{null:[126]}};function resolveAllStrikethrough(e,t){let r=-1;while(++r<e.length){if(e[r][0]==="enter"&&e[r][1].type==="strikethroughSequenceTemporary"&&e[r][1]._close){let a=r;while(a--){if(e[a][0]==="exit"&&e[a][1].type==="strikethroughSequenceTemporary"&&e[a][1]._open&&e[r][1].end.offset-e[r][1].start.offset===e[a][1].end.offset-e[a][1].start.offset){e[r][1].type="strikethroughSequence";e[a][1].type="strikethroughSequence";const n={type:"strikethrough",start:Object.assign({},e[a][1].start),end:Object.assign({},e[r][1].end)};const i={type:"strikethroughText",start:Object.assign({},e[a][1].end),end:Object.assign({},e[r][1].start)};const o=[["enter",n,t],["enter",e[a][1],t],["exit",e[a][1],t],["enter",i,t]];splice(o,o.length,0,resolveAll(t.parser.constructs.insideSpan.null,e.slice(a+1,r),t));splice(o,o.length,0,[["exit",i,t],["enter",e[r][1],t],["exit",e[r][1],t],["exit",n,t]]);splice(e,a-1,r-a+3,o);r=a+o.length-2;break}}}}r=-1;while(++r<e.length){if(e[r][1].type==="strikethroughSequenceTemporary"){e[r][1].type="data"}}return e}function tokenizeStrikethrough(e,r,a){const n=this.previous;const i=this.events;let o=0;return start;function start(t){if(n===126&&i[i.length-1][1].type!=="characterEscape"){return a(t)}e.enter("strikethroughSequenceTemporary");return more(t)}function more(i){const l=classifyCharacter(n);if(i===126){if(o>1)return a(i);e.consume(i);o++;return more}if(o<2&&!t)return a(i);const d=e.exit("strikethroughSequenceTemporary");const u=classifyCharacter(i);d._open=!u||u===2&&Boolean(l);d._close=!l||l===2&&Boolean(u);return r(i)}}}const ze={flow:{null:{tokenize:tokenizeTable,resolve:resolveTable}}};const Me={tokenize:tokenizeNextPrefixedOrBlank,partial:true};function resolveTable(e,t){let r=-1;let a;let n;let i;let o;let l;let d;let u;while(++r<e.length){const c=e[r][1];if(i){if(c.type==="temporaryTableCellContent"){o=o||r;l=r}if((c.type==="tableCellDivider"||c.type==="tableRow")&&l){const a={type:"tableContent",start:e[o][1].start,end:e[l][1].end};const n={type:"chunkText",start:a.start,end:a.end,contentType:"text"};e.splice(o,l-o+1,["enter",a,t],["enter",n,t],["exit",n,t],["exit",a,t]);r-=l-o-3;o=undefined;l=undefined}}if(e[r][0]==="exit"&&d!==undefined&&d+(u?0:1)<r&&(c.type==="tableCellDivider"||c.type==="tableRow"&&(d+3<r||e[d][1].type!=="whitespace"))){const i={type:n?"tableDelimiter":a?"tableHeader":"tableData",start:e[d][1].start,end:e[r][1].end};e.splice(r+(c.type==="tableCellDivider"?1:0),0,["exit",i,t]);e.splice(d,0,["enter",i,t]);r+=2;d=r+1;u=true}if(c.type==="tableRow"){i=e[r][0]==="enter";if(i){d=r+1;u=false}}if(c.type==="tableDelimiterRow"){n=e[r][0]==="enter";if(n){d=r+1;u=false}}if(c.type==="tableHead"){a=e[r][0]==="enter"}}return e}function tokenizeTable(e,t,r){const a=this;const n=[];let i=0;let o;let l;return start;function start(t){e.enter("table")._align=n;e.enter("tableHead");e.enter("tableRow");if(t===124){return cellDividerHead(t)}i++;e.enter("temporaryTableCellContent");return inCellContentHead(t)}function cellDividerHead(t){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");o=true;return cellBreakHead}function cellBreakHead(t){if(t===null||markdownLineEnding(t)){return atRowEndHead(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceHead}if(o){o=undefined;i++}if(t===124){return cellDividerHead(t)}e.enter("temporaryTableCellContent");return inCellContentHead(t)}function inWhitespaceHead(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceHead}e.exit("whitespace");return cellBreakHead(t)}function inCellContentHead(t){if(t===null||t===124||markdownLineEndingOrSpace(t)){e.exit("temporaryTableCellContent");return cellBreakHead(t)}e.consume(t);return t===92?inCellContentEscapeHead:inCellContentHead}function inCellContentEscapeHead(t){if(t===92||t===124){e.consume(t);return inCellContentHead}return inCellContentHead(t)}function atRowEndHead(t){if(t===null){return r(t)}e.exit("tableRow");e.exit("tableHead");const n=a.interrupt;a.interrupt=true;return e.attempt({tokenize:tokenizeRowEnd,partial:true},(function(t){a.interrupt=n;e.enter("tableDelimiterRow");return atDelimiterRowBreak(t)}),(function(e){a.interrupt=n;return r(e)}))(t)}function atDelimiterRowBreak(t){if(t===null||markdownLineEnding(t)){return rowEndDelimiter(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceDelimiter}if(t===45){e.enter("tableDelimiterFiller");e.consume(t);l=true;n.push("none");return inFillerDelimiter}if(t===58){e.enter("tableDelimiterAlignment");e.consume(t);e.exit("tableDelimiterAlignment");n.push("left");return afterLeftAlignment}if(t===124){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return atDelimiterRowBreak}return r(t)}function inWhitespaceDelimiter(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceDelimiter}e.exit("whitespace");return atDelimiterRowBreak(t)}function inFillerDelimiter(t){if(t===45){e.consume(t);return inFillerDelimiter}e.exit("tableDelimiterFiller");if(t===58){e.enter("tableDelimiterAlignment");e.consume(t);e.exit("tableDelimiterAlignment");n[n.length-1]=n[n.length-1]==="left"?"center":"right";return afterRightAlignment}return atDelimiterRowBreak(t)}function afterLeftAlignment(t){if(t===45){e.enter("tableDelimiterFiller");e.consume(t);l=true;return inFillerDelimiter}return r(t)}function afterRightAlignment(t){if(t===null||markdownLineEnding(t)){return rowEndDelimiter(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceDelimiter}if(t===124){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return atDelimiterRowBreak}return r(t)}function rowEndDelimiter(t){e.exit("tableDelimiterRow");if(!l||i!==n.length){return r(t)}if(t===null){return tableClose(t)}return e.check(Me,tableClose,e.attempt({tokenize:tokenizeRowEnd,partial:true},factorySpace(e,bodyStart,"linePrefix",4),tableClose))(t)}function tableClose(r){e.exit("table");return t(r)}function bodyStart(t){e.enter("tableBody");return rowStartBody(t)}function rowStartBody(t){e.enter("tableRow");if(t===124){return cellDividerBody(t)}e.enter("temporaryTableCellContent");return inCellContentBody(t)}function cellDividerBody(t){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return cellBreakBody}function cellBreakBody(t){if(t===null||markdownLineEnding(t)){return atRowEndBody(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceBody}if(t===124){return cellDividerBody(t)}e.enter("temporaryTableCellContent");return inCellContentBody(t)}function inWhitespaceBody(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceBody}e.exit("whitespace");return cellBreakBody(t)}function inCellContentBody(t){if(t===null||t===124||markdownLineEndingOrSpace(t)){e.exit("temporaryTableCellContent");return cellBreakBody(t)}e.consume(t);return t===92?inCellContentEscapeBody:inCellContentBody}function inCellContentEscapeBody(t){if(t===92||t===124){e.consume(t);return inCellContentBody}return inCellContentBody(t)}function atRowEndBody(t){e.exit("tableRow");if(t===null){return tableBodyClose(t)}return e.check(Me,tableBodyClose,e.attempt({tokenize:tokenizeRowEnd,partial:true},factorySpace(e,rowStartBody,"linePrefix",4),tableBodyClose))(t)}function tableBodyClose(t){e.exit("tableBody");return tableClose(t)}function tokenizeRowEnd(e,t,r){return start;function start(t){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return factorySpace(e,prefixed,"linePrefix")}function prefixed(n){if(a.parser.lazy[a.now().line]||n===null||markdownLineEnding(n)){return r(n)}const i=a.events[a.events.length-1];if(!a.parser.constructs.disable.null.includes("codeIndented")&&i&&i[1].type==="linePrefix"&&i[2].sliceSerialize(i[1],true).length>=4){return r(n)}a._gfmTableDynamicInterruptHack=true;return e.check(a.parser.constructs.flow,(function(e){a._gfmTableDynamicInterruptHack=false;return r(e)}),(function(e){a._gfmTableDynamicInterruptHack=false;return t(e)}))(n)}}}function tokenizeNextPrefixedOrBlank(e,t,r){let a=0;return start;function start(t){e.enter("check");e.consume(t);return whitespace}function whitespace(n){if(n===-1||n===32){e.consume(n);a++;return a===4?t:whitespace}if(n===null||markdownLineEndingOrSpace(n)){return t(n)}return r(n)}}const He={tokenize:tokenizeTasklistCheck};const $e={text:{[91]:He}};function tokenizeTasklistCheck(e,t,r){const a=this;return open;function open(t){if(a.previous!==null||!a._gfmTasklistFirstContentOfListItem){return r(t)}e.enter("taskListCheck");e.enter("taskListCheckMarker");e.consume(t);e.exit("taskListCheckMarker");return inside}function inside(t){if(markdownLineEndingOrSpace(t)){e.enter("taskListCheckValueUnchecked");e.consume(t);e.exit("taskListCheckValueUnchecked");return close}if(t===88||t===120){e.enter("taskListCheckValueChecked");e.consume(t);e.exit("taskListCheckValueChecked");return close}return r(t)}function close(a){if(a===93){e.enter("taskListCheckMarker");e.consume(a);e.exit("taskListCheckMarker");e.exit("taskListCheck");return e.check({tokenize:spaceThenNonSpace},t,r)}return r(a)}}function spaceThenNonSpace(e,t,r){const a=this;return factorySpace(e,after,"whitespace");function after(e){const n=a.events[a.events.length-1];return(n&&n[1].type==="whitespace"||markdownLineEnding(e))&&e!==null?t(e):r(e)}}function gfm(e){return combineExtensions([Ue,gfmFootnote(),gfmStrikethrough(e),ze,$e])}function gfmHtml(e){return combineHtmlExtensions([gfmAutolinkLiteralHtml,gfmFootnoteHtml(e),gfmStrikethroughHtml,gfmTableHtml,gfmTagfilterHtml,gfmTaskListItemHtml])}function ccount(e,t){const r=String(e);if(typeof t!=="string"){throw new TypeError("Expected character")}let a=0;let n=r.indexOf(t);while(n!==-1){a++;n=r.indexOf(t,n+t.length)}return a}function escapeStringRegexp(e){if(typeof e!=="string"){throw new TypeError("Expected a string")}return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}const We=function is(e,t,r,a,n){const i=convert(t);if(r!==undefined&&r!==null&&(typeof r!=="number"||r<0||r===Number.POSITIVE_INFINITY)){throw new Error("Expected positive finite index")}if(a!==undefined&&a!==null&&(!is(a)||!a.children)){throw new Error("Expected parent node")}if((a===undefined||a===null)!==(r===undefined||r===null)){throw new Error("Expected both parent and index")}return e&&e.type&&typeof e.type==="string"?Boolean(i.call(n,e,r,a)):false};const convert=function(e){if(e===undefined||e===null){return ok}if(typeof e==="string"){return typeFactory(e)}if(typeof e==="object"){return Array.isArray(e)?anyFactory(e):propsFactory(e)}if(typeof e==="function"){return castFactory(e)}throw new Error("Expected function, string, or object as test")};function anyFactory(e){const t=[];let r=-1;while(++r<e.length){t[r]=convert(e[r])}return castFactory(any);function any(...e){let r=-1;while(++r<t.length){if(t[r].call(this,...e))return true}return false}}function propsFactory(e){return castFactory(all);function all(t){let r;for(r in e){if(t[r]!==e[r])return false}return true}}function typeFactory(e){return castFactory(type);function type(t){return t&&t.type===e}}function castFactory(e){return assertion;function assertion(...t){return Boolean(e.call(this,...t))}}function ok(){return true}function color(e){return"[33m"+e+"[39m"}const Ye=true;const Ke="skip";const Je=false;const visitParents=function(e,t,r,a){if(typeof t==="function"&&typeof r!=="function"){a=r;r=t;t=null}const n=convert(t);const i=a?-1:1;factory(e,null,[])();function factory(e,o,l){const d=typeof e==="object"&&e!==null?e:{};let u;if(typeof d.type==="string"){u=typeof d.tagName==="string"?d.tagName:typeof d.name==="string"?d.name:undefined;Object.defineProperty(visit,"name",{value:"node ("+color(d.type+(u?"<"+u+">":""))+")"})}return visit;function visit(){let d=[];let u;let c;let h;if(!t||n(e,o,l[l.length-1]||null)){d=toResult(r(e,l));if(d[0]===Je){return d}}if(e.children&&d[0]!==Ke){c=(a?e.children.length:-1)+i;h=l.concat(e);while(c>-1&&c<e.children.length){u=factory(e.children[c],c,h)();if(u[0]===Je){return u}c=typeof u[1]==="number"?u[1]:c+i}}return d}}};function toResult(e){if(Array.isArray(e)){return e}if(typeof e==="number"){return[Ye,e]}return[e]}const Ze={}.hasOwnProperty;const findAndReplace=function(e,t,r,a){let n;let i;if(typeof t==="string"||t instanceof RegExp){i=[[t,r]];n=a}else{i=t;n=r}if(!n){n={}}const o=convert(n.ignore||[]);const l=toPairs(i);let d=-1;while(++d<l.length){visitParents(e,"text",visitor)}return e;function visitor(e,t){let r=-1;let a;while(++r<t.length){const e=t[r];if(o(e,a?a.children.indexOf(e):undefined,a)){return}a=e}if(a){return handler(e,t)}}function handler(e,t){const r=t[t.length-1];const a=l[d][0];const n=l[d][1];let i=0;const o=r.children.indexOf(e);let u=false;let c=[];let h;a.lastIndex=0;let g=a.exec(e.value);while(g){h=g.index;const r={index:g.index,input:g.input,stack:[...t,e]};let o=n(...g,r);if(typeof o==="string"){o=o.length>0?{type:"text",value:o}:undefined}if(o!==false){if(i!==h){c.push({type:"text",value:e.value.slice(i,h)})}if(Array.isArray(o)){c.push(...o)}else if(o){c.push(o)}i=h+g[0].length;u=true}if(!a.global){break}g=a.exec(e.value)}if(u){if(i<e.value.length){c.push({type:"text",value:e.value.slice(i)})}r.children.splice(o,1,...c)}else{c=[e]}return o+c.length}};function toPairs(e){const t=[];if(typeof e!=="object"){throw new TypeError("Expected array or object as schema")}if(Array.isArray(e)){let r=-1;while(++r<e.length){t.push([toExpression(e[r][0]),toFunction(e[r][1])])}}else{let r;for(r in e){if(Ze.call(e,r)){t.push([toExpression(r),toFunction(e[r])])}}}return t}function toExpression(e){return typeof e==="string"?new RegExp(escapeStringRegexp(e),"g"):e}function toFunction(e){return typeof e==="function"?e:()=>e}const Qe="phrasing";const Xe=["autolink","link","image","label"];const et={transforms:[transformGfmAutolinkLiterals],enter:{literalAutolink:enterLiteralAutolink,literalAutolinkEmail:enterLiteralAutolinkValue,literalAutolinkHttp:enterLiteralAutolinkValue,literalAutolinkWww:enterLiteralAutolinkValue},exit:{literalAutolink:exitLiteralAutolink,literalAutolinkEmail:exitLiteralAutolinkEmail,literalAutolinkHttp:exitLiteralAutolinkHttp,literalAutolinkWww:exitLiteralAutolinkWww}};const tt={unsafe:[{character:"@",before:"[+\\-.\\w]",after:"[\\-.\\w]",inConstruct:Qe,notInConstruct:Xe},{character:".",before:"[Ww]",after:"[\\-.\\w]",inConstruct:Qe,notInConstruct:Xe},{character:":",before:"[ps]",after:"\\/",inConstruct:Qe,notInConstruct:Xe}]};function enterLiteralAutolink(e){this.enter({type:"link",title:null,url:"",children:[]},e)}function enterLiteralAutolinkValue(e){this.config.enter.autolinkProtocol.call(this,e)}function exitLiteralAutolinkHttp(e){this.config.exit.autolinkProtocol.call(this,e)}function exitLiteralAutolinkWww(e){this.config.exit.data.call(this,e);const t=this.stack[this.stack.length-1];t.url="http://"+this.sliceSerialize(e)}function exitLiteralAutolinkEmail(e){this.config.exit.autolinkEmail.call(this,e)}function exitLiteralAutolink(e){this.exit(e)}function transformGfmAutolinkLiterals(e){findAndReplace(e,[[/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi,findUrl],[/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g,findEmail]],{ignore:["link","linkReference"]})}function findUrl(e,t,r,a,n){let i="";if(!mdast_util_gfm_autolink_literal_previous(n)){return false}if(/^w/i.test(t)){r=t+r;t="";i="http://"}if(!isCorrectDomain(r)){return false}const o=splitUrl(r+a);if(!o[0])return false;const l={type:"link",title:null,url:i+t+o[0],children:[{type:"text",value:t+o[0]}]};if(o[1]){return[l,{type:"text",value:o[1]}]}return l}function findEmail(e,t,r,a){if(!mdast_util_gfm_autolink_literal_previous(a,true)||/[_-\d]$/.test(r)){return false}return{type:"link",title:null,url:"mailto:"+t+"@"+r,children:[{type:"text",value:t+"@"+r}]}}function isCorrectDomain(e){const t=e.split(".");if(t.length<2||t[t.length-1]&&(/_/.test(t[t.length-1])||!/[a-zA-Z\d]/.test(t[t.length-1]))||t[t.length-2]&&(/_/.test(t[t.length-2])||!/[a-zA-Z\d]/.test(t[t.length-2]))){return false}return true}function splitUrl(e){const t=/[!"&'),.:;<>?\]}]+$/.exec(e);let r;let a;let n;let i;if(t){e=e.slice(0,t.index);i=t[0];r=i.indexOf(")");a=ccount(e,"(");n=ccount(e,")");while(r!==-1&&a>n){e+=i.slice(0,r+1);i=i.slice(r+1);r=i.indexOf(")");n++}}return[e,i]}function mdast_util_gfm_autolink_literal_previous(e,t){const r=e.input.charCodeAt(e.index-1);return(e.index===0||C(r)||T(r))&&(!t||r!==47)}function association(e){if(e.label||!e.identifier){return e.label||""}return decodeString(e.identifier)}function track(e){const t=e||{};const r=t.now||{};let a=t.lineShift||0;let n=r.line||1;let i=r.column||1;return{move:move,current:current,shift:shift};function current(){return{now:{line:n,column:i},lineShift:a}}function shift(e){a+=e}function move(e=""){const t=e.split(/\r?\n|\r/g);const r=t[t.length-1];n+=t.length-1;i=t.length===1?i+r.length:1+r.length+a;return e}}function containerFlow(e,t,r){const a=t.indexStack;const n=e.children||[];const i=track(r);const o=[];let l=-1;a.push(-1);while(++l<n.length){const r=n[l];a[a.length-1]=l;o.push(i.move(t.handle(r,e,t,{before:"\n",after:"\n",...i.current()})));if(r.type!=="list"){t.bulletLastUsed=undefined}if(l<n.length-1){o.push(i.move(between(r,n[l+1])))}}a.pop();return o.join("");function between(r,a){let n=t.join.length;while(n--){const i=t.join[n](r,a,e,t);if(i===true||i===1){break}if(typeof i==="number"){return"\n".repeat(1+i)}if(i===false){return"\n\n\x3c!----\x3e\n\n"}}return"\n\n"}}const rt=/\r?\n|\r/g;function indentLines(e,t){const r=[];let a=0;let n=0;let i;while(i=rt.exec(e)){one(e.slice(a,i.index));r.push(i[0]);a=i.index+i[0].length;n++}one(e.slice(a));return r.join("");function one(e){r.push(t(e,n,!e))}}function patternCompile(e){if(!e._compiled){const t=(e.atBreak?"[\\r\\n][\\t ]*":"")+(e.before?"(?:"+e.before+")":"");e._compiled=new RegExp((t?"("+t+")":"")+(/[|\\{}()[\]^$+*?.-]/.test(e.character)?"\\":"")+e.character+(e.after?"(?:"+e.after+")":""),"g")}return e._compiled}function patternInScope(e,t){return listInScope(e,t.inConstruct,true)&&!listInScope(e,t.notInConstruct,false)}function listInScope(e,t,r){if(!t){return r}if(typeof t==="string"){t=[t]}let a=-1;while(++a<t.length){if(e.includes(t[a])){return true}}return false}function safe(e,t,r){const a=(r.before||"")+(t||"")+(r.after||"");const n=[];const i=[];const o={};let l=-1;while(++l<e.unsafe.length){const t=e.unsafe[l];if(!patternInScope(e.stack,t)){continue}const r=patternCompile(t);let i;while(i=r.exec(a)){const e="before"in t||Boolean(t.atBreak);const r="after"in t;const a=i.index+(e?i[1].length:0);if(n.includes(a)){if(o[a].before&&!e){o[a].before=false}if(o[a].after&&!r){o[a].after=false}}else{n.push(a);o[a]={before:e,after:r}}}}n.sort(numerical);let d=r.before?r.before.length:0;const u=a.length-(r.after?r.after.length:0);l=-1;while(++l<n.length){const e=n[l];if(e<d||e>=u){continue}if(e+1<u&&n[l+1]===e+1&&o[e].after&&!o[e+1].before&&!o[e+1].after||n[l-1]===e-1&&o[e].before&&!o[e-1].before&&!o[e-1].after){continue}if(d!==e){i.push(escapeBackslashes(a.slice(d,e),"\\"))}d=e;if(/[!-/:-@[-`{-~]/.test(a.charAt(e))&&(!r.encode||!r.encode.includes(a.charAt(e)))){i.push("\\")}else{i.push("&#x"+a.charCodeAt(e).toString(16).toUpperCase()+";");d++}}i.push(escapeBackslashes(a.slice(d,u),r.after));return i.join("")}function numerical(e,t){return e-t}function escapeBackslashes(e,t){const r=/\\(?=[!-/:-@[-`{-~])/g;const a=[];const n=[];const i=e+t;let o=-1;let l=0;let d;while(d=r.exec(i)){a.push(d.index)}while(++o<a.length){if(l!==a[o]){n.push(e.slice(l,a[o]))}n.push("\\");l=a[o]}n.push(e.slice(l));return n.join("")}function gfmFootnoteFromMarkdown(){return{enter:{gfmFootnoteDefinition:enterFootnoteDefinition,gfmFootnoteDefinitionLabelString:enterFootnoteDefinitionLabelString,gfmFootnoteCall:enterFootnoteCall,gfmFootnoteCallString:enterFootnoteCallString},exit:{gfmFootnoteDefinition:exitFootnoteDefinition,gfmFootnoteDefinitionLabelString:exitFootnoteDefinitionLabelString,gfmFootnoteCall:exitFootnoteCall,gfmFootnoteCallString:exitFootnoteCallString}};function enterFootnoteDefinition(e){this.enter({type:"footnoteDefinition",identifier:"",label:"",children:[]},e)}function enterFootnoteDefinitionLabelString(){this.buffer()}function exitFootnoteDefinitionLabelString(e){const t=this.resume();const r=this.stack[this.stack.length-1];r.label=t;r.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase()}function exitFootnoteDefinition(e){this.exit(e)}function enterFootnoteCall(e){this.enter({type:"footnoteReference",identifier:"",label:""},e)}function enterFootnoteCallString(){this.buffer()}function exitFootnoteCallString(e){const t=this.resume();const r=this.stack[this.stack.length-1];r.label=t;r.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase()}function exitFootnoteCall(e){this.exit(e)}}function gfmFootnoteToMarkdown(){footnoteReference.peek=footnoteReferencePeek;return{unsafe:[{character:"[",inConstruct:["phrasing","label","reference"]}],handlers:{footnoteDefinition:footnoteDefinition,footnoteReference:footnoteReference}};function footnoteReference(e,t,r,a){const n=track(a);let i=n.move("[^");const o=r.enter("footnoteReference");const l=r.enter("reference");i+=n.move(safe(r,association(e),{...n.current(),before:i,after:"]"}));l();o();i+=n.move("]");return i}function footnoteReferencePeek(){return"["}function footnoteDefinition(e,t,r,a){const n=track(a);let i=n.move("[^");const o=r.enter("footnoteDefinition");const l=r.enter("label");i+=n.move(safe(r,association(e),{...n.current(),before:i,after:"]"}));l();i+=n.move("]:"+(e.children&&e.children.length>0?" ":""));n.shift(4);i+=n.move(indentLines(containerFlow(e,r,n.current()),map));o();return i;function map(e,t,r){if(t){return(r?"":"    ")+e}return e}}}function containerPhrasing(e,t,r){const a=t.indexStack;const n=e.children||[];const i=[];let o=-1;let l=r.before;a.push(-1);let d=track(r);while(++o<n.length){const u=n[o];let c;a[a.length-1]=o;if(o+1<n.length){let r=t.handle.handlers[n[o+1].type];if(r&&r.peek)r=r.peek;c=r?r(n[o+1],e,t,{before:"",after:"",...d.current()}).charAt(0):""}else{c=r.after}if(i.length>0&&(l==="\r"||l==="\n")&&u.type==="html"){i[i.length-1]=i[i.length-1].replace(/(\r?\n|\r)$/," ");l=" ";d=track(r);d.move(i.join(""))}i.push(d.move(t.handle(u,e,t,{...d.current(),before:l,after:c})));l=i[i.length-1].slice(-1)}a.pop();return i.join("")}const nt={canContainEols:["delete"],enter:{strikethrough:enterStrikethrough},exit:{strikethrough:exitStrikethrough}};const it=["autolink","destinationLiteral","destinationRaw","reference","titleQuote","titleApostrophe"];const ot={unsafe:[{character:"~",inConstruct:"phrasing",notInConstruct:it}],handlers:{delete:handleDelete}};handleDelete.peek=peekDelete;function enterStrikethrough(e){this.enter({type:"delete",children:[]},e)}function exitStrikethrough(e){this.exit(e)}function handleDelete(e,t,r,a){const n=track(a);const i=r.enter("emphasis");let o=n.move("~~");o+=containerPhrasing(e,r,{...n.current(),before:o,after:"~"});o+=n.move("~~");i();return o}function peekDelete(){return"~"}inlineCode.peek=inlineCodePeek;function inlineCode(e,t,r){let a=e.value||"";let n="`";let i=-1;while(new RegExp("(^|[^`])"+n+"([^`]|$)").test(a)){n+="`"}if(/[^ \r\n]/.test(a)&&(/^[ \r\n]/.test(a)&&/[ \r\n]$/.test(a)||/^`|`$/.test(a))){a=" "+a+" "}while(++i<r.unsafe.length){const e=r.unsafe[i];const t=patternCompile(e);let n;if(!e.atBreak)continue;while(n=t.exec(a)){let e=n.index;if(a.charCodeAt(e)===10&&a.charCodeAt(e-1)===13){e--}a=a.slice(0,e)+" "+a.slice(n.index+1)}}return n+a+n}function inlineCodePeek(){return"`"}function markdownTable(e,t={}){const r=(t.align||[]).concat();const a=t.stringLength||defaultStringLength;const n=[];const i=[];const o=[];const l=[];let d=0;let u=-1;while(++u<e.length){const r=[];const n=[];let c=-1;if(e[u].length>d){d=e[u].length}while(++c<e[u].length){const i=serialize(e[u][c]);if(t.alignDelimiters!==false){const e=a(i);n[c]=e;if(l[c]===undefined||e>l[c]){l[c]=e}}r.push(i)}i[u]=r;o[u]=n}let c=-1;if(typeof r==="object"&&"length"in r){while(++c<d){n[c]=toAlignment(r[c])}}else{const e=toAlignment(r);while(++c<d){n[c]=e}}c=-1;const h=[];const g=[];while(++c<d){const e=n[c];let r="";let a="";if(e===99){r=":";a=":"}else if(e===108){r=":"}else if(e===114){a=":"}let i=t.alignDelimiters===false?1:Math.max(1,l[c]-r.length-a.length);const o=r+"-".repeat(i)+a;if(t.alignDelimiters!==false){i=r.length+i+a.length;if(i>l[c]){l[c]=i}g[c]=i}h[c]=o}i.splice(1,0,h);o.splice(1,0,g);u=-1;const v=[];while(++u<i.length){const e=i[u];const r=o[u];c=-1;const a=[];while(++c<d){const i=e[c]||"";let o="";let u="";if(t.alignDelimiters!==false){const e=l[c]-(r[c]||0);const t=n[c];if(t===114){o=" ".repeat(e)}else if(t===99){if(e%2){o=" ".repeat(e/2+.5);u=" ".repeat(e/2-.5)}else{o=" ".repeat(e/2);u=o}}else{u=" ".repeat(e)}}if(t.delimiterStart!==false&&!c){a.push("|")}if(t.padding!==false&&!(t.alignDelimiters===false&&i==="")&&(t.delimiterStart!==false||c)){a.push(" ")}if(t.alignDelimiters!==false){a.push(o)}a.push(i);if(t.alignDelimiters!==false){a.push(u)}if(t.padding!==false){a.push(" ")}if(t.delimiterEnd!==false||c!==d-1){a.push("|")}}v.push(t.delimiterEnd===false?a.join("").replace(/ +$/,""):a.join(""))}return v.join("\n")}function serialize(e){return e===null||e===undefined?"":String(e)}function defaultStringLength(e){return e.length}function toAlignment(e){const t=typeof e==="string"?e.codePointAt(0):0;return t===67||t===99?99:t===76||t===108?108:t===82||t===114?114:0}const st={enter:{table:enterTable,tableData:enterCell,tableHeader:enterCell,tableRow:enterRow},exit:{codeText:exitCodeText,table:exitTable,tableData:lib_exit,tableHeader:lib_exit,tableRow:lib_exit}};function enterTable(e){const t=e._align;this.enter({type:"table",align:t.map((e=>e==="none"?null:e)),children:[]},e);this.setData("inTable",true)}function exitTable(e){this.exit(e);this.setData("inTable")}function enterRow(e){this.enter({type:"tableRow",children:[]},e)}function lib_exit(e){this.exit(e)}function enterCell(e){this.enter({type:"tableCell",children:[]},e)}function exitCodeText(e){let t=this.resume();if(this.getData("inTable")){t=t.replace(/\\([\\|])/g,replace)}const r=this.stack[this.stack.length-1];r.value=t;this.exit(e)}function replace(e,t){return t==="|"?t:e}function gfmTableToMarkdown(e){const t=e||{};const r=t.tableCellPadding;const a=t.tablePipeAlign;const n=t.stringLength;const i=r?" ":"|";return{unsafe:[{character:"\r",inConstruct:"tableCell"},{character:"\n",inConstruct:"tableCell"},{atBreak:true,character:"|",after:"[\t :-]"},{character:"|",inConstruct:"tableCell"},{atBreak:true,character:":",after:"-"},{atBreak:true,character:"-",after:"[:|-]"}],handlers:{table:handleTable,tableRow:handleTableRow,tableCell:handleTableCell,inlineCode:inlineCodeWithTable}};function handleTable(e,t,r,a){return serializeData(handleTableAsData(e,r,a),e.align)}function handleTableRow(e,t,r,a){const n=handleTableRowAsData(e,r,a);const i=serializeData([n]);return i.slice(0,i.indexOf("\n"))}function handleTableCell(e,t,r,a){const n=r.enter("tableCell");const o=r.enter("phrasing");const l=containerPhrasing(e,r,{...a,before:i,after:i});o();n();return l}function serializeData(e,t){return markdownTable(e,{align:t,alignDelimiters:a,padding:r,stringLength:n})}function handleTableAsData(e,t,r){const a=e.children;let n=-1;const i=[];const o=t.enter("table");while(++n<a.length){i[n]=handleTableRowAsData(a[n],t,r)}o();return i}function handleTableRowAsData(e,t,r){const a=e.children;let n=-1;const i=[];const o=t.enter("tableRow");while(++n<a.length){i[n]=handleTableCell(a[n],e,t,r)}o();return i}function inlineCodeWithTable(e,t,r){let a=inlineCode(e,t,r);if(r.stack.includes("tableCell")){a=a.replace(/\|/g,"\\$&")}return a}}function checkBullet(e){const t=e.options.bullet||"*";if(t!=="*"&&t!=="+"&&t!=="-"){throw new Error("Cannot serialize items with `"+t+"` for `options.bullet`, expected `*`, `+`, or `-`")}return t}function checkListItemIndent(e){const t=e.options.listItemIndent||"tab";if(t===1||t==="1"){return"one"}if(t!=="tab"&&t!=="one"&&t!=="mixed"){throw new Error("Cannot serialize items with `"+t+"` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`")}return t}function listItem(e,t,r,a){const n=checkListItemIndent(r);let i=r.bulletCurrent||checkBullet(r);if(t&&t.type==="list"&&t.ordered){i=(typeof t.start==="number"&&t.start>-1?t.start:1)+(r.options.incrementListMarker===false?0:t.children.indexOf(e))+i}let o=i.length+1;if(n==="tab"||n==="mixed"&&(t&&t.type==="list"&&t.spread||e.spread)){o=Math.ceil(o/4)*4}const l=track(a);l.move(i+" ".repeat(o-i.length));l.shift(o);const d=r.enter("listItem");const u=indentLines(containerFlow(e,r,l.current()),map);d();return u;function map(e,t,r){if(t){return(r?"":" ".repeat(o))+e}return(r?i:i+" ".repeat(o-i.length))+e}}const pt={exit:{taskListCheckValueChecked:exitCheck,taskListCheckValueUnchecked:exitCheck,paragraph:exitParagraphWithTaskListItem}};const lt={unsafe:[{atBreak:true,character:"-",after:"[:|-]"}],handlers:{listItem:listItemWithTaskListItem}};function exitCheck(e){const t=this.stack[this.stack.length-2];t.checked=e.type==="taskListCheckValueChecked"}function exitParagraphWithTaskListItem(e){const t=this.stack[this.stack.length-2];const r=this.stack[this.stack.length-1];const a=t.children;const n=r.children[0];let i=-1;let o;if(t&&t.type==="listItem"&&typeof t.checked==="boolean"&&n&&n.type==="text"){while(++i<a.length){const e=a[i];if(e.type==="paragraph"){o=e;break}}if(o===r){n.value=n.value.slice(1);if(n.value.length===0){r.children.shift()}else if(r.position&&n.position&&typeof n.position.start.offset==="number"){n.position.start.column++;n.position.start.offset++;r.position.start=Object.assign({},n.position.start)}}}this.exit(e)}function listItemWithTaskListItem(e,t,r,a){const n=e.children[0];const i=typeof e.checked==="boolean"&&n&&n.type==="paragraph";const o="["+(e.checked?"x":" ")+"] ";const l=track(a);if(i){l.move(o)}let d=listItem(e,t,r,{...a,...l.current()});if(i){d=d.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,check)}return d;function check(e){return e+o}}function gfmFromMarkdown(){return[et,gfmFootnoteFromMarkdown(),nt,st,pt]}function gfmToMarkdown(e){return{extensions:[tt,gfmFootnoteToMarkdown(),ot,gfmTableToMarkdown(e),lt]}}function remarkGfm(e={}){const t=this.data();add("micromarkExtensions",gfm(e));add("fromMarkdownExtensions",gfmFromMarkdown());add("toMarkdownExtensions",gfmToMarkdown(e));function add(e,r){const a=t[e]?t[e]:t[e]=[];a.push(r)}}var dt=__webpack_require__(7852);const ut=Object.assign(create(Error),{eval:create(EvalError),range:create(RangeError),reference:create(ReferenceError),syntax:create(SyntaxError),type:create(TypeError),uri:create(URIError)});function create(e){FormattedError.displayName=e.displayName||e.name;return FormattedError;function FormattedError(t,...r){const a=t?dt(t,...r):t;return new e(a)}}const ct={}.hasOwnProperty;const mt={yaml:"-",toml:"+"};function matters(e="yaml"){const t=[];let r=-1;if(!Array.isArray(e)){e=[e]}while(++r<e.length){t[r]=matter(e[r])}return t}function matter(e){let t=e;if(typeof t==="string"){if(!ct.call(mt,t)){throw ut("Missing matter definition for `%s`",t)}t={type:t,marker:mt[t]}}else if(typeof t!=="object"){throw ut("Expected matter to be an object, not `%j`",t)}if(!ct.call(t,"type")){throw ut("Missing `type` in matter `%j`",t)}if(!ct.call(t,"fence")&&!ct.call(t,"marker")){throw ut("Missing `marker` or `fence` in matter `%j`",t)}return t}function frontmatter(e){const t=matters(e);const r={};let a=-1;let n;let i;while(++a<t.length){n=t[a];i=fence(n,"open").charCodeAt(0);if(i in r){r[i].push(syntax_parse(n))}else{r[i]=[syntax_parse(n)]}}return{flow:r}}function syntax_parse(e){const t=e.type;const r=e.anywhere;const a=t+"Value";const n=t+"Fence";const i=n+"Sequence";const o={tokenize:tokenizeFence,partial:true};let l;return{tokenize:tokenizeFrontmatter,concrete:true};function tokenizeFrontmatter(n,i,d){const u=this;return start;function start(a){const i=u.now();if(i.column!==1||!r&&i.line!==1){return d(a)}n.enter(t);l=fence(e,"open");return n.attempt(o,afterOpeningFence,d)(a)}function afterOpeningFence(t){l=fence(e,"close");return lineEnd(t)}function lineStart(e){if(e===null||markdownLineEnding(e)){return lineEnd(e)}n.enter(a);return lineData(e)}function lineData(e){if(e===null||markdownLineEnding(e)){n.exit(a);return lineEnd(e)}n.consume(e);return lineData}function lineEnd(e){if(e===null){return d(e)}n.enter("lineEnding");n.consume(e);n.exit("lineEnding");return n.attempt(o,after,lineStart)}function after(e){n.exit(t);return i(e)}}function tokenizeFence(e,t,r){let a=0;return start;function start(t){if(t===l.charCodeAt(a)){e.enter(n);e.enter(i);return insideSequence(t)}return r(t)}function insideSequence(t){if(a===l.length){e.exit(i);if(markdownSpace(t)){e.enter("whitespace");return insideWhitespace(t)}return fenceEnd(t)}if(t===l.charCodeAt(a++)){e.consume(t);return insideSequence}return r(t)}function insideWhitespace(t){if(markdownSpace(t)){e.consume(t);return insideWhitespace}e.exit("whitespace");return fenceEnd(t)}function fenceEnd(a){if(a===null||markdownLineEnding(a)){e.exit(n);return t(a)}return r(a)}}}function fence(e,t){return e.marker?pick(e.marker,t).repeat(3):pick(e.fence,t)}function pick(e,t){return typeof e==="string"?e:e[t]}function frontmatterFromMarkdown(e){const t=matters(e);const r={};const a={};let n=-1;while(++n<t.length){const e=t[n];r[e.type]=mdast_util_frontmatter_opener(e);a[e.type]=mdast_util_frontmatter_close;a[e.type+"Value"]=value}return{enter:r,exit:a}}function mdast_util_frontmatter_opener(e){return open;function open(t){this.enter({type:e.type,value:""},t);this.buffer()}}function mdast_util_frontmatter_close(e){const t=this.resume();this.exit(e).value=t.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,"")}function value(e){this.config.enter.data.call(this,e);this.config.exit.data.call(this,e)}function frontmatterToMarkdown(e){const t=[];const r={};const a=matters(e);let n=-1;while(++n<a.length){const e=a[n];r[e.type]=handler(e);t.push({atBreak:true,character:mdast_util_frontmatter_fence(e,"open").charAt(0)})}return{unsafe:t,handlers:r}}function handler(e){const t=mdast_util_frontmatter_fence(e,"open");const r=mdast_util_frontmatter_fence(e,"close");return handle;function handle(e){return t+(e.value?"\n"+e.value:"")+"\n"+r}}function mdast_util_frontmatter_fence(e,t){return e.marker?mdast_util_frontmatter_pick(e.marker,t).repeat(3):mdast_util_frontmatter_pick(e.fence,t)}function mdast_util_frontmatter_pick(e,t){return typeof e==="string"?e:e[t]}function remarkFrontmatter(e="yaml"){const t=this.data();add("micromarkExtensions",frontmatter(e));add("fromMarkdownExtensions",frontmatterFromMarkdown(e));add("toMarkdownExtensions",frontmatterToMarkdown(e));function add(e,r){const a=t[e]?t[e]:t[e]=[];a.push(r)}}function unherit(e){const t=class extends e{};const r=t.prototype;let a;for(a in r){const e=r[a];if(e&&typeof e==="object"){r[a]="concat"in e?e.concat():Object.assign({},e)}}return t}function nlcst_to_string_toString(e,t=""){let r=-1;if(!e||!Array.isArray(e)&&!e.type){throw new Error("Expected node, not `"+e+"`")}if(typeof e.value==="string")return e.value;const a=(Array.isArray(e)?e:e.children)||[];if(a.length===1&&"value"in a[0]){return a[0].value}const n=[];while(++r<a.length){n[r]=nlcst_to_string_toString(a[r],t)}return n.join(t)}const ft={}.hasOwnProperty;function arrayIterate(e,t,r){let a=-1;if(!e){throw new Error("Iterate requires that |this| not be "+e)}if(!ft.call(e,"length")){throw new Error("Iterate requires that |this| has a `length`")}if(typeof t!=="function"){throw new TypeError("`callback` must be a function")}while(++a<e.length){if(!(a in e)){continue}const n=t.call(r,e[a],a,e);if(typeof n==="number"){if(n<0){a=0}a=n-1}}}function modifyChildren(e){return modify;function modify(e){if(!e||!e.children){throw new Error("Missing children in `parent` for `modifier`")}arrayIterate(e.children,iteratee,e)}function iteratee(t,r){return e(t,r,this)}}const ht=modifyChildren((function(e,t,r){if(e.type!=="SymbolNode"&&e.type!=="PunctuationNode"||nlcst_to_string_toString(e)!=="&"){return}const a=r.children;const n=a[t+1];if(t>0&&a[t-1].type==="WordNode"||!(n&&n.type==="WordNode")){return}a.splice(t,1);n.children.unshift(e);if(n.position&&e.position){n.position.start=e.position.start}return t-1}));const gt=modifyChildren((function(e,t,r){if(t>0&&(e.type==="SymbolNode"||e.type==="PunctuationNode")&&nlcst_to_string_toString(e)==="-"){const a=r.children;const n=a[t-1];const i=a[t+1];if((!i||i.type!=="WordNode")&&n&&n.type==="WordNode"){a.splice(t,1);n.children.push(e);if(n.position&&e.position){n.position.end=e.position.end}return t}}}));const vt=/^([!"').?\u00BB\u0F3B\u0F3D\u169C\u2019\u201D\u2026\u203A\u203D\u2046\u207E\u208E\u2309\u230B\u232A\u2769\u276B\u276D\u276F\u2771\u2773\u2775\u27C6\u27E7\u27E9\u27EB\u27ED\u27EF\u2984\u2986\u2988\u298A\u298C\u298E\u2990\u2992\u2994\u2996\u2998\u29D9\u29DB\u29FD\u2E03\u2E05\u2E0A\u2E0D\u2E1D\u2E21\u2E23\u2E25\u2E27\u2E29\u3009\u300B\u300D\u300F\u3011\u3015\u3017\u3019\u301B\u301E\u301F\uFD3E\uFE18\uFE36\uFE38\uFE3A\uFE3C\uFE3E\uFE40\uFE42\uFE44\uFE48\uFE5A\uFE5C\uFE5E\uFF09\uFF3D\uFF5D\uFF60\uFF63\]}])\1*$/;const wt=/^[ \t]*((\r?\n|\r)[\t ]*)+$/;const bt=/^([!.?\u2026\u203D]+)$/;const yt=/^([&'\-.:=?@\u00AD\u00B7\u2010\u2011\u2019\u2027]|_+)$/;const kt=/^(?:[\d\u00B2\u00B3\u00B9\u00BC-\u00BE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D58-\u0D5E\u0D66-\u0D78\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]|\uD800[\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23\uDF41\uDF4A\uDFD1-\uDFD5]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDD30-\uDD39\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDDE1-\uDDF4\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF3B]|\uD806[\uDCE0-\uDCF2\uDD50-\uDD59]|\uD807[\uDC50-\uDC6C\uDD50-\uDD59\uDDA0-\uDDA9\uDFC0-\uDFD4]|\uD809[\uDC00-\uDC6E]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDCC7-\uDCCF\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9])+$/;const Et=/^\d/;const Dt=/^(?:[a-z\u00B5\u00DF-\u00F6\u00F8-\u00FF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0560-\u0588\u10D0-\u10FA\u10FD-\u10FF\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7AF\uA7B5\uA7B7\uA7B9\uA7BB\uA7BD\uA7BF\uA7C3\uA7C8\uA7CA\uA7F6\uA7FA\uAB30-\uAB5A\uAB60-\uAB68\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43])/;const _t=/[\uD800-\uDFFF]/;const At=/[!"'-),-/:;?[-\]_{}\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u201F\u2022-\u2027\u2032-\u203A\u203C-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;const St=/[\dA-Za-z\u00AA\u00B2\u00B3\u00B5\u00B9\u00BA\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u052F\u0531-\u0556\u0559\u0560-\u0588\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05EF-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u07FD\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u08D3-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09F4-\u09F9\u09FC\u09FE\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71-\u0B77\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BF2\u0C00-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C78-\u0C7E\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D63\u0D66-\u0D78\u0D7A-\u0D7F\u0D81-\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F33\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u17F0-\u17F9\u180B-\u180D\u1810-\u1819\u1820-\u1878\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1AC0\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CD0-\u1CD2\u1CD4-\u1CFA\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u20D0-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA672\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA827\uA82C\uA830-\uA835\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE38-\uDE3A\uDE3F-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE6\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD27\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEAB\uDEAC\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF54\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC00-\uDC46\uDC52-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD44-\uDD47\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3B-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5E-\uDC61\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF1D-\uDF2B\uDF30-\uDF3B]|\uD806[\uDC00-\uDC3A\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD35\uDD37\uDD38\uDD3B-\uDD43\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD7\uDDDA-\uDDE1\uDDE3\uDDE4\uDE00-\uDE3E\uDE47\uDE50-\uDE99\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD8E\uDD90\uDD91\uDD93-\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF6\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF4F-\uDF87\uDF8F-\uDF9F\uDFE0\uDFE1\uDFE3\uDFE4\uDFF0\uDFF1]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD00-\uDD2C\uDD30-\uDD3D\uDD40-\uDD49\uDD4E\uDEC0-\uDEF9]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCD6\uDD00-\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]|\uDB40[\uDD00-\uDDEF]/;const xt=/[\t-\r \u0085\u00A0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;const Ct=modifyChildren((function(e,t,r){if(t>0&&(e.type==="SymbolNode"||e.type==="PunctuationNode")){const e=r.children;const a=e[t-1];if(a&&a.type==="WordNode"){let r=t-1;let n=[];let i=[];while(e[++r]){const t=e[r];if(t.type==="WordNode"){n=n.concat(i,t.children);i=[]}else if((t.type==="SymbolNode"||t.type==="PunctuationNode")&&yt.test(nlcst_to_string_toString(t))){i.push(t)}else{break}}if(n.length>0){if(i.length>0){r-=i.length}e.splice(t,r-t);a.children=a.children.concat(n);const o=n[n.length-1];if(a.position&&o.position){a.position.end=o.position.end}return t}}}}));const Tt="/";const Ft=modifyChildren((function(e,t,r){const a=r.children;const n=a[t-1];const i=a[t+1];if(n&&n.type==="WordNode"&&(e.type==="SymbolNode"||e.type==="PunctuationNode")&&nlcst_to_string_toString(e)===Tt){const r=nlcst_to_string_toString(n);let o=e;let l=[e];let d=1;let u="";if(i&&i.type==="WordNode"){u=nlcst_to_string_toString(i);o=i;l=l.concat(i.children);d++}if(r.length<3&&(!u||u.length<3)){n.children=n.children.concat(l);a.splice(t,d);if(n.position&&o.position){n.position.end=o.position.end}return t}}}));const Ot=modifyChildren((function(e,t,r){if(t>0&&nlcst_to_string_toString(e)==="."){const a=r.children;const n=a[t-1];const i=n.children;if(n.type==="WordNode"&&i&&i.length!==1&&i.length%2!==0){let r=i.length;let o=true;while(i[--r]){const e=i[r];const t=nlcst_to_string_toString(e);if(r%2===0){if(t.length>1){return}if(!kt.test(t)){o=false}}else if(t!=="."){if(r<i.length-2){break}else{return}}}if(!o){a.splice(t,1);i.push(e);if(n.position&&e.position){n.position.end=e.position.end}return t}}}}));const Pt=modifyChildren((function(e,t,r){const a=r.children;if(e.type==="WordNode"){const r=a[t+1];if(r&&r.type==="WordNode"){a.splice(t+1,1);e.children=e.children.concat(r.children);if(r.position&&e.position){e.position.end=r.position.end}return t}}}));function visitChildren(e){return visit;function visit(t){const r=t&&t.children;let a=-1;if(!r){throw new Error("Missing children in `parent` for `visit`")}while(++a in r){e(r[a],a,t)}}}const Lt=visitChildren((function(e,t,r){const a=r.children;if(!e.position){return}if(t<1&&(!r.position||!r.position.start)){patch(r);r.position.start=e.position.start}if(t===a.length-1&&(!r.position||!r.position.end)){patch(r);r.position.end=e.position.end}}));function patch(e){if(!e.position){e.position={}}}const Rt=modifyChildren((function(e,t,r){const a=e.children;let n=-1;while(a[++n]){if(a[n].type==="WordNode"){return}}const i=r.children[t-1];if(i){i.children=i.children.concat(a);r.children.splice(t,1);if(i.position&&e.position){i.position.end=e.position.end}return t}const o=r.children[t+1];if(o){o.children=a.concat(o.children);if(o.position&&e.position){o.position.start=e.position.start}r.children.splice(t,1)}}));const Bt=modifyChildren((function(e,t,r){const a=e.children;if(a&&a.length>0&&t>0){const n=a[0];const i=a[1];const o=r.children[t-1];if((n.type==="SymbolNode"||n.type==="PunctuationNode")&&vt.test(nlcst_to_string_toString(n))){o.children.push(a.shift());if(n.position&&o.position){o.position.end=n.position.end}if(i&&i.position&&e.position){e.position.start=i.position.start}return t-1}}}));const Nt=modifyChildren((function(e,t,r){const a=e.children;if(a&&a.length>0&&t>0){let n=-1;while(a[++n]){const i=a[n];if(i.type==="WordNode"){if(!Dt.test(nlcst_to_string_toString(i))){return}const n=r.children;const o=n[t-1];o.children=o.children.concat(a);n.splice(t,1);if(o.position&&e.position){o.position.end=e.position.end}return t}if(i.type==="SymbolNode"||i.type==="PunctuationNode"){return}}}}));const jt=modifyChildren((function(e,t,r){const a=e.children;const n=r.children;const i=n[t-1];const o=a[0];if(i&&o&&o.type==="WordNode"&&Et.test(nlcst_to_string_toString(o))){i.children=i.children.concat(a);n.splice(t,1);if(i.position&&e.position){i.position.end=e.position.end}return t}}));const It=new RegExp("^("+"[0-9]{1,3}|"+"[a-z]|"+"al|ca|cap|cca|cent|cf|cit|con|cp|cwt|ead|etc|ff|"+"fl|ibid|id|nem|op|pro|seq|sic|stat|tem|viz"+")$");const qt=modifyChildren((function(e,t,r){const a=e.children;if(a&&a.length>1){const n=a[a.length-1];if(n&&nlcst_to_string_toString(n)==="."){const i=a[a.length-2];if(i&&i.type==="WordNode"&&It.test(nlcst_to_string_toString(i).toLowerCase())){i.children.push(n);a.pop();if(n.position&&i.position){i.position.end=n.position.end}const o=r.children[t+1];if(o){e.children=a.concat(o.children);r.children.splice(t+1,1);if(o.position&&e.position){e.position.end=o.position.end}return t-1}}}}}));const Ut=modifyChildren((function(e,t,r){const a=e.children;if(!a||a.length===0||t<1){return}let n=-1;while(a[++n]){const i=a[n];if(i.type==="WordNode"){return}if(i.type==="SymbolNode"||i.type==="PunctuationNode"){const n=nlcst_to_string_toString(i);if(n!==","&&n!==";"){return}const o=r.children[t-1];o.children=o.children.concat(a);if(o.position&&e.position){o.position.end=e.position.end}r.children.splice(t,1);return t}}}));const Gt=visitChildren((function(e){const t=e.children;let r=t.length;let a=false;while(t[--r]){const e=t[r];if(e.type!=="SymbolNode"&&e.type!=="PunctuationNode"){if(e.type==="WordNode"){a=true}continue}if(!bt.test(nlcst_to_string_toString(e))){continue}if(!a){a=true;continue}if(nlcst_to_string_toString(e)!=="."){continue}const n=t[r-1];const i=t[r+1];if(n&&n.type==="WordNode"){const a=t[r+2];if(i&&a&&i.type==="WhiteSpaceNode"&&nlcst_to_string_toString(a)==="."){continue}t.splice(r,1);n.children.push(e);if(e.position&&n.position){n.position.end=e.position.end}r--}else if(i&&i.type==="WordNode"){t.splice(r,1);i.children.unshift(e);if(e.position&&i.position){i.position.start=e.position.start}}}}));const Vt=visitChildren((function(e,t,r){const a=e.children;if(a&&a.length>0&&a[0].type==="WhiteSpaceNode"){r.children.splice(t,0,a.shift());const n=a[0];if(n&&n.position&&e.position){e.position.start=n.position.start}}}));const zt=modifyChildren((function(e,t,r){const a=e.children;if(a&&a.length>0&&a[a.length-1].type==="WhiteSpaceNode"){r.children.splice(t+1,0,e.children.pop());const n=a[a.length-1];if(n&&n.position&&e.position){e.position.end=n.position.end}return t}}));const Mt=modifyChildren((function(e,t,r){if(e.type!=="SentenceNode"){return}const a=e.children;let n=0;while(++n<a.length-1){const i=a[n];if(i.type!=="WhiteSpaceNode"||nlcst_to_string_toString(i).split(/\r\n|\r|\n/).length<3){continue}e.children=a.slice(0,n);const o={type:"SentenceNode",children:a.slice(n+1)};const l=a[n-1];const d=a[n+1];r.children.splice(t+1,0,i,o);if(e.position&&l.position&&d.position){const t=e.position.end;e.position.end=l.position.end;o.position={start:d.position.start,end:t}}return t+1}}));const Ht=modifyChildren((function(e,t,r){if("children"in e&&e.children.length===0){r.children.splice(t,1);return t}}));function tokenizerFactory(e,t){return tokenizer;function tokenizer(r){const a=[];const n=r.children;const i=r.type;let o=-1;const l=n.length-1;let d=0;while(++o<n.length){if(o===l||n[o].type===e&&t.test(nlcst_to_string_toString(n[o]))){const e=n[d];const t=n[o];const r={type:i,children:n.slice(d,o+1)};if(e.position&&t.position){r.position={start:e.position.start,end:t.position.end}}a.push(r);d=o+1}}return a}}function parserFactory(e){const t=e.type;const r=e.tokenizer;const a=e.delimiter;const n=a&&tokenizerFactory(e.delimiterType,a);return parser;function parser(e){const a=this[r](e);return{type:t,children:n?n(a):a}}}class ParseLatin{constructor(e,t){const r=t||e;this.doc=r?String(r):null}run(e,t){const r=e+"Plugins";const a=this[r];let n=-1;if(a){while(a[++n]){a[n](t)}}return t}parse(e){return this.tokenizeRoot(e||this.doc)}tokenize(e){const t=[];if(e===null||e===undefined){e=""}else if(e instanceof String){e=e.toString()}if(typeof e!=="string"){if("length"in e&&(!e[0]||e[0].type)){return e}throw new Error("Illegal invocation: '"+e+"' is not a valid argument for 'ParseLatin'")}if(!e){return t}const r=this.position?eat:noPositionEat;let a=0;let n=0;let i=1;let o=1;let l="";let d="";let u;let c;let h;while(a<e.length){h=e.charAt(a);if(xt.test(h)){c="WhiteSpace"}else if(At.test(h)){c="Punctuation"}else if(St.test(h)){c="Word"}else{c="Symbol"}tick.call(this);l=h;h="";u=c;c=null;a++}tick.call(this);return t;function tick(){if(u===c&&(u==="Word"||u==="WhiteSpace"||h===l||_t.test(h))){d+=h}else{if(d){this["tokenize"+u](d,r)}d=h}}function eat(e){const t=position();update(e);return apply;function apply(...e){return t(add(...e))}}function noPositionEat(){return add}function add(e,r){if(r){r.children.push(e)}else{t.push(e)}return e}function position(){const e=now();function patch(t){t.position=new Position(e);return t}return patch}function update(e){let t=-1;let r=-1;n+=e.length;while(++t<e.length){if(e.charAt(t)==="\n"){r=t;i++}}if(r<0){o+=e.length}else{o=e.length-r}}function Position(e){this.start=e;this.end=now()}function now(){return{line:i,column:o,offset:n}}}}ParseLatin.prototype.position=true;ParseLatin.prototype.tokenizeSymbol=createTextFactory("Symbol");ParseLatin.prototype.tokenizeWhiteSpace=createTextFactory("WhiteSpace");ParseLatin.prototype.tokenizePunctuation=createTextFactory("Punctuation");ParseLatin.prototype.tokenizeSource=createTextFactory("Source");ParseLatin.prototype.tokenizeText=createTextFactory("Text");ParseLatin.prototype.use=useFactory((function(e,t,r){e[t]=e[t].concat(r)}));ParseLatin.prototype.useFirst=useFactory((function(e,t,r){e[t]=r.concat(e[t])}));pluggable(ParseLatin,"tokenizeWord",(function(e,t){const r=(t||noopEat)("");const a={type:"WordNode",children:[]};this.tokenizeText(e,t,a);return r(a)}));pluggable(ParseLatin,"tokenizeSentence",parserFactory({type:"SentenceNode",tokenizer:"tokenize"}));pluggable(ParseLatin,"tokenizeParagraph",parserFactory({type:"ParagraphNode",delimiter:bt,delimiterType:"PunctuationNode",tokenizer:"tokenizeSentence"}));pluggable(ParseLatin,"tokenizeRoot",parserFactory({type:"RootNode",delimiter:wt,delimiterType:"WhiteSpaceNode",tokenizer:"tokenizeParagraph"}));ParseLatin.prototype.use("tokenizeSentence",[ht,gt,Ct,Ft,Ot,Pt,Lt]);ParseLatin.prototype.use("tokenizeParagraph",[Rt,Bt,Nt,jt,qt,Ut,Gt,Vt,zt,Mt,Ht,Lt]);ParseLatin.prototype.use("tokenizeRoot",[Vt,zt,Ht,Lt]);function createTextFactory(e){e+="Node";return createText;function createText(t,r,a){if(t===null||t===undefined){t=""}return(r||noopEat)(t)({type:e,value:String(t)},a)}}function pluggable(e,t,r){e.prototype[t]=function(...e){return this.run(t,r.apply(this,e))}}function useFactory(e){return use;function use(t,r){if(!(t in this)){throw new Error("Illegal Invocation: Unsupported `key` for "+"`use(key, plugins)`. Make sure `key` is a "+"supported function")}if(!r){return}const a=t+"Plugins";r=typeof r==="function"?[r]:r.concat();if(!this[a]){this[a]=[]}e(this,a,r)}}function noopAdd(e,t){if(t){t.children.push(e)}return e}function noopEat(){return noopAdd}var $t=__webpack_require__(8338);var Wt=__webpack_require__(104);var Yt=__webpack_require__(5968);class parse_english_ParseEnglish extends ParseLatin{}parse_english_ParseEnglish.prototype.tokenizeSentencePlugins=[Wt(mergeEnglishElisionExceptions)].concat(parse_english_ParseEnglish.prototype.tokenizeSentencePlugins);parse_english_ParseEnglish.prototype.tokenizeParagraphPlugins=[Yt(mergeEnglishPrefixExceptions)].concat(parse_english_ParseEnglish.prototype.tokenizeParagraphPlugins);var Kt=new RegExp("^("+"inc|ltd|"+"bbls?|cu|doz|fl|ft|gal|gr|gro|in|kt|lbs?|mi|oz|pt|qt|sq|tbsp|"+"tsp|yds?|"+"sec|min|hr|mon|tue|tues|wed|thu|thurs|fri|sat|sun|jan|feb|mar|"+"apr|jun|jul|aug|sep|sept|oct|nov|dec"+")$");var Jt=new RegExp("^("+"Mr|Mrs|Miss|Ms|Mss|Mses|Mlle|Mme|M|Messrs|Mmes|Jr|Sr|Snr|"+"Dr|Mgr|Atty|Prof|Hon|Rev|Fr|Msgr|Sr|Br|St|Pres|Supt|Rep|Sen|"+"Gov|Amb|Treas|Sec|Amd|Brig|Gen|Cdr|Col|Capt|Lt|Maj|Sgt|Po|Wo|Ph|"+"Ave|Blvd|Mt|Rd|Bldgs?|Nat|Natl|Rt|Rte|Co|Pk|Sq|Dr|Pt|St|"+"Ft|Pen|Terr|Hwy|Fwy|Pkwy|"+"Ala|Ariz|Ark|Cal|Calif|Col|Colo|Conn|Del|Fla|Ga|Ida|Id|Ill|Ind|"+"Ia|Kan|Kans|Ken|Ky|La|Me|Md|Mass|Mich|Minn|Miss|Mo|Mont|Neb|"+"Nebr|Nev|Mex|Dak|Okla|Ok|Ore|Penna|Penn|Pa|Tenn|Tex|Ut|Vt|Va|"+"Wash|Wis|Wisc|Wyo|"+"Alta|Man|Ont|Qué|Que|Sask|Yuk|"+"Beds|Berks|Bucks|Cambs|Ches|Corn|Cumb|Derbys|Derbs|Dev|Dor|Dur|"+"Glos|Hants|Here|Heref|Herts|Hunts|Lancs|Leics|Lincs|Mx|Middx|Mddx|"+"Norf|Northants|Northumb|Northd|Notts|Oxon|Rut|Shrops|Salop|Som|"+"Staffs|Staf|Suff|Sy|Sx|Ssx|Warks|War|Warw|Westm|Wilts|Worcs|Yorks"+")$");var Zt=new RegExp("^("+"o|ol"+")$");var Qt=new RegExp("^("+"im|er|em|cause|"+"twas|tis|twere|"+"\\d\\ds?"+")$");var Xt=/^['\u2019]$/;function mergeEnglishPrefixExceptions(e,t,r){var a=e.children;var n=a[a.length-1];var i=a[a.length-2];var o;var l;if(n&&$t(n)==="."&&i&&i.type==="WordNode"){o=$t(i);if(Kt.test(lower(o))||Jt.test(o)){i.children.push(n);a.pop();if(n.position&&i.position){i.position.end=n.position.end}l=r.children[t+1];if(l){e.children=a.concat(l.children);r.children.splice(t+1,1);if(l.position&&e.position){e.position.end=l.position.end}return t-1}}}}function mergeEnglishElisionExceptions(e,t,r){var a;var n;var i;var o;var l;if(e.type!=="PunctuationNode"&&e.type!=="SymbolNode"){return}a=r.children;o=a.length;l=$t(e);if(l==="/"){n=a[t-1];if(n&&lower($t(n))==="w"){a.splice(t,1);n.children.push(e);if(n.position&&e.position){n.position.end=e.position.end}}}else if(Xt.test(l)){n=a[t-1];if(t>2&&t<o-1&&n.type==="WordNode"&&a[t-2].type==="WhiteSpaceNode"&&a[t+1].type==="WhiteSpaceNode"&&Zt.test(lower($t(n)))){a.splice(t,1);n.children.push(e);if(n.position&&e.position){n.position.end=e.position.end}return}if(t!==o-1&&a[t+1].type==="WordNode"&&(t===0||a[t-1].type!=="WordNode")){n=a[t+1];l=lower($t(n));if(Qt.test(l)){a.splice(t,1);n.children=[e].concat(n.children);if(n.position&&e.position){n.position.start=e.position.start}}else if(l==="n"&&t<o-2&&Xt.test($t(a[t+2]))){i=a[t+2];a.splice(t,1);a.splice(t+1,1);n.children=[e].concat(n.children,i);if(n.position){if(e.position){n.position.start=e.position.start}if(i.position){n.position.end=i.position.end}}}}}}function lower(e){return e.toLowerCase()}const er=null&&ParseEnglish;function retextEnglish(){Object.assign(this,{Parser:unherit(parse_english_ParseEnglish)})}const tr=retextEnglish;function normalize(e,t){let r=(typeof e==="string"?e:nlcst_to_string_toString(e)).toLowerCase().replace(/’/g,"'");if(!t||!t.allowDashes){r=r.replace(/-/g,"")}if(!t||!t.allowApostrophes){r=r.replace(/'/g,"")}return r}const visit=function(e,t,r,a){if(typeof t==="function"&&typeof r!=="function"){a=r;r=t;t=null}visitParents(e,t,overload,a);function overload(e,t){const a=t[t.length-1];return r(e,a?a.children.indexOf(e):null,a)}};const rr=["-","–","—",":",";"];const ar={",":[","],"-":["-"],"–":["–"],"—":["—"],'"':['"'],"'":["'"],"‘":["’"],"‚":["’"],"’":["’","‚"],"“":["”"],"”":["”"],"„":["”","“"],"«":["»"],"»":["«"],"‹":["›"],"›":["‹"],"(":[")"],"[":["]"],"{":["}"],"⟨":["⟩"],"「":["」"]};const nr=Object.keys(ar);function isLiteral(e,t){if(!(e&&e.children)){throw new Error("Parent must be a node")}if(t!==null&&typeof t==="object"&&"type"in t){t=e.children.indexOf(t);if(t===-1){throw new Error("Node must be a child of `parent`")}}if(typeof t!=="number"||Number.isNaN(t)){throw new TypeError("Index must be a number")}return Boolean(!containsWord(e,-1,t)&&siblingDelimiter(e,t,1,rr)||!containsWord(e,t,e.children.length)&&siblingDelimiter(e,t,-1,rr)||isWrapped(e,t))}function isWrapped(e,t){const r=siblingDelimiter(e,t,-1,nr);if(r){return siblingDelimiter(e,t,1,ar[nlcst_to_string_toString(r)])}}function siblingDelimiter(e,t,r,a){let n=t+r;while(n>-1&&n<e.children.length){const t=e.children[n];if(t.type==="WordNode"||t.type==="SourceNode"){return}if(t.type!=="WhiteSpaceNode"){return a.includes(nlcst_to_string_toString(t))?t:undefined}n+=r}}function containsWord(e,t,r){while(++t<r){if(e.children[t].type==="WordNode"){return true}}}const ir={}.hasOwnProperty;function nlcst_search_search(e,t,r,a){const n={"*":[]};let i=-1;let o;let l;if(typeof a==="boolean"){l=a?{allowApostrophes:true}:{}}else{l=a||{}}if(!e||!e.type){throw new Error("Expected node")}if(typeof t!=="object"){throw new TypeError("Expected object for phrases")}if(Array.isArray(t)){while(++i<t.length){handlePhrase(t[i])}}else{for(o in t){if(ir.call(t,o)){handlePhrase(o)}}}visit(e,"WordNode",((e,t,a)=>{const i=a;if(!i||t===null||!l.allowLiterals&&isLiteral(i,t)){return}const o=normalize(e,l);const d=n["*"].concat(ir.call(n,o)?n[o]:[]);let u=-1;while(++u<d.length){const e=test(d[u],t,i);if(e){r(e,t,i,d[u])}}}));function test(e,t,r){const a=r.children;const n=t;const i=e.split(" ").slice(1);let o=-1;t++;while(++o<i.length){while(t<a.length){if(a[t].type!=="WhiteSpaceNode")break;t++}if(!a[t]||a[t].type!=="WordNode"||i[o]!=="*"&&normalize(i[o],l)!==normalize(a[t],l)){return}t++}return a.slice(n,t)}function handlePhrase(e){const t=normalize(e.split(" ",1)[0],l);if(ir.call(n,t)){n[t].push(e)}else{n[t]=[e]}}}const quotation=function(e,t,r){const a=t||'"';const n=r||a;const i=[];let o=-1;if(Array.isArray(e)){while(++o<e.length){i[o]=a+e[o]+n}return i}if(typeof e==="string"){return a+e+n}throw new TypeError("Expected string or array of strings")};const sr={}.hasOwnProperty;const pr="https://github.com/retextjs/retext-equality#readme";const lr=convert("WordNode");const dr=convert("WhiteSpaceNode");const ur=convert("PunctuationNode");function factory(e,t){const r="retext-equality"+(t==="en"?"":"-"+t);const a={or:or,basic:basic};const n={};const i=[];const o=[];const l=[];unpack();return(e={})=>{const t=e.ignore||[];const r=e.noBinary;let d=-1;const u=[];const c=[];while(++d<l.length){const e=l[d];if(t.includes(e)){continue}if(o.includes(e)){u.push(e)}else{c.push(e)}}return(e,t)=>{visit(e,"ParagraphNode",(e=>{const o={};nlcst_search_search(e,c,handle);nlcst_search_search(e,u,handle,true);let d;for(d in o){if(sr.call(o,d)){const e=n[d];a[e.type==="or"&&r?"basic":e.type](o[d],e,t)}}return Ke;function handle(e,t,r,a){const n=l.indexOf(a);const d=i[n];const u=d.id;if(a!==a.toLowerCase()&&nlcst_to_string_toString(e)!==a){return}if(!(u in o)){o[u]=[]}o[u].push({type:d.inconsiderate[a],parent:r,nodes:e,start:t,end:t+e.length-1})}}))}};function unpack(){let t=-1;while(++t<e.length){const r=e[t];let a;n[r.id]=r;for(a in r.inconsiderate){if(sr.call(r.inconsiderate,a)){l.push(a);i.push(r);if(r.apostrophe)o.push(a)}}}}function basic(e,t,r){let a=-1;while(++a<e.length){warn(r,e[a],t)}}function or(e,t,r){let a=-1;while(++a<e.length){const n=e[a];const i=n.parent.children;const o=e[a+1];if(o&&o.parent===n.parent&&o.type!==n.type){let e=n.end;while(++e<o.start){const t=i[e];if(dr(t)||lr(t)&&/(and|or)/.test(normalize(t))||ur(t)&&normalize(t)==="/"){continue}break}if(e===o.start){a++;continue}}warn(r,n,t)}}function warn(e,t,a){const n=nlcst_to_string_toString(t.nodes);let i;if(a.considerate){i=Object.keys(a.considerate);if(n.charAt(0).toUpperCase()===n.charAt(0)){let e=-1;while(++e<i.length){i[e]=i[e].charAt(0).toUpperCase()+i[e].slice(1)}}}Object.assign(e.message(quotation(n,"`")+" may be insensitive"+(a.condition?", "+a.condition:"")+", "+(i?"use "+quotation(i,"`").join(", ")+" instead":"try not to use it"),t.nodes[0],[r,a.id].join(":")),{actual:n,expected:i,note:a.note,url:pr})}}const cr=[{id:"learning-disabled",type:"basic",categories:["a"],considerate:{"person with learning disabilities":"a"},inconsiderate:{"learning disabled":"a"},note:"Refer to the person, rather than the disability, first."},{id:"invalid",type:"basic",categories:["a"],considerate:{"turned off":"a","has a disability":"a","person with a disability":"a","people with disabilities":"a"},inconsiderate:{disabled:"a",invalid:"a"},note:"Refer to the person, rather than the disability, first."},{id:"birth-defect",type:"basic",categories:["a"],considerate:{"has a disability":"a","person with a disability":"a","people with disabilities":"a"},inconsiderate:{"birth defect":"a"},note:"Assumes/implies that a person with a disability is deficient or inferior to others. When possible, specify the functional ability or its restriction. (source: https://ncdj.org/style-guide/)"},{id:"suffers-from-disabilities",type:"basic",categories:["a"],considerate:{"has a disability":"a","person with a disability":"a","people with disabilities":"a"},inconsiderate:{"suffers from disabilities":"a","suffering from disabilities":"a","suffering from a disability":"a","afflicted with disabilities":"a","afflicted with a disability":"a"},note:"Assumes that a person with a disability has a reduced quality of life. (source: https://ncdj.org/style-guide/)"},{id:"intellectually-disabled-people",type:"basic",categories:["a"],considerate:{"people with intellectual disabilities":"a"},inconsiderate:{"intellectually disabled people":"a"},note:"Refer to the person, rather than the disability, first. (source: https://ncdj.org/style-guide/)"},{id:"intellectually-disabled",type:"basic",categories:["a"],considerate:{"person with an intellectual disability":"a"},inconsiderate:{"intellectually disabled":"a","has intellectual issues":"a","suffers from intellectual disabilities":"a","suffering from intellectual disabilities":"a","suffering from an intellectual disability":"a","afflicted with intellectual disabilities":"a","afflicted with a intellectual disability":"a"},note:"Assumes that a person with an intellectual disability has a reduced quality of life. (source: https://ncdj.org/style-guide/)"},{id:"nuts",type:"basic",categories:["a"],considerate:{rude:"a",malicious:"a",mean:"a",disgusting:"a",incredible:"a",vile:"a","person with symptoms of mental illness":"a","person with mental illness":"a","person with symptoms of a mental disorder":"a","person with a mental disorder":"a"},inconsiderate:{batshit:"a",psycho:"a",crazy:"a",delirious:"a",insane:"a",insanity:"a",loony:"a",lunacy:"a",lunatic:"a","mentally ill":"a",psychopathology:"a","mental defective":"a",moron:"a",moronic:"a",nuts:"a","mental case":"a",mental:"a"},note:"Describe the behavior or illness without derogatory words. (source: https://ncdj.org/style-guide/)"},{id:"insanely",type:"basic",categories:["a"],considerate:{incredibly:"a"},inconsiderate:{insanely:"a"},note:"Describe the behavior or illness without derogatory words."},{id:"sane",type:"basic",categories:["a"],considerate:{correct:"a",adequate:"a",sufficient:"a",consistent:"a",valid:"a",coherent:"a",sensible:"a",reasonable:"a"},inconsiderate:{sane:"a"},note:"When describing a mathematical or programmatic value, using the word “sane” needlessly invokes the topic of mental health.  Consider using a domain-specific or neutral term instead."},{id:"sanity-check",type:"basic",categories:["a"],considerate:{check:"a",assertion:"a",validation:"a","smoke test":"a"},inconsiderate:{"sanity check":"a"},note:"When describing a mathematical or programmatic value, using the phrase “sanity check” needlessly invokes the topic of mental health.  Consider using simply “check”, or a domain-specific or neutral term, instead."},{id:"bipolar",type:"basic",categories:["a"],considerate:{fluctuating:"a","person with bipolar disorder":"a"},inconsiderate:{bipolar:"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)"},{id:"schizo",type:"basic",categories:["a"],considerate:{"person with schizophrenia":"a"},inconsiderate:{schizophrenic:"a",schizo:"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)"},{id:"manic",type:"basic",categories:["a"],considerate:{"person with schizophrenia":"a"},inconsiderate:{"suffers from schizophrenia":"a","suffering from schizophrenia":"a","afflicted with schizophrenia":"a",manic:"a"},note:"Assumes a person with schizophrenia experiences a reduced quality of life. (source: https://ncdj.org/style-guide/)"},{id:"handicapped-parking",type:"basic",categories:["a"],considerate:{"accessible parking":"a"},inconsiderate:{"handicapped parking":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"handicapped",type:"basic",categories:["a"],considerate:{"person with a handicap":"a",accessible:"a"},inconsiderate:{handicapped:"a"},note:"Refer to the person, rather than the disability, first. (source: https://ncdj.org/style-guide/)"},{id:"amputee",type:"basic",categories:["a"],considerate:{"person with an amputation":"a"},inconsiderate:{amputee:"a"},note:"Refer to the person, rather than the condition, first. (source: https://ncdj.org/style-guide/)"},{id:"gimp",type:"basic",categories:["a"],considerate:{"person with a limp":"a"},inconsiderate:{cripple:"a",crippled:"a",gimp:"a"},note:"Refer to the specific disability."},{id:"mongoloid",type:"basic",categories:["a"],considerate:{"person with Down Syndrome":"a"},inconsiderate:{mongoloid:"a"}},{id:"stroke-victim",type:"basic",categories:["a"],considerate:{"individual who has had a stroke":"a"},inconsiderate:{"stroke victim":"a","suffering from a stroke":"a","victim of a stroke":"a"},note:"Refer to the person, rather than the condition, first."},{id:"multiple-sclerosis-victim",type:"basic",categories:["a"],considerate:{"person who has multiple sclerosis":"a"},inconsiderate:{"suffers from multiple sclerosis":"a","suffering from multiple sclerosis":"a","victim of multiple sclerosis":"a","multiple sclerosis victim":"a","afflicted with multiple sclerosis":"a"}},{id:"suffers-from-md",type:"basic",categories:["a"],considerate:{"person who has muscular dystrophy":"a"},inconsiderate:{"suffers from muscular dystrophy":"a","afflicted with muscular dystrophy":"a","suffers from MD":"a","afflicted with MD":"a"},note:"Refer to a person's condition as a state, not as an affliction. (source: https://ncdj.org/style-guide)"},{id:"family-burden",type:"basic",categories:["a"],considerate:{"with family support needs":"a"},inconsiderate:{"family burden":"a"}},{id:"asylum",type:"basic",categories:["a"],considerate:{"psychiatric hospital":"a","mental health hospital":"a"},inconsiderate:{asylum:"a"}},{id:"bedlam",type:"basic",categories:["a"],considerate:{chaos:"a",hectic:"a",pandemonium:"a"},inconsiderate:{bedlam:"a",madhouse:"a","loony bin":"a"}},{id:"downs-syndrome",type:"basic",categories:["a"],considerate:{"Down Syndrome":"a"},inconsiderate:{"downs syndrome":"a"},note:"Source: https://media.specialolympics.org/soi/files/press-kit/2014_FactSheet_Final.pdf"},{id:"retard",type:"basic",categories:["a"],considerate:{silly:"a",dullard:"a","person with Down Syndrome":"a","person with developmental disabilities":"a",delay:"a","hold back":"a"},inconsiderate:{retard:"a",retarded:"a","short bus":"a"}},{id:"retards",type:"basic",categories:["a"],considerate:{sillies:"a",dullards:"a","people with developmental disabilities":"a","people with Down’s Syndrome":"a",delays:"a","holds back":"a"},inconsiderate:{retards:"a"}},{id:"psychotic",type:"basic",categories:["a"],considerate:{"person with a psychotic condition":"a","person with psychosis":"a"},inconsiderate:{psychotic:"a","suffers from psychosis":"a","suffering from psychosis":"a","afflicted with psychosis":"a","victim of psychosis":"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition."},{id:"lame",type:"basic",categories:["a"],considerate:{boring:"a",dull:"a"},inconsiderate:{lame:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"aids-victim",type:"basic",categories:["a"],considerate:{"person with AIDS":"a"},inconsiderate:{"suffering from aids":"a","suffer from aids":"a","suffers from aids":"a","afflicted with aids":"a","victim of aids":"a","aids victim":"a"}},{id:"wheelchair-bound",type:"basic",categories:["a"],considerate:{"uses a wheelchair":"a"},inconsiderate:{"confined to a wheelchair":"a","bound to a wheelchair":"a","restricted to a wheelchair":"a","wheelchair bound":"a"}},{id:"special-olympians",type:"basic",categories:["a"],considerate:{athletes:"a","Special Olympics athletes":"a"},inconsiderate:{"special olympians":"a","special olympic athletes":"a"},note:"When possible, use the exact discipline of sport. (source: https://media.specialolympics.org/soi/files/press-kit/2014_FactSheet_Final.pdf)"},{id:"ablebodied",type:"basic",categories:["a"],considerate:{"non-disabled":"a"},inconsiderate:{ablebodied:"a"},note:"Can imply that people with disabilities lack the ability to use their bodies well. Sometimes `typical` can be used. (source: https://ncdj.org/style-guide/)"},{id:"addict",type:"basic",categories:["a"],considerate:{"person with a drug addiction":"a","person recovering from a drug addiction":"a"},inconsiderate:{addict:"a",junkie:"a"},note:"Addiction is a neurobiological disease. (source: https://ncdj.org/style-guide/)"},{id:"addicts",type:"basic",categories:["a"],considerate:{"people with a drug addiction":"a","people recovering from a drug addiction":"a"},inconsiderate:{addicts:"a",junkies:"a"},note:"Addiction is a neurobiological disease. (source: https://ncdj.org/style-guide/)"},{id:"alcoholic",type:"basic",categories:["a"],considerate:{"someone with an alcohol problem":"a"},inconsiderate:{alcoholic:"a","alcohol abuser":"a"},note:"Alcoholism is a neurobiological disease. (source: https://ncdj.org/style-guide/)"},{id:"deafmute",type:"basic",categories:["a"],considerate:{deaf:"a"},inconsiderate:{"deaf and dumb":"a",deafmute:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"senile",type:"basic",categories:["a"],considerate:{"person with dementia":"a"},inconsiderate:{demented:"a",senile:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"depressed",type:"basic",categories:["a"],considerate:{sad:"a",blue:"a","bummed out":"a","person with seasonal affective disorder":"a","person with psychotic depression":"a","person with postpartum depression":"a"},inconsiderate:{depressed:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"dwarf",type:"basic",categories:["a"],considerate:{"person with dwarfism":"a","little person":"a","little people":"a",LP:"a","person of short stature":"a"},inconsiderate:{"vertically challenged":"a",midget:"a","small person":"a",dwarf:"a"},note:"Source: https://ncdj.org/style-guide/,https://www.lpaonline.org/faq-#Midget"},{id:"dyslexic",type:"basic",categories:["a"],considerate:{"person with dyslexia":"a"},inconsiderate:{dyslexic:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"epileptic",type:"basic",categories:["a"],considerate:{"person with epilepsy":"a"},inconsiderate:{epileptic:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"hearing-impaired",type:"basic",categories:["a"],considerate:{"hard of hearing":"a","partially deaf":"a","partial hearing loss":"a",deaf:"a"},inconsiderate:{"hearing impaired":"a","hearing impairment":"a"},note:"When possible, ask the person what they prefer. (source: https://ncdj.org/style-guide/)"},{id:"victim-of-polio",type:"basic",categories:["a"],considerate:{polio:"a","person who had polio":"a"},inconsiderate:{"infantile paralysis":"a","suffers from polio":"a","suffering from polio":"a","suffering from a polio":"a","afflicted with polio":"a","afflicted with a polio":"a","victim of polio":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"victim-of-an-injury",type:"basic",categories:["a"],considerate:{"sustain an injury":"a","receive an injury":"a"},inconsiderate:{"suffer from an injury":"a","suffers from an injury":"a","suffering from an injury":"a","afflicted with an injury":"a","victim of an injury":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"victim-of-injuries",type:"basic",categories:["a"],considerate:{"sustain injuries":"a","receive injuries":"a"},inconsiderate:{"suffer from injuries":"a","suffers from injuries":"a","suffering from injuries":"a","afflicted with injuries":"a","victim of injuries":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"paraplegic",type:"basic",categories:["a"],considerate:{"person with paraplegia":"a"},inconsiderate:{paraplegic:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"quadriplegic",type:"basic",categories:["a"],considerate:{"person with quadriplegia":"a"},inconsiderate:{quadriplegic:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"spaz",type:"basic",categories:["a"],considerate:{"person with cerebral palsy":"a",twitch:"a",flinch:"a",hectic:"a"},inconsiderate:{spaz:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"spastic",type:"basic",categories:["a"],considerate:{"person with cerebral palsy":"a",twitch:"a",flinch:"a"},inconsiderate:{spastic:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"stammering",type:"basic",categories:["a"],considerate:{stuttering:"a","disfluency of speech":"a"},inconsiderate:{stammering:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"stutterer",type:"basic",categories:["a"],considerate:{"person who stutters":"a"},inconsiderate:{stutterer:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"tourettes-syndrome",type:"basic",categories:["a"],considerate:{"Tourette syndrome":"a"},inconsiderate:{"tourettes syndrome":"a","tourettes disorder":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"rehab-center",type:"basic",categories:["a"],considerate:{"treatment center":"a"},inconsiderate:{"rehab center":"a","detox center":"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"rehab",type:"basic",categories:["a"],considerate:{treatment:"a"},inconsiderate:{rehab:"a",detox:"a"},note:"Source: https://ncdj.org/style-guide/"},{id:"sociopath",type:"basic",categories:["a"],considerate:{"person with a personality disorder":"a","person with psychopathic personality":"a"},inconsiderate:{sociopath:"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)"},{id:"sociopaths",type:"basic",categories:["a"],considerate:{"people with psychopathic personalities":"a","people with a personality disorder":"a"},inconsiderate:{sociopaths:"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://ncdj.org/style-guide/)"},{id:"dumb",type:"basic",categories:["a"],considerate:{foolish:"a",ludicrous:"a",speechless:"a",silent:"a"},inconsiderate:{dumb:"a"},note:"Dumb here is used in 2 different contexts , the inability to talk or as a curse word. (source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)"},{id:"wacko",type:"basic",categories:["a"],considerate:{foolish:"a",ludicrous:"a",unintelligent:"a"},inconsiderate:{simpleton:"a",stupid:"a",wacko:"a",whacko:"a","low iq":"a"},note:"Source: http://www.mmonjejr.com/2014/02/deconstructing-stupid.html"},{id:"panic-attack",type:"basic",categories:["a"],considerate:{"fit of terror":"a",scare:"a"},inconsiderate:{"panic attack":"a"}},{id:"bony",type:"basic",categories:["a"],considerate:{thin:"a",slim:"a"},inconsiderate:{anorexic:"a",bony:"a"}},{id:"ocd",type:"basic",categories:["a"],considerate:{"has an anxiety disorder":"a",obsessive:"a",pedantic:"a",niggly:"a",picky:"a"},inconsiderate:{neurotic:"a",ocd:"a","o.c.d":"a","o.c.d.":"a"},note:"Only use terms describing mental illness when referring to a professionally diagnosed medical condition. (source: https://english.stackexchange.com/questions/247550/)"},{id:"insomnia",type:"basic",categories:["a"],considerate:{restlessness:"a",sleeplessness:"a"},inconsiderate:{insomnia:"a"}},{id:"insomniac",type:"basic",categories:["a"],considerate:{"person who has insomnia":"a"},inconsiderate:{insomniac:"a"}},{id:"insomniacs",type:"basic",categories:["a"],considerate:{"people who have insomnia":"a"},inconsiderate:{insomniacs:"a"}},{id:"barren",type:"basic",categories:["a"],considerate:{empty:"a",sterile:"a",infertile:"a"},inconsiderate:{barren:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"deaf-to",type:"basic",categories:["a"],considerate:{careless:"a",heartless:"a",indifferent:"a",insensitive:"a"},inconsiderate:{"blind to":"a","blind eye to":"a","blinded by":"a","deaf to":"a","deaf ear to":"a","deafened by":"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"cretin",type:"basic",categories:["a"],considerate:{creep:"a",fool:"a"},inconsiderate:{cretin:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"daft",type:"basic",categories:["a"],considerate:{absurd:"a",foolish:"a"},inconsiderate:{daft:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"idiot",type:"basic",categories:["a"],considerate:{foolish:"a",ludicrous:"a",silly:"a"},inconsiderate:{feebleminded:"a","feeble minded":"a",idiot:"a",imbecile:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"harelipped",type:"basic",categories:["a"],considerate:{"person with a cleft-lip and palate":"a"},inconsiderate:{harelipped:"a",cleftlipped:"a"},note:"Sometimes it's cleft lip or palate, not both. Specify when possible. (source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)"},{id:"harelip",type:"basic",categories:["a"],considerate:{"cleft-lip and palate":"a"},inconsiderate:{harelip:"a","hare lip":"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"maniac",type:"basic",categories:["a"],considerate:{fanatic:"a",zealot:"a",enthusiast:"a"},inconsiderate:{maniac:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"buckteeth",type:"basic",categories:["a"],considerate:{"person with prominent teeth":"a","prominent teeth":"a"},inconsiderate:{bucktoothed:"a",buckteeth:"a"}},{id:"special",type:"basic",categories:["a"],considerate:{"has a disability":"a","person with a disability":"a","people with disabilities":"a"},inconsiderate:{challenged:"a",diffability:"a","differently abled":"a",handicapable:"a",special:"a","special needs":"a","specially abled":"a"},note:"Euphemisms for disabilities can be infantilizing. (source: http://cdrnys.org/blog/disability-dialogue/the-disability-dialogue-4-disability-euphemisms-that-need-to-bite-the-dust/,https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html)"},{id:"libtard",type:"basic",categories:["a"],considerate:{disagreeable:"a",uneducated:"a",ignorant:"a",naive:"a",inconsiderate:"a"},inconsiderate:{fucktard:"a",libtard:"a",contard:"a"},note:"Source: https://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html"},{id:"add",type:"basic",categories:["a"],considerate:{disorganized:"a",distracted:"a",energetic:"a",hyperactive:"a",impetuous:"a",impulsive:"a",inattentive:"a",restless:"a",unfocused:"a"},inconsiderate:{ADD:"a",adhd:"a","a.d.d.":"a","a.d.h.d.":"a"}},{id:"dummy",type:"basic",categories:["a"],considerate:{"test double":"a",placeholder:"a",fake:"a",stub:"a"},inconsiderate:{dummyvariable:"a",dummyvalue:"a",dummyobject:"a",dummy:"a"},note:"Dummy can refer to the inability to talk or be used as a derogatory word meaning stupid. In computer programming it is used where a value or behavior is unimportant. There are better alternatives for other use cases also."},{id:"binge",type:"basic",categories:["a"],considerate:{enthusiastic:"a",spree:"a"},inconsiderate:{binge:"a"},note:"Binge might be insensitive towards folks with eating or drinking disorders (source: https://github.com/retextjs/retext-equality/issues/110)"},{id:"obvious",type:"basic",categories:["a"],inconsiderate:{obvious:"a",obviously:"a"},note:"Not everything is as obvious as you might think. And if it isn’t obvious to the reader, it can hurt. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"just",type:"basic",categories:["a"],inconsiderate:{just:"a"},note:"Not everything is as easy as you might think. And if it isn’t easy for the reader, it can hurt. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"basically",type:"basic",categories:["a"],inconsiderate:{basically:"a"},note:"It’s probably not that basic. If you’re going to explain a confusing previous sentence with a clearer next sentence, why not drop the former and only use the latter? (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"simple",type:"basic",categories:["a"],inconsiderate:{simple:"a",simply:"a"},note:"It’s probably not that simple. Even if it is, you probably don’t need to specifically say it. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"easy",type:"basic",categories:["a"],inconsiderate:{easy:"a",easily:"a"},note:"It’s probably not that easy. Even if it is, you probably don’t need to specifically say it. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"of-course",type:"basic",categories:["a"],inconsiderate:{"of course":"a"},note:"If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"clearly",type:"basic",categories:["a"],inconsiderate:{clearly:"a"},note:"If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"everyone-knows",type:"basic",categories:["a"],inconsiderate:{"everyone knows":"a"},note:"If it’s self-evident then maybe you don’t need to describe it. If it isn’t, don’t say it. (source: https://css-tricks.com/words-avoid-educational-writing/)"},{id:"straightforward",type:"basic",categories:["a"],inconsiderate:{"straight forward":"a",straightforward:"a","straight forwardly":"a",straightforwardly:"a"},note:"It’s probably not that straight forward. Even if it is, you probably don’t need to specifically say it."},{id:"her-him",type:"or",categories:["female","male"],considerate:{their:"a",theirs:"a",them:"a"},inconsiderate:{her:"female",hers:"female",him:"male",his:"male"},condition:"when referring to a person"},{id:"he-she",type:"or",apostrophe:true,categories:["female","male"],considerate:{they:"a",it:"a"},inconsiderate:{she:"female",he:"male","she'd":"female","he'd":"male","she'll":"female","he'll":"male","she's":"female","he's":"male"}},{id:"herself-himself",type:"or",categories:["female","male"],considerate:{themselves:"a",theirself:"a",self:"a"},inconsiderate:{herself:"female",himself:"male"}},{id:"boy-girl",type:"or",categories:["female","male"],considerate:{kid:"a",child:"a",youth:"a"},inconsiderate:{girl:"female",boy:"male"},condition:"when referring to a person"},{id:"gals-man",type:"or",categories:["female","male"],considerate:{people:"a",persons:"a",folks:"a"},inconsiderate:{women:"female",girls:"female",gals:"female",ladies:"female",man:"male",boys:"male",men:"male",guys:"male",dudes:"male",gents:"male",gentlemen:"male"}},{id:"gal-guy",type:"or",categories:["female","male"],considerate:{person:"a",friend:"a",pal:"a",folk:"a",individual:"a"},inconsiderate:{woman:"female",gal:"female",lady:"female",babe:"female",bimbo:"female",chick:"female",guy:"male",lad:"male",fellow:"male",dude:"male",bro:"male",gentleman:"male"}},{id:"fatherland-motherland",type:"or",categories:["female","male"],considerate:{"native land":"a",homeland:"a"},inconsiderate:{motherland:"female",fatherland:"male"}},{id:"father-tongue-mother-tongue",type:"or",categories:["female","male"],considerate:{"native tongue":"a","native language":"a"},inconsiderate:{"mother tongue":"female","father tongue":"male"}},{id:"freshmen-freshwomen",type:"or",categories:["female","male"],considerate:{"first-year students":"a",freshers:"a"},inconsiderate:{freshwomen:"female",freshmen:"male"}},{id:"garbageman-garbagewoman",type:"or",categories:["female","male"],considerate:{"garbage collector":"a","waste collector":"a","trash collector":"a"},inconsiderate:{garbagewoman:"female",garbageman:"male"}},{id:"garbagemen-garbagewomen",type:"or",categories:["female","male"],considerate:{"garbage collectors":"a","waste collectors":"a","trash collectors":"a"},inconsiderate:{garbagewomen:"female",garbagemen:"male"}},{id:"chairman-chairwoman",type:"or",categories:["female","male"],considerate:{chair:"a",head:"a",chairperson:"a",coordinator:"a","committee head":"a",moderator:"a","presiding officer":"a"},inconsiderate:{chairwoman:"female",chairman:"male"}},{id:"committee-man-committee-woman",type:"or",categories:["female","male"],considerate:{"committee member":"a"},inconsiderate:{"committee woman":"female","committee man":"male"}},{id:"cowboy-cowgirl",type:"or",categories:["female","male"],considerate:{cowhand:"a"},inconsiderate:{cowgirl:"female",cowboy:"male"}},{id:"cowboys-cowgirls",type:"or",categories:["female","male"],considerate:{cowhands:"a"},inconsiderate:{cowgirls:"female",cowboys:"male"}},{id:"cattleman-cattlewoman",type:"or",categories:["female","male"],considerate:{"cattle rancher":"a"},inconsiderate:{cattlewoman:"female",cattleman:"male"}},{id:"cattlemen-cattlewomen",type:"or",categories:["female","male"],considerate:{"cattle ranchers":"a"},inconsiderate:{cattlewomen:"female",cattlemen:"male"}},{id:"chairmen-chairwomen",type:"or",categories:["female","male"],considerate:{chairs:"a",chairpersons:"a",coordinators:"a"},inconsiderate:{chairwomen:"female",chairmen:"male"}},{id:"postman-postwoman",type:"or",categories:["female","male"],considerate:{"mail carrier":"a","letter carrier":"a","postal worker":"a"},inconsiderate:{postwoman:"female",mailwoman:"female",postman:"male",mailman:"male"}},{id:"postmen-postwomen",type:"or",categories:["female","male"],considerate:{"mail carriers":"a","letter carriers":"a","postal workers":"a"},inconsiderate:{postwomen:"female",mailwomen:"female",postmen:"male",mailmen:"male"}},{id:"chick-cop-policeman",type:"or",categories:["female","male"],considerate:{officer:"a","police officer":"a"},inconsiderate:{policewoman:"female",policeman:"male","chick cop":"female"}},{id:"policemen-policewomen",type:"or",categories:["female","male"],considerate:{officers:"a","police officers":"a"},inconsiderate:{policewomen:"female",policemen:"male"}},{id:"steward-stewardess",type:"or",categories:["female","male"],considerate:{"flight attendant":"a"},inconsiderate:{stewardess:"female",steward:"male"}},{id:"stewardesses-stewards",type:"or",categories:["female","male"],considerate:{"flight attendants":"a"},inconsiderate:{stewardesses:"female",stewards:"male"}},{id:"congressman-congresswoman",type:"or",categories:["female","male"],considerate:{"member of congress":"a","congress person":"a",legislator:"a",representative:"a"},inconsiderate:{congresswoman:"female",congressman:"male"}},{id:"congressmen-congresswomen",type:"or",categories:["female","male"],considerate:{"members of congress":"a","congress persons":"a",legislators:"a",representatives:"a"},inconsiderate:{congresswomen:"female",congressmen:"male"}},{id:"fireman-firewoman",type:"or",categories:["female","male"],considerate:{"fire fighter":"a","fire officer":"a"},inconsiderate:{firewoman:"female",fireman:"male"}},{id:"firemen-firewomen",type:"or",categories:["female","male"],considerate:{"fire fighters":"a"},inconsiderate:{firewomen:"female",firemen:"male"}},{id:"fisherman-fisherwoman",type:"or",categories:["female","male"],considerate:{fisher:"a","crew member":"a",fisherfolk:"a",angler:"a"},inconsiderate:{fisherwoman:"female",fisherman:"male"}},{id:"fishermen-fisherwomen",type:"or",categories:["female","male"],considerate:{fishers:"a"},inconsiderate:{fisherwomen:"female",fishermen:"male"}},{id:"brotherhood-sisterhood",type:"or",categories:["female","male"],considerate:{kinship:"a",community:"a"},inconsiderate:{sisterhood:"female",brotherhood:"male"}},{id:"common-girl-common-man",type:"or",categories:["female","male"],considerate:{"common person":"a","average person":"a"},inconsiderate:{"common girl":"female","common man":"male"}},{id:"salaryman-salarywoman",type:"or",categories:["female","male"],considerate:{"business executive":"a",entrepreneur:"a","business person":"a",professional:"a"},inconsiderate:{businesswoman:"female",salarywoman:"female",businessman:"male",salaryman:"male"}},{id:"salarymen-salarywomen",type:"or",categories:["female","male"],considerate:{"business executives":"a",entrepreneurs:"a"},inconsiderate:{businesswomen:"female",salarywomen:"female","career girl":"female","career woman":"female",businessmen:"male",salarymen:"male"}},{id:"janitor-janitress",type:"or",categories:["female","male"],considerate:{cleaner:"a"},inconsiderate:{"cleaning lady":"female","cleaning girl":"female","cleaning woman":"female",janitress:"female","cleaning man":"male","cleaning boy":"male",janitor:"male"}},{id:"janitors-janitresses",type:"or",categories:["female","male"],considerate:{cleaners:"a",housekeeping:"a"},inconsiderate:{"cleaning ladies":"female","cleaning girls":"female",janitresses:"female","cleaning men":"male",janitors:"male"}},{id:"delivery-boy-delivery-girl",type:"or",categories:["female","male"],considerate:{courier:"a",messenger:"a"},inconsiderate:{"delivery girl":"female","delivery boy":"male"}},{id:"foreman-forewoman",type:"or",categories:["female","male"],considerate:{supervisor:"a","shift boss":"a"},inconsiderate:{forewoman:"female",foreman:"male"}},{id:"frontman,-front-man-frontwoman,-front-woman",type:"or",categories:["female","male"],considerate:{lead:"a",front:"a",figurehead:"a"},inconsiderate:{"frontwoman, front woman":"female","frontman, front man":"male"}},{id:"front-men,-frontmen-front-women,-frontwomen",type:"or",categories:["female","male"],considerate:{figureheads:"a"},inconsiderate:{"front women, frontwomen":"female","front men, frontmen":"male"}},{id:"foremen-forewomen",type:"or",categories:["female","male"],considerate:{supervisors:"a","shift bosses":"a"},inconsiderate:{forewomen:"female",foremen:"male"}},{id:"insurance-man-insurance-woman",type:"or",categories:["female","male"],considerate:{"insurance agent":"a"},inconsiderate:{"insurance woman":"female","insurance man":"male"}},{id:"insurance-men-insurance-women",type:"or",categories:["female","male"],considerate:{"insurance agents":"a"},inconsiderate:{"insurance women":"female","insurance men":"male"}},{id:"landlady-landlord",type:"or",categories:["female","male"],considerate:{proprietor:"a","building manager":"a"},inconsiderate:{landlady:"female",landlord:"male"}},{id:"landladies-landlords",type:"or",categories:["female","male"],considerate:{proprietors:"a","building managers":"a"},inconsiderate:{landladies:"female",landlords:"male"}},{id:"alumna-alumnus",type:"or",categories:["female","male"],considerate:{graduate:"a"},inconsiderate:{alumna:"female",alumnus:"male"}},{id:"alumnae-alumni",type:"or",categories:["female","male"],considerate:{graduates:"a"},inconsiderate:{alumnae:"female",alumni:"male"}},{id:"newsman-newswoman",type:"or",categories:["female","male"],considerate:{anchor:"a",journalist:"a"},inconsiderate:{newswoman:"female",newspaperwoman:"female",anchorwoman:"female",newsman:"male",newspaperman:"male",anchorman:"male"}},{id:"newsmen-newswomen",type:"or",categories:["female","male"],considerate:{anchors:"a",journalists:"a"},inconsiderate:{newswomen:"female",newspaperwomen:"female",anchorwomen:"female",newsmen:"male",newspapermen:"male",anchormen:"male"}},{id:"repairman-repairwoman",type:"or",categories:["female","male"],considerate:{repairer:"a",technician:"a"},inconsiderate:{repairwoman:"female",repairman:"male"}},{id:"repairmen-repairwomen",type:"or",categories:["female","male"],considerate:{technicians:"a"},inconsiderate:{repairwomen:"female",repairmen:"male"}},{id:"saleslady-salesman",type:"or",categories:["female","male"],considerate:{salesperson:"a","sales clerk":"a","sales rep":"a","sales agent":"a","sales attendant":"a",seller:"a","shop assistant":"a"},inconsiderate:{saleswoman:"female","sales woman":"female",saleslady:"female",salesman:"male","sales man":"male"}},{id:"salesmen-saleswomen",type:"or",categories:["female","male"],considerate:{"sales clerks":"a","sales reps":"a","sales agents":"a",sellers:"a"},inconsiderate:{saleswomen:"female","sales women":"female",salesladies:"female",salesmen:"male","sales men":"male"}},{id:"serviceman-servicewoman",type:"or",categories:["female","male"],considerate:{soldier:"a","service representative":"a"},inconsiderate:{servicewoman:"female",serviceman:"male"}},{id:"servicemen-servicewomen",type:"or",categories:["female","male"],considerate:{soldiers:"a","service representatives":"a"},inconsiderate:{servicewomen:"female",servicemen:"male"}},{id:"waiter-waitress",type:"or",categories:["female","male"],considerate:{server:"a"},inconsiderate:{waitress:"female",waiter:"male"}},{id:"waiters-waitresses",type:"or",categories:["female","male"],considerate:{servers:"a"},inconsiderate:{waitresses:"female",waiters:"male"}},{id:"workman-workwoman",type:"or",categories:["female","male"],considerate:{worker:"a","wage earner":"a",taxpayer:"a"},inconsiderate:{workwoman:"female","working woman":"female",workman:"male","working man":"male"}},{id:"workmen-workwomen",type:"or",categories:["female","male"],considerate:{workers:"a"},inconsiderate:{workwomen:"female",workmen:"male"}},{id:"actor-actress",type:"or",categories:["female","male"],considerate:{performer:"a",star:"a",artist:"a",entertainer:"a"},inconsiderate:{actress:"female",actor:"male"}},{id:"actors-actresses",type:"or",categories:["female","male"],considerate:{performers:"a",stars:"a",artists:"a",entertainers:"a"},inconsiderate:{actresses:"female",actors:"male"}},{id:"aircrewwoman-airman",type:"or",categories:["female","male"],considerate:{pilot:"a",aviator:"a",airstaff:"a"},inconsiderate:{aircrewwoman:"female","aircrew woman":"female",aircrewman:"male",airman:"male"}},{id:"aircrewwomen-airmen",type:"or",categories:["female","male"],considerate:{pilots:"a",aviators:"a",airstaff:"a"},inconsiderate:{aircrewwomen:"female","aircrew women":"female",aircrewmen:"male",airmen:"male"}},{id:"alderman-alderwoman",type:"or",categories:["female","male"],considerate:{"cabinet member":"a"},inconsiderate:{alderwoman:"female",alderman:"male"}},{id:"aldermen-alderwomen",type:"or",categories:["female","male"],considerate:{cabinet:"a","cabinet members":"a",alderperson:"a"},inconsiderate:{alderwomen:"female",aldermen:"male"}},{id:"assemblyman-assemblywoman",type:"or",categories:["female","male"],considerate:{"assembly person":"a","assembly worker":"a"},inconsiderate:{assemblywoman:"female",assemblyman:"male"}},{id:"aunt-uncle",type:"or",categories:["female","male"],considerate:{relative:"a"},inconsiderate:{kinswoman:"female",aunt:"female",kinsman:"male",uncle:"male"}},{id:"aunts-uncles",type:"or",categories:["female","male"],considerate:{relatives:"a"},inconsiderate:{kinswomen:"female",aunts:"female",kinsmen:"male",uncles:"male"}},{id:"boogeyman-boogeywoman",type:"or",categories:["female","male"],considerate:{boogeymonster:"a"},inconsiderate:{boogeywoman:"female",boogeyman:"male"}},{id:"boogieman-boogiewoman",type:"or",categories:["female","male"],considerate:{boogeymonster:"a"},inconsiderate:{boogiewoman:"female",boogieman:"male"}},{id:"bogeyman-bogeywoman",type:"or",categories:["female","male"],considerate:{bogeymonster:"a"},inconsiderate:{bogeywoman:"female",bogeyman:"male"}},{id:"bogieman-bogiewoman",type:"or",categories:["female","male"],considerate:{bogeymonster:"a"},inconsiderate:{bogiewoman:"female",bogieman:"male"}},{id:"boogiemen-boogiewomen",type:"or",categories:["female","male"],considerate:{boogeymonsters:"a"},inconsiderate:{boogiewomen:"female",boogiemen:"male"}},{id:"bogiemen-bogiewomen",type:"or",categories:["female","male"],considerate:{bogeymonsters:"a"},inconsiderate:{bogiewomen:"female",bogiemen:"male"}},{id:"bondsman-bondswoman",type:"or",categories:["female","male"],considerate:{bonder:"a"},inconsiderate:{bondswoman:"female",bondsman:"male"}},{id:"bondsmen-bondswomen",type:"or",categories:["female","male"],considerate:{bonders:"a"},inconsiderate:{bondswomen:"female",bondsmen:"male"}},{id:"husband-wife",type:"or",categories:["female","male"],considerate:{partner:"a","significant other":"a",spouse:"a"},inconsiderate:{wife:"female",husband:"male"},note:"Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner"},{id:"husbands-wives",type:"or",categories:["female","male"],considerate:{partners:"a","significant others":"a",spouses:"a"},inconsiderate:{wives:"female",husbands:"male"},note:"Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner"},{id:"boyfriend-girlfriend",type:"or",categories:["female","male"],considerate:{partner:"a",friend:"a","significant other":"a"},inconsiderate:{girlfriend:"female",boyfriend:"male"},note:"Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner"},{id:"boyfriends-girlfriends",type:"or",categories:["female","male"],considerate:{partners:"a",friends:"a","significant others":"a"},inconsiderate:{girlfriends:"female",boyfriends:"male"},note:"Source: https://www.bustle.com/articles/108321-6-reasons-to-refer-to-your-significant-other-as-your-partner"},{id:"boyhood-girlhood",type:"or",categories:["female","male"],considerate:{childhood:"a"},inconsiderate:{girlhood:"female",boyhood:"male"}},{id:"boyish-girly",type:"or",categories:["female","male"],considerate:{childish:"a"},inconsiderate:{girly:"female",girlish:"female",boyish:"male"}},{id:"journeyman-journeywoman",type:"or",categories:["female","male"],considerate:{journeyperson:"a"},inconsiderate:{journeywoman:"female",journeyman:"male"}},{id:"journeymen-journeywomen",type:"or",categories:["female","male"],considerate:{journeypersons:"a"},inconsiderate:{journeywomen:"female",journeymen:"male"}},{id:"godfather-godmother",type:"or",categories:["female","male"],considerate:{godparent:"a",elder:"a",patron:"a"},inconsiderate:{godmother:"female",patroness:"female",godfather:"male"}},{id:"granddaughter-grandson",type:"or",categories:["female","male"],considerate:{grandchild:"a"},inconsiderate:{granddaughter:"female",grandson:"male"}},{id:"granddaughters-grandsons",type:"or",categories:["female","male"],considerate:{grandchildren:"a"},inconsiderate:{granddaughters:"female",grandsons:"male"}},{id:"forefather-foremother",type:"or",categories:["female","male"],considerate:{ancestor:"a"},inconsiderate:{foremother:"female",forefather:"male"}},{id:"forefathers-foremothers",type:"or",categories:["female","male"],considerate:{ancestors:"a"},inconsiderate:{foremothers:"female",forefathers:"male"}},{id:"gramps-granny",type:"or",categories:["female","male"],considerate:{grandparent:"a",ancestor:"a"},inconsiderate:{granny:"female",grandma:"female",grandmother:"female",grandpappy:"male",granddaddy:"male",gramps:"male",grandpa:"male",grandfather:"male"}},{id:"grandfathers-grandmothers",type:"or",categories:["female","male"],considerate:{grandparents:"a",ancestors:"a"},inconsiderate:{grandmothers:"female",grandfathers:"male"}},{id:"bride-groom",type:"or",categories:["female","male"],considerate:{spouse:"a",newlywed:"a"},inconsiderate:{bride:"female",groom:"male"}},{id:"brother-sister",type:"or",categories:["female","male"],considerate:{sibling:"a"},inconsiderate:{sister:"female",brother:"male"}},{id:"brothers-sisters",type:"or",categories:["female","male"],considerate:{siblings:"a"},inconsiderate:{sisters:"female",brothers:"male"}},{id:"cameraman-camerawoman",type:"or",categories:["female","male"],considerate:{"camera operator":"a","camera person":"a"},inconsiderate:{camerawoman:"female",cameraman:"male"}},{id:"cameramen-camerawomen",type:"or",categories:["female","male"],considerate:{"camera operators":"a"},inconsiderate:{camerawomen:"female",cameramen:"male"}},{id:"caveman-cavewoman",type:"or",categories:["female","male"],considerate:{troglodyte:"a",hominidae:"a"},inconsiderate:{cavewoman:"female",caveman:"male"}},{id:"cavemen-cavewomen",type:"or",categories:["female","male"],considerate:{troglodytae:"a",troglodyti:"a",troglodytes:"a",hominids:"a"},inconsiderate:{cavewomen:"female",cavemen:"male"}},{id:"clergyman-clergywoman",type:"or",categories:["female","male"],considerate:{clergyperson:"a",clergy:"a",cleric:"a"},inconsiderate:{clergywoman:"female",clergyman:"male"}},{id:"clergymen-clergywomen",type:"or",categories:["female","male"],considerate:{clergies:"a",clerics:"a"},inconsiderate:{clergywomen:"female",clergymen:"male"}},{id:"councilman-councilwoman",type:"or",categories:["female","male"],considerate:{"council member":"a"},inconsiderate:{councilwoman:"female",councilman:"male"}},{id:"councilmen-councilwomen",type:"or",categories:["female","male"],considerate:{"council members":"a"},inconsiderate:{councilwomen:"female",councilmen:"male"}},{id:"countryman-countrywoman",type:"or",categories:["female","male"],considerate:{"country person":"a"},inconsiderate:{countrywoman:"female",countryman:"male"}},{id:"countrymen-countrywomen",type:"or",categories:["female","male"],considerate:{"country folk":"a"},inconsiderate:{countrywomen:"female",countrymen:"male"}},{id:"handyman-handywoman",type:"or",categories:["female","male"],considerate:{artisan:"a",craftsperson:"a","skilled worker":"a"},inconsiderate:{handywoman:"female",craftswoman:"female",handyman:"male",craftsman:"male"}},{id:"host-hostess",type:"or",categories:["female","male"],considerate:{presenter:"a",entertainer:"a",emcee:"a"},inconsiderate:{hostess:"female",host:"male"}},{id:"hostesses-hosts",type:"or",categories:["female","male"],considerate:{presenters:"a",entertainers:"a",emcees:"a"},inconsiderate:{hostesses:"female",hosts:"male"}},{id:"handymen-handywomen",type:"or",categories:["female","male"],considerate:{artisans:"a",craftspersons:"a","skilled workers":"a"},inconsiderate:{handywomen:"female",craftswomen:"female",handymen:"male",craftsmen:"male"}},{id:"hangman-hangwoman",type:"or",categories:["female","male"],considerate:{guillotine:"a"},inconsiderate:{hangwoman:"female",hangman:"male"}},{id:"hangmen-hangwomen",type:"or",categories:["female","male"],considerate:{guillotines:"a"},inconsiderate:{hangwomen:"female",hangmen:"male"}},{id:"henchman-henchwoman",type:"or",categories:["female","male"],considerate:{sidekick:"a"},inconsiderate:{henchwoman:"female",henchman:"male"}},{id:"henchmen-henchwomen",type:"or",categories:["female","male"],considerate:{sidekicks:"a"},inconsiderate:{henchwomen:"female",henchmen:"male"}},{id:"hero-heroine",type:"or",categories:["female","male"],considerate:{"role-model":"a",mentor:"a"},inconsiderate:{heroine:"female",hero:"male"}},{id:"heroes-heroines",type:"or",categories:["female","male"],considerate:{"role-models":"a",mentor:"a"},inconsiderate:{heroines:"female",heroes:"male"}},{id:"maternal-paternal",type:"or",categories:["female","male"],considerate:{parental:"a",warm:"a",intimate:"a"},inconsiderate:{maternal:"female",paternal:"male",fraternal:"male"}},{id:"maternity-paternity",type:"or",categories:["female","male"],considerate:{parental:"a"},inconsiderate:{maternity:"female",paternity:"male"}},{id:"dads-moms",type:"or",categories:["female","male"],considerate:{parents:"a"},inconsiderate:{mamas:"female",mothers:"female",moms:"female",mums:"female",mommas:"female",mommies:"female",papas:"male",fathers:"male",dads:"male",daddies:"male"}},{id:"dad-mom",type:"or",categories:["female","male"],considerate:{parent:"a"},inconsiderate:{mama:"female",mother:"female",mom:"female",mum:"female",momma:"female",mommy:"female",papa:"male",father:"male",dad:"male",pop:"male",daddy:"male"}},{id:"daughter-son",type:"or",categories:["female","male"],considerate:{child:"a"},inconsiderate:{daughter:"female",son:"male"}},{id:"daughters-sons",type:"or",categories:["female","male"],considerate:{children:"a"},inconsiderate:{daughters:"female",sons:"male"}},{id:"doorman-doorwoman",type:"or",categories:["female","male"],considerate:{concierge:"a"},inconsiderate:{doorwoman:"female",doorman:"male"}},{id:"doormen-doorwomen",type:"or",categories:["female","male"],considerate:{concierges:"a"},inconsiderate:{doorwomen:"female",doormen:"male"}},{id:"feminin-manly",type:"or",categories:["female","male"],considerate:{humanly:"a",mature:"a"},inconsiderate:{feminin:"female",dudely:"male",manly:"male"}},{id:"females-males",type:"or",categories:["female","male"],considerate:{humans:"a"},inconsiderate:{females:"female",males:"male"}},{id:"king-queen",type:"or",categories:["female","male"],considerate:{ruler:"a"},inconsiderate:{empress:"female",queen:"female",emperor:"male",king:"male"}},{id:"kings-queens",type:"or",categories:["female","male"],considerate:{rulers:"a"},inconsiderate:{empresses:"female",queens:"female",emperors:"male",kings:"male"}},{id:"kingsize-queensize",type:"or",categories:["female","male"],considerate:{jumbo:"a",gigantic:"a"},inconsiderate:{queensize:"female",kingsize:"male"}},{id:"kingmaker-queenmaker",type:"or",categories:["female","male"],considerate:{"power behind the throne":"a"},inconsiderate:{queenmaker:"female",kingmaker:"male"}},{id:"layman-laywoman",type:"or",categories:["female","male"],considerate:{civilian:"a"},inconsiderate:{laywoman:"female",layman:"male"}},{id:"laymen-laywomen",type:"or",categories:["female","male"],considerate:{civilians:"a"},inconsiderate:{laywomen:"female",laymen:"male"}},{id:"dame-lord",type:"or",categories:["female","male"],considerate:{official:"a",owner:"a",expert:"a",superior:"a",chief:"a",ruler:"a"},inconsiderate:{dame:"female",lord:"male"}},{id:"dames-lords",type:"or",categories:["female","male"],considerate:{officials:"a",chiefs:"a",rulers:"a"},inconsiderate:{dames:"female",lords:"male"}},{id:"manhood-womanhood",type:"or",categories:["female","male"],considerate:{adulthood:"a",personhood:"a",maturity:"a"},inconsiderate:{womanhood:"female",masculinity:"male",manhood:"male"}},{id:"femininity-manliness",type:"or",categories:["female","male"],considerate:{humanity:"a"},inconsiderate:{femininity:"female",manliness:"male"}},{id:"marksman-markswoman",type:"or",categories:["female","male"],considerate:{shooter:"a"},inconsiderate:{markswoman:"female",marksman:"male"}},{id:"marksmen-markswomen",type:"or",categories:["female","male"],considerate:{shooters:"a"},inconsiderate:{markswomen:"female",marksmen:"male"}},{id:"middleman-middlewoman",type:"or",categories:["female","male"],considerate:{intermediary:"a","go-between":"a"},inconsiderate:{middlewoman:"female",middleman:"male"}},{id:"middlemen-middlewomen",type:"or",categories:["female","male"],considerate:{intermediaries:"a","go-betweens":"a"},inconsiderate:{middlewomen:"female",middlemen:"male"}},{id:"milkman-milkwoman",type:"or",categories:["female","male"],considerate:{"milk person":"a"},inconsiderate:{milkwoman:"female",milkman:"male"}},{id:"milkmen-milkwomen",type:"or",categories:["female","male"],considerate:{"milk people":"a"},inconsiderate:{milkwomen:"female",milkmen:"male"}},{id:"nephew-niece",type:"or",categories:["female","male"],considerate:{nibling:"a","sibling’s child":"a"},inconsiderate:{niece:"female",nephew:"male"}},{id:"nephews-nieces",type:"or",categories:["female","male"],considerate:{niblings:"a","sibling’s children":"a"},inconsiderate:{nieces:"female",nephews:"male"}},{id:"nobleman-noblewoman",type:"or",categories:["female","male"],considerate:{noble:"a"},inconsiderate:{noblewoman:"female",nobleman:"male"}},{id:"noblemen-noblewomen",type:"or",categories:["female","male"],considerate:{nobles:"a"},inconsiderate:{noblewomen:"female",noblemen:"male"}},{id:"ombudsman-ombudswoman",type:"or",categories:["female","male"],considerate:{notary:"a","consumer advocate":"a","trouble shooter":"a",omsbudperson:"a",mediator:"a"},inconsiderate:{ombudswoman:"female",ombudsman:"male"}},{id:"ombudsmen-ombudswomen",type:"or",categories:["female","male"],considerate:{notaries:"a",omsbudpersons:"a",omsbudpeople:"a",mediators:"a"},inconsiderate:{ombudswomen:"female",ombudsmen:"male"}},{id:"prince-princess",type:"or",categories:["female","male"],considerate:{heir:"a"},inconsiderate:{princess:"female",prince:"male"}},{id:"princes-princesses",type:"or",categories:["female","male"],considerate:{heirs:"a"},inconsiderate:{princesses:"female",princes:"male"}},{id:"sandman-sandwoman",type:"or",categories:["female","male"],considerate:{fairy:"a"},inconsiderate:{sandwoman:"female",sandman:"male"}},{id:"sandmen-sandwomen",type:"or",categories:["female","male"],considerate:{fairies:"a"},inconsiderate:{sandwomen:"female",sandmen:"male"}},{id:"showman-showwoman",type:"or",categories:["female","male"],considerate:{promoter:"a"},inconsiderate:{showwoman:"female",showman:"male"}},{id:"showmen-showwomen",type:"or",categories:["female","male"],considerate:{promoters:"a"},inconsiderate:{showwomen:"female","show women":"female",showmen:"male"}},{id:"spaceman-spacewoman",type:"or",categories:["female","male"],considerate:{astronaut:"a"},inconsiderate:{spacewoman:"female",spaceman:"male"}},{id:"spacemen-spacewomen",type:"or",categories:["female","male"],considerate:{astronauts:"a"},inconsiderate:{spacewomen:"female",spacemen:"male"}},{id:"spokesman-spokeswoman",type:"or",categories:["female","male"],considerate:{speaker:"a",spokesperson:"a",representative:"a"},inconsiderate:{spokeswoman:"female",spokesman:"male"}},{id:"spokesmen-spokeswomen",type:"or",categories:["female","male"],considerate:{speakers:"a",spokespersons:"a"},inconsiderate:{spokeswomen:"female",spokesmen:"male"}},{id:"sportsman-sportswoman",type:"or",categories:["female","male"],considerate:{athlete:"a","sports person":"a"},inconsiderate:{sportswoman:"female",sportsman:"male"}},{id:"sportsmen-sportswomen",type:"or",categories:["female","male"],considerate:{athletes:"a","sports persons":"a"},inconsiderate:{sportswomen:"female",sportsmen:"male"}},{id:"statesman-stateswoman",type:"or",categories:["female","male"],considerate:{senator:"a"},inconsiderate:{stateswoman:"female",statesman:"male"}},{id:"stepbrother-stepsister",type:"or",categories:["female","male"],considerate:{"step-sibling":"a"},inconsiderate:{stepsister:"female",stepbrother:"male"}},{id:"stepbrothers-stepsisters",type:"or",categories:["female","male"],considerate:{"step-siblings":"a"},inconsiderate:{stepsisters:"female",stepbrothers:"male"}},{id:"stepdad-stepmom",type:"or",categories:["female","male"],considerate:{"step-parent":"a"},inconsiderate:{stepmom:"female",stepmother:"female",stepdad:"male",stepfather:"male"}},{id:"stepfathers-stepmothers",type:"or",categories:["female","male"],considerate:{"step-parents":"a"},inconsiderate:{stepmothers:"female",stepfathers:"male"}},{id:"superman-superwoman",type:"or",categories:["female","male"],considerate:{titan:"a"},inconsiderate:{superwoman:"female",superman:"male"}},{id:"supermen-superwomen",type:"or",categories:["female","male"],considerate:{titans:"a"},inconsiderate:{superwomen:"female",supermen:"male"}},{id:"unmanly-unwomanly",type:"or",categories:["female","male"],considerate:{inhumane:"a"},inconsiderate:{unwomanly:"female",unwomenly:"female",unmanly:"male",unmenly:"male"}},{id:"watchman-watchwoman",type:"or",categories:["female","male"],considerate:{watcher:"a"},inconsiderate:{watchwoman:"female",watchman:"male"}},{id:"watchmen-watchwomen",type:"or",categories:["female","male"],considerate:{watchers:"a"},inconsiderate:{watchwomen:"female",watchmen:"male"}},{id:"weatherman-weatherwoman",type:"or",categories:["female","male"],considerate:{"weather forecaster":"a",meteorologist:"a"},inconsiderate:{weatherwoman:"female",weatherman:"male"}},{id:"weathermen-weatherwomen",type:"or",categories:["female","male"],considerate:{"weather forecasters":"a",meteorologists:"a"},inconsiderate:{weatherwomen:"female",weathermen:"male"}},{id:"widow-widower",type:"or",categories:["female","male"],considerate:{bereaved:"a"},inconsiderate:{widow:"female",widows:"female",widower:"male",widowers:"male"}},{id:"own-man-own-woman",type:"or",categories:["female","male"],considerate:{"own person":"a"},inconsiderate:{"own woman":"female","own man":"male"}},{id:"frenchmen",type:"basic",categories:["male"],considerate:{french:"a","the french":"a"},inconsiderate:{frenchmen:"male"}},{id:"ladylike",type:"basic",categories:["female"],considerate:{courteous:"a",cultured:"a"},inconsiderate:{ladylike:"female"}},{id:"like-a-man",type:"basic",categories:["male"],considerate:{resolutely:"a",bravely:"a"},inconsiderate:{"like a man":"male"}},{id:"maiden-name",type:"basic",categories:["female"],considerate:{"birth name":"a"},inconsiderate:{"maiden name":"female"}},{id:"maiden-voyage",type:"basic",categories:["female"],considerate:{"first voyage":"a"},inconsiderate:{"maiden voyage":"female"}},{id:"maiden-flight",type:"basic",categories:["female"],considerate:{"first flight":"a"},inconsiderate:{"maiden flight":"female"}},{id:"man-enough",type:"basic",categories:["male"],considerate:{"strong enough":"a"},inconsiderate:{"man enough":"male"}},{id:"oneupmanship",type:"basic",categories:["male"],considerate:{upstaging:"a",competitiveness:"a"},inconsiderate:{oneupmanship:"male"}},{id:"mrs-",type:"basic",categories:["female"],considerate:{"ms.":"a"},inconsiderate:{"miss.":"female","mrs.":"female"}},{id:"manmade",type:"basic",categories:["male"],considerate:{manufactured:"a",artificial:"a",synthetic:"a","machine-made":"a",constructed:"a"},inconsiderate:{manmade:"male"}},{id:"man-of-action",type:"basic",categories:["male"],considerate:{dynamo:"a"},inconsiderate:{"man of action":"male"}},{id:"man-of-letters",type:"basic",categories:["male"],considerate:{scholar:"a",writer:"a","literary figure":"a"},inconsiderate:{"man of letters":"male"}},{id:"man-of-the-world",type:"basic",categories:["male"],considerate:{sophisticate:"a"},inconsiderate:{"man of the world":"male"}},{id:"fellowship",type:"basic",categories:["male"],considerate:{camaraderie:"a",community:"a",organization:"a"},inconsiderate:{fellowship:"male"}},{id:"freshman",type:"basic",categories:["male"],considerate:{"first-year student":"a",fresher:"a"},inconsiderate:{freshman:"male",freshwoman:"male"}},{id:"workmanship",type:"basic",categories:["male"],considerate:{"quality construction":"a",expertise:"a"},inconsiderate:{workmanship:"male"}},{id:"housewife",type:"basic",categories:["female"],considerate:{homemaker:"a",homeworker:"a"},inconsiderate:{housewife:"female"}},{id:"housewives",type:"basic",categories:["female"],considerate:{homemakers:"a",homeworkers:"a"},inconsiderate:{housewives:"female"}},{id:"motherly",type:"basic",categories:["female"],considerate:{loving:"a",warm:"a",nurturing:"a"},inconsiderate:{motherly:"female"}},{id:"manpower",type:"basic",categories:["male"],considerate:{"human resources":"a",workforce:"a",personnel:"a",staff:"a",labor:"a","labor force":"a",staffing:"a","combat personnel":"a"},inconsiderate:{manpower:"male"}},{id:"master-of-ceremonies",type:"basic",categories:["male"],considerate:{emcee:"a",moderator:"a",convenor:"a"},inconsiderate:{"master of ceremonies":"male"}},{id:"masterful",type:"basic",categories:["male"],considerate:{skilled:"a",authoritative:"a",commanding:"a"},inconsiderate:{masterful:"male"}},{id:"mastermind",type:"basic",categories:["male"],considerate:{genius:"a",creator:"a",instigator:"a",oversee:"a",launch:"a",originate:"a"},inconsiderate:{mastermind:"male"}},{id:"masterpiece",type:"basic",categories:["male"],considerate:{"work of genius":"a","chef d’oeuvre":"a"},inconsiderate:{masterpiece:"male"}},{id:"masterplan",type:"basic",categories:["male"],considerate:{vision:"a","comprehensive plan":"a"},inconsiderate:{masterplan:"male"}},{id:"masterstroke",type:"basic",categories:["male"],considerate:{"trump card":"a","stroke of genius":"a"},inconsiderate:{masterstroke:"male"}},{id:"madman",type:"basic",categories:["male"],considerate:{fanatic:"a",zealot:"a",enthusiast:"a"},inconsiderate:{madman:"male","mad man":"male"}},{id:"madmen",type:"basic",categories:["male"],considerate:{fanatics:"a",zealots:"a",enthusiasts:"a"},inconsiderate:{madmen:"male","mad men":"male"}},{id:"mankind",type:"basic",categories:["male"],considerate:{humankind:"a"},inconsiderate:{mankind:"male"}},{id:"manhour",type:"basic",categories:["male"],considerate:{"staff hour":"a","hour of work":"a"},inconsiderate:{manhour:"male","man hour":"male"}},{id:"manhours",type:"basic",categories:["male"],considerate:{"staff hours":"a","hours of work":"a","hours of labor":"a",hours:"a"},inconsiderate:{manhours:"male","man hours":"male"}},{id:"manned",type:"basic",categories:["a"],considerate:{staffed:"a",crewed:"a",piloted:"a"},inconsiderate:{manned:"a"},note:"Using gender neutral language means users will help to break up gender stereotypes."},{id:"unmanned",type:"basic",categories:["a"],considerate:{robotic:"a",automated:"a"},inconsiderate:{unmanned:"a"},note:"Using gender neutral language means users will help to break up gender stereotypes."},{id:"moaning",type:"basic",categories:["a"],considerate:{whining:"a",complaining:"a",crying:"a"},inconsiderate:{bitching:"a",moaning:"a"}},{id:"moan",type:"basic",categories:["a"],considerate:{whine:"a",complain:"a",cry:"a"},inconsiderate:{bitch:"a",moan:"a"}},{id:"wifebeater",type:"basic",categories:["a"],considerate:{"tank top":"a","sleeveless undershirt":"a"},inconsiderate:{"wife beater":"a",wifebeater:"a"}},{id:"ancient-man",type:"basic",categories:["a"],considerate:{"ancient civilization":"a","ancient people":"a"},inconsiderate:{"ancient man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"authoress",type:"basic",categories:["a"],considerate:{author:"a",writer:"a"},inconsiderate:{authoress:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"average-housewife",type:"basic",categories:["a"],considerate:{"average consumer":"a","average household":"a","average homemaker":"a"},inconsiderate:{"average housewife":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"average-man",type:"basic",categories:["a"],considerate:{"average person":"a"},inconsiderate:{"average man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"average-working-man",type:"basic",categories:["a"],considerate:{"average wage earner":"a","average taxpayer":"a"},inconsiderate:{"average working man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"aviatrix",type:"basic",categories:["a"],considerate:{aviator:"a"},inconsiderate:{aviatrix:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"brotherhood-of-man",type:"basic",categories:["a"],considerate:{"the human family":"a"},inconsiderate:{"brotherhood of man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"calendar-girl",type:"basic",categories:["a"],considerate:{model:"a"},inconsiderate:{"calendar girl":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"call-girl",type:"basic",categories:["a"],considerate:{escort:"a",prostitute:"a","sex worker":"a"},inconsiderate:{"call girl":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"churchman",type:"basic",categories:["a"],considerate:{cleric:"a","practicing Christian":"a","pillar of the Church":"a"},inconsiderate:{churchman:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"english-master",type:"basic",categories:["a"],considerate:{"english coordinator":"a","senior teacher of english":"a"},inconsiderate:{"english master":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"englishmen",type:"basic",categories:["a"],considerate:{"the english":"a"},inconsiderate:{englishmen:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"executrix",type:"basic",categories:["a"],considerate:{executor:"a"},inconsiderate:{executrix:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"father-of-*",type:"basic",categories:["a"],considerate:{"founder of":"a"},inconsiderate:{"father of *":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"founding-father",type:"basic",categories:["a"],considerate:{"the founders":"a","founding leaders":"a",forebears:"a"},inconsiderate:{"founding father":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"housemaid",type:"basic",categories:["a"],considerate:{"house worker":"a","domestic help":"a"},inconsiderate:{housemaid:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"industrial-man",type:"basic",categories:["a"],considerate:{"industrial civilization":"a","industrial people":"a"},inconsiderate:{"industrial man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"lady-doctor",type:"basic",categories:["a"],considerate:{doctor:"a"},inconsiderate:{"lady doctor":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"leading-lady",type:"basic",categories:["a"],considerate:{lead:"a"},inconsiderate:{"leading lady":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"maiden",type:"basic",categories:["a"],considerate:{virgin:"a"},inconsiderate:{maiden:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"maiden-race",type:"basic",categories:["a"],considerate:{"first race":"a"},inconsiderate:{"maiden race":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"maiden-speech",type:"basic",categories:["a"],considerate:{"first speech":"a"},inconsiderate:{"maiden speech":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"man-a-desk",type:"basic",categories:["a"],considerate:{"staff a desk":"a"},inconsiderate:{"man a desk":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"man-in-the-street",type:"basic",categories:["a"],considerate:{"ordinary citizen":"a","typical person":"a","average person":"a"},inconsiderate:{"man in the street":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"man-of-the-land",type:"basic",categories:["a"],considerate:{farmer:"a","rural worker":"a",grazier:"a",landowner:"a","rural community":"a","country people":"a","country folk":"a"},inconsiderate:{"man of the land":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"mans-best-friend",type:"basic",categories:["a"],considerate:{"a faithful dog":"a"},inconsiderate:{"mans best friend":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"man-the-booth",type:"basic",categories:["a"],considerate:{"staff the booth":"a"},inconsiderate:{"man the booth":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"man-the-phones",type:"basic",categories:["a"],considerate:{"answer the phones":"a"},inconsiderate:{"man the phones":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"mansized-task",type:"basic",categories:["a"],considerate:{"a demanding task":"a","a big job":"a"},inconsiderate:{"mansized task":"a","man sized task":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"master-key",type:"basic",categories:["a"],considerate:{"pass key":"a",original:"a"},inconsiderate:{"master key":"a","master copy":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"master-plan",type:"basic",categories:["a"],considerate:{"grand scheme":"a","guiding principles":"a"},inconsiderate:{"master plan":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"master-the-art",type:"basic",categories:["a"],considerate:{"become skilled":"a"},inconsiderate:{"master the art":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"men-of-science",type:"basic",categories:["a"],considerate:{scientists:"a"},inconsiderate:{"men of science":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"midwife",type:"basic",categories:["a"],considerate:{"birthing nurse":"a"},inconsiderate:{midwife:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"modern-man",type:"basic",categories:["a"],considerate:{"modern civilization":"a","modern people":"a"},inconsiderate:{"modern man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"no-mans-land",type:"basic",categories:["a"],considerate:{"unoccupied territory":"a",wasteland:"a",deathtrap:"a"},inconsiderate:{"no mans land":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"office-girls",type:"basic",categories:["a"],considerate:{"administrative staff":"a"},inconsiderate:{"office girls":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"poetess",type:"basic",categories:["a"],considerate:{poet:"a"},inconsiderate:{poetess:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"railwayman",type:"basic",categories:["a"],considerate:{"railway worker":"a"},inconsiderate:{railwayman:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"sportsmanlike",type:"basic",categories:["a"],considerate:{fair:"a",sporting:"a"},inconsiderate:{sportsmanlike:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"sportsmanship",type:"basic",categories:["a"],considerate:{fairness:"a","good humor":"a","sense of fair play":"a"},inconsiderate:{sportsmanship:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"statesmanlike",type:"basic",categories:["a"],considerate:{diplomatic:"a"},inconsiderate:{statesmanlike:"a","statesman like":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"stockman",type:"basic",categories:["a"],considerate:{"cattle worker":"a",farmhand:"a",drover:"a"},inconsiderate:{stockman:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"tradesmans-entrance",type:"basic",categories:["a"],considerate:{"service entrance":"a"},inconsiderate:{"tradesmans entrance":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"tax-man",type:"basic",categories:["a"],considerate:{"tax commissioner":"a","tax office":"a","tax collector":"a"},inconsiderate:{"tax man":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"usherette",type:"basic",categories:["a"],considerate:{usher:"a"},inconsiderate:{usherette:"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"woman-lawyer",type:"basic",categories:["a"],considerate:{lawyer:"a"},inconsiderate:{"woman lawyer":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"woman-painter",type:"basic",categories:["a"],considerate:{painter:"a"},inconsiderate:{"woman painter":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"working-wife",type:"basic",categories:["a"],considerate:{"wage or salary earning woman":"a","two-income family":"a"},inconsiderate:{"working mother":"a","working wife":"a"},note:"Source: https://radyananda.wordpress.com/2009/06/06/nonsexist-alternative-language-handbook-for-conscious-writers/"},{id:"homosexual",type:"basic",categories:["a"],considerate:{gay:"a","gay man":"a",lesbian:"a","gay person/people":"a"},inconsiderate:{homosexual:"a"},note:"This term has a clinical history and is used to imply LGBTQ+ people are diseased or psychologically/emotionally disordered (source: https://www.glaad.org/reference/offensive)"},{id:"homosexual-relations",type:"basic",categories:["a"],considerate:{relationship:"a"},inconsiderate:{"homosexual relations":"a","homosexual relationship":"a"},note:"Avoid labeling something as LGBTQ+ unless you would call the same thing “straight” (source: https://www.glaad.org/reference/offensive)"},{id:"homosexual-couple",type:"basic",categories:["a"],considerate:{couple:"a"},inconsiderate:{"homosexual couple":"a"},note:"Avoid labeling something as LGBTQ+ unless you would call the same thing “straight” (source: https://www.glaad.org/reference/offensive)"},{id:"sexual-preference",type:"basic",categories:["a"],considerate:{"sexual orientation":"a",orientation:"a"},inconsiderate:{"sexual preference":"a"},note:"Implies that being LGBTQ+ is a choice (source: https://www.glaad.org/reference/offensive)"},{id:"gay-lifestyle",type:"basic",categories:["a"],considerate:{"gay lives":"a","gay/lesbian lives":"a"},inconsiderate:{"gay lifestyle":"a","homosexual lifestyle":"a"},note:"Implies that being LGBTQ+ is a choice (source: https://www.glaad.org/reference/offensive)"},{id:"gay-agenda",type:"basic",categories:["a"],considerate:{"gay issues":"a"},inconsiderate:{"gay agenda":"a","homosexual agenda":"a"},note:"Used by anti-LGBTQ+ extremists to create a climate of fear around LGBTQ+ issues (source: https://www.glaad.org/reference/offensive)"},{id:"gay-rights",type:"basic",categories:["a"],considerate:{"equal rights":"a","civil rights for gay people":"a"},inconsiderate:{"special rights":"a","gay rights":"a"},note:"LGBTQ+ rights are human rights (source: https://www.glaad.org/reference/style)"},{id:"fag",type:"basic",categories:["a"],considerate:{gay:"a"},inconsiderate:{fag:"a",faggot:"a",dyke:"a",homo:"a",sodomite:"a"},note:"Derogatory terms for LGBTQ+ people are offensive (source: https://www.glaad.org/reference/offensive)"},{id:"bi",type:"basic",categories:["a"],considerate:{bisexual:"a"},inconsiderate:{bi:"a"},note:"Avoid using slang shorthand (source: https://www.glaad.org/reference/style)"},{id:"homosexual-marriage",type:"basic",categories:["a"],considerate:{"gay marriage":"a","same-sex marriage":"a"},inconsiderate:{"homosexual marriage":"a"},note:"Homosexual has a clinical history and is used to imply LGBTQ+ people are diseased or psychologically/emotionally disordered (source: https://www.glaad.org/reference/style)"},{id:"tranny",type:"basic",categories:["a"],considerate:{transgender:"a"},inconsiderate:{tranny:"a"},note:"Derogatory terms for LGBTQ+ people are offensive (source: https://www.glaad.org/reference/style)"},{id:"transvestite",type:"basic",categories:["a"],considerate:{"cross-dresser":"a"},inconsiderate:{transvestite:"a"},note:"Avoid using outdated / offensive terms (source: https://www.glaad.org/reference/transgender)"},{id:"sexchange",type:"basic",categories:["a"],considerate:{transition:"a","gender confirmation surgery":"a"},inconsiderate:{sexchange:"a","sex change":"a"},note:"Avoid overemphasizing surgery when discussing transgender people or the process of transition - it’s not a necessary component (source: https://www.glaad.org/reference/transgender)"},{id:"sex-change-operation",type:"basic",categories:["a"],considerate:{"sex reassignment surgery":"a","gender confirmation surgery":"a"},inconsiderate:{"sex change operation":"a"},note:"Shift focus away from the assigned sex and towards the identified gender (source: https://www.glaad.org/reference/transgender)"},{id:"transgenders",type:"basic",categories:["a"],considerate:{"transgender people":"a"},inconsiderate:{transgenders:"a"},note:"Transgender should be used as an adjective, not as a noun (source: https://www.glaad.org/reference/transgender)"},{id:"transgendered",type:"basic",categories:["a"],considerate:{transgender:"a"},inconsiderate:{transgendered:"a"},note:"Transgender is already an adjective (source: https://www.glaad.org/reference/transgender)"},{id:"transgenderism",type:"basic",categories:["a"],considerate:{"being transgender":"a","the movement for transgender equality":"a"},inconsiderate:{transgenderism:"a"},note:"This is a term used by anti-transgender activists to dehumanize transgender people and reduce who they are to a condition (source: https://www.glaad.org/reference/transgender)"},{id:"born-a-man",type:"basic",categories:["a"],considerate:{"assigned male at birth":"a","designated male at birth":"a"},inconsiderate:{"biologically male":"a","born a man":"a","genetically male":"a"},note:"Assigned birth gender is complicated; gender identity is more than what your parents decided you were at birth"},{id:"born-a-woman",type:"basic",categories:["a"],considerate:{"assigned female at birth":"a","designated female at birth":"a"},inconsiderate:{"biologically female":"a","born a woman":"a","genetically female":"a"},note:"Assigned birth gender is complicated; gender identity is more than what your parents decided you were at birth"},{id:"bathroom-bill",type:"basic",categories:["a"],considerate:{"non-discrimination law":"a","non-discrimination ordinance":"a"},inconsiderate:{"bathroom bill":"a"},note:"A term created and used by far-right extremists to oppose nondiscrimination laws that protect transgender people (source: https://www.glaad.org/reference/transgender)"},{id:"hermaphroditic",type:"basic",categories:["a"],considerate:{intersex:"a"},inconsiderate:{hermaphroditic:"a",pseudohermaphroditic:"a","pseudo hermaphroditic":"a"},note:"These terms are stigmatizing to patients and their families because intersex status is more complicated than the mere presence or absence of certain gonadal tissues (source: http://www.isna.org/node/979)"},{id:"hermaphrodite",type:"basic",categories:["a"],considerate:{"person who is intersex":"a",person:"a","intersex person":"a"},inconsiderate:{hermaphrodite:"a",pseudohermaphrodite:"a","pseudo hermaphrodite":"a"},note:"These terms are stigmatizing to patients and their families because intersex status is more complicated than the mere presence or absence of certain gonadal tissues (source: http://www.isna.org/node/979)"},{id:"heshe",type:"basic",categories:["a"],considerate:{"transgender person":"a",person:"a"},inconsiderate:{shemale:"a","she male":"a",heshe:"a",shehe:"a"},note:"This word dehumanizes transgender people (source: https://www.reddit.com/r/asktransgender/comments/23wbq1/is_the_term_shemale_seen_as_offensive/)"},{id:"gender-pronoun",type:"basic",categories:["a"],considerate:{pronoun:"a",pronouns:"a"},inconsiderate:{"preferred pronoun":"a","preferred pronouns":"a","gender pronoun":"a","gender pronouns":"a"},note:"Preferred pronoun sounds like it is optional to use someone's correct pronoun (source: https://www.selfdefined.app/definitions/pronouns/)"},{id:"islamist",type:"basic",categories:["a"],considerate:{muslim:"a","person of Islamic faith":"a",fanatic:"a",zealot:"a","follower of islam":"a","follower of the islamic faith":"a"},inconsiderate:{islamist:"a"},note:"Source: https://www.usnews.com/news/newsgram/articles/2013/04/04/the-associated-press-revises-islamist-another-politically-charged-term"},{id:"islamists",type:"basic",categories:["a"],considerate:{muslims:"a","people of Islamic faith":"a",fanatics:"a",zealots:"a"},inconsiderate:{islamists:"a"},note:"Source: https://www.usnews.com/news/newsgram/articles/2013/04/04/the-associated-press-revises-islamist-another-politically-charged-term"},{id:"master",type:"basic",categories:["a"],considerate:{primary:"a",lead:"a",hub:"a",reference:"a"},inconsiderate:{master:"a"},note:"Avoid using the term `master`; these suggestions are for the computer term, but there are better alternatives for other cases too"},{id:"masters",type:"basic",categories:["a"],considerate:{primaries:"a",hubs:"a",references:"a"},inconsiderate:{masters:"a"},note:"Avoid using the term `master`; these suggestions are for the computer term, but there are better alternatives for other cases too"},{id:"slave",type:"basic",categories:["a"],considerate:{secondary:"a",worker:"a",replica:"a",node:"a"},inconsiderate:{slave:"a"},note:"Avoid using the term `slave`; these suggestions are for the computer term, but there are better alternatives for other cases too"},{id:"slaves",type:"basic",categories:["a"],considerate:{secondaries:"a",workers:"a",replicas:"a",nodes:"a"},inconsiderate:{slaves:"a"},note:"Avoid using the term `slave`; these suggestions are for the computer term, but there are better alternatives for other cases too"},{id:"blackhat",type:"basic",categories:["a"],considerate:{"unethical hacker":"a","malicious actor":"a"},inconsiderate:{blackhat:"a"}},{id:"whitehat",type:"basic",categories:["a"],considerate:{"ethical hacker":"a","security researcher":"a"},inconsiderate:{whitehat:"a"}},{id:"eskimo",type:"basic",categories:["a"],considerate:{Inuit:"a"},inconsiderate:{eskimo:"a"}},{id:"eskimos",type:"basic",categories:["a"],considerate:{Inuits:"a"},inconsiderate:{eskimos:"a"}},{id:"oriental",type:"basic",categories:["a"],considerate:{"Asian person":"a"},inconsiderate:{oriental:"a"}},{id:"orientals",type:"basic",categories:["a"],considerate:{"Asian people":"a"},inconsiderate:{orientals:"a"}},{id:"nonwhite",type:"basic",categories:["a"],considerate:{"person of color":"a","people of color":"a"},inconsiderate:{nonwhite:"a","non white":"a"}},{id:"ghetto",type:"basic",categories:["a"],considerate:{projects:"a",urban:"a"},inconsiderate:{ghetto:"a"}},{id:"redskin",type:"basic",categories:["a"],considerate:{"Native American":"a"},inconsiderate:{"red indian":"a",pocahontas:"a",redskin:"a"}},{id:"redskins",type:"basic",categories:["a"],considerate:{"Native American People":"a"},inconsiderate:{"red indians":"a",redskins:"a"}},{id:"totem",type:"basic",categories:["a"],considerate:{favorite:"a",inspiration:"a","personal interest":"a","personality type":"a"},inconsiderate:{"animal spirit":"a","dream catcher":"a","spirit animal":"a",totem:"a"},note:"Avoid using terms that oversimplify the complex and varied beliefs of indigenous religions. (source: https://www.worldreligionnews.com/opinion/spirit-animal-not-joke-oppression,https://www.spiralnature.com/spirituality/spirit-animal-cultural-appropriation)"},{id:"long-time-no-see",type:"basic",categories:["a"],considerate:{"I haven’t seen you in a long time":"a","it’s been a long time":"a"},inconsiderate:{"long time no hear":"a","long time no see":"a"},note:"Avoid using phrases that implicitly mock people with limited knowledge of the English language. (source: https://www.npr.org/sections/codeswitch/2014/03/09/288300303/who-first-said-long-time-no-see-and-in-which-language)"},{id:"indian-country",type:"basic",categories:["a"],considerate:{"enemy territory":"a"},inconsiderate:{"Indian country":"a"},note:"Avoid using phrases referring to the genocidal United States “Indian Removal” laws. (source: https://newsmaven.io/indiancountrytoday/archive/off-the-reservation-a-teachable-moment-nW1d7U0JRkOszhtg8N1V1A/)"},{id:"off-reserve",type:"basic",categories:["a"],considerate:{disobey:"a",endure:"a","object to":"a",oppose:"a",resist:"a"},inconsiderate:{"jump the reservation":"a","off reserve":"a","off the reservation":"a"},note:"Avoid using phrases referring to the genocidal United States “Indian Removal” laws. (source: http://blog.nativepartnership.org/off-the-reservation/,https://www.wsj.com/articles/off-the-reservation-is-a-phrase-with-a-dark-past-1462552837,https://www.npr.org/sections/codeswitch/2014/06/29/326690947/should-saying-someone-is-off-the-reservation-be-off-limits,https://nowtoronto.com/news/native-references-and-terms-that-are-offensive-to-indigenous-people/)"},{id:"on-the-warpath",type:"basic",categories:["a"],considerate:{defend:"a"},inconsiderate:{"circle the wagons":"a","on the warpath":"a"},note:"Avoid using phrases referring to colonial stereotypes regarding Native Americans. (source: https://idioms.thefreedictionary.com/circle+the+wagons,https://idioms.thefreedictionary.com/go+on+the+warpath)"},{id:"too-many-chiefs",type:"basic",categories:["a"],considerate:{"too many chefs in the kitchen":"a","too many cooks spoil the broth":"a"},inconsiderate:{"too many chiefs":"a"},note:"Avoid using phrases referring to colonial stereotypes regarding Native Americans. (source: https://idioms.thefreedictionary.com/too+many+chiefs+and+not+enough+Indians)"},{id:"natives-are-restless",type:"basic",categories:["a"],considerate:{dissatisfied:"a",frustrated:"a"},inconsiderate:{"natives are restless":"a","natives are becoming restless":"a","natives are getting restless":"a","natives are growing restless":"a"},note:"Avoid using phrases referring to colonial stereotypes regarding indigenous peoples. (source: https://tvtropes.org/pmwiki/pmwiki.php/Main/TheNativesAreRestless)"},{id:"powwow",type:"basic",categories:["a"],considerate:{conference:"a",gathering:"a",meeting:"a"},inconsiderate:{"pow wow":"a",powwow:"a"},note:"Avoid casually using this term, which refers to traditional indigenous celebration ceremonies that were banned by genocidal laws in the United States and Canada — Native people died fighting for this right. (source: https://twitter.com/chadloder/status/1203507070772793345,http://nativeappropriations.com/2012/09/paul-frank-offends-every-native-person-on-the-planet-with-fashion-night-out-dream-catchin-pow-wow.html,https://www.britannica.com/topic/powwow,https://nowtoronto.com/news/native-references-and-terms-that-are-offensive-to-indigenous-people/)"},{id:"indian-give",type:"basic",categories:["a"],considerate:{"go back on one’s offer":"a"},inconsiderate:{"indian give":"a","indian giver":"a"},note:"Avoid using phrases referring to colonial stereotypes regarding Native Americans."},{id:"pinoys",type:"basic",categories:["a"],considerate:{Filipinos:"a","Filipino people":"a"},inconsiderate:{pinoys:"a",pinays:"a"}},{id:"towel-heads",type:"basic",categories:["a"],considerate:{Arabs:"a","Middle Eastern People":"a"},inconsiderate:{"sand niggers":"a","towel heads":"a"}},{id:"latino",type:"basic",categories:["a"],considerate:{Latinx:"a"},inconsiderate:{latino:"a",latina:"a"},note:"Whenever possible, try to be gender inclusive."},{id:"japs",type:"basic",categories:["a"],considerate:{"Japanese person":"a","Japanese people":"a"},inconsiderate:{japs:"a"}},{id:"hymie",type:"basic",categories:["a"],considerate:{"Jewish person":"a"},inconsiderate:{shlomo:"a",shyster:"a",hymie:"a"}},{id:"goy",type:"basic",categories:["a"],considerate:{"a person who is not Jewish":"a","not Jewish":"a"},inconsiderate:{goyim:"a",goyum:"a",goy:"a"}},{id:"spade",type:"basic",categories:["a"],considerate:{"a Black person":"a"},inconsiderate:{spade:"a"}},{id:"gyp",type:"basic",categories:["a"],considerate:{Nomad:"a",Traveler:"a",Roma:"a",Romani:"a"},inconsiderate:{gyppo:"a",gypsy:"a",Gipsy:"a",gyp:"a"},note:"Gypsy is insensitive, use Roma or Romani. They’re not Egyptian as the name suggests. (source: en.wikipedia.org/wiki/Romani_people#cite_ref-80)"},{id:"blacklist",type:"basic",categories:["a"],considerate:{blocklist:"a",wronglist:"a",banlist:"a","deny list":"a"},inconsiderate:{blacklist:"a","black list":"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"blacklisted",type:"basic",categories:["a"],considerate:{blocklisted:"a",wronglisted:"a",banlisted:"a","deny-listed":"a"},inconsiderate:{blacklisted:"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"blacklisting",type:"basic",categories:["a"],considerate:{blocklisting:"a",wronglisting:"a",banlisting:"a","deny-listing":"a"},inconsiderate:{blacklisting:"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"whitelist",type:"basic",categories:["a"],considerate:{passlist:"a",alrightlist:"a",safelist:"a","allow list":"a"},inconsiderate:{whitelist:"a","white list":"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"whitelisted",type:"basic",categories:["a"],considerate:{passlisted:"a",alrightlisted:"a",safelisted:"a","allow-listed":"a"},inconsiderate:{whitelisted:"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"whitelisting",type:"basic",categories:["a"],considerate:{passlisting:"a",alrightlisting:"a",safelisting:"a","allow-listing":"a"},inconsiderate:{whitelisting:"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"whitespace",type:"basic",categories:["a"],considerate:{space:"a",blank:"a"},inconsiderate:{whitespace:"a","white space":"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"whitespaces",type:"basic",categories:["a"],considerate:{space:"a",blank:"a"},inconsiderate:{whitespaces:"a","white spaces":"a"},note:"Replace racially-charged language with more accurate and inclusive words"},{id:"savage",type:"basic",categories:["a"],considerate:{simple:"a",indigenous:"a","hunter-gatherer":"a"},inconsiderate:{primitive:"a",savage:"a","stone age":"a"},note:"Avoid using terms that imply a group has not changed over time and that they are inferior"},{id:"tribe",type:"basic",categories:["a"],considerate:{society:"a",community:"a"},inconsiderate:{tribe:"a"},note:"Avoid using terms that make some groups sound inferior"},{id:"sophisticated-culture",type:"basic",categories:["a"],considerate:{"complex culture":"a"},inconsiderate:{"sophisticated culture":"a"},note:"Avoid using terms that make some groups sound inferior. Replace “sophisticated” with a neutral term such as “complex”"},{id:"sophisticated-technology",type:"basic",categories:["a"],considerate:{"complex technology":"a"},inconsiderate:{"sophisticated technology":"a"},note:"Avoid using terms that make some groups sound inferior. Replace “sophisticated” with a neutral term such as “complex”"},{id:"bugreport",type:"basic",categories:["a"],considerate:{"bug report":"a",snapshot:"a"},inconsiderate:{bugreport:"a"},note:"Avoid using `bugreport`, as the word `bugre` is a slur in Brazilian Portuguese"},{id:"grandfather-clause",type:"basic",categories:["a"],considerate:{"legacy policy":"a","legacy clause":"a","deprecation policy":"a"},inconsiderate:{"grandfather clause":"a","grandfather policy":"a"},note:"Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)"},{id:"grandfathering",type:"basic",categories:["a"],considerate:{deprecate:"a"},inconsiderate:{grandfathering:"a"},note:"Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)"},{id:"grandfathered",type:"basic",categories:["a"],considerate:{deprecated:"a",legacy:"a"},inconsiderate:{grandfathered:"a"},note:"Avoid using phrases referring to racist United States “Jim Crow” laws. (source: https://en.wikipedia.org/wiki/Grandfather_clause#Origin)"},{id:"make-*-great-again",type:"basic",categories:["a"],considerate:{improve:"a"},inconsiderate:{"make * great again":"a","make * * great again":"a","make * * * great again":"a","make * * * * great again":"a","make * * * * * great again":"a"}},{id:"committed-suicide",type:"basic",categories:["a"],considerate:{"died by suicide":"a"},inconsiderate:{"committed suicide":"a","completed suicide":"a"},note:"Source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide, https://www.speakingofsuicide.com/2013/04/13/language/"},{id:"commit-suicide",type:"basic",categories:["a"],considerate:{"die by suicide":"a"},inconsiderate:{"commit suicide":"a","complete suicide":"a","successful suicide":"a"},note:"Committing suicide is not successful/unsuccessful, that sends the wrong message (source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide, https://www.speakingofsuicide.com/2013/04/13/language/)"},{id:"suicide-pact",type:"basic",categories:["a"],considerate:{"rise in suicides":"a"},inconsiderate:{"suicide epidemic":"a","epidemic of suicides":"a","suicide pact":"a"},note:"Using sensational words can cause copycat suicides or contagion (source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide)"},{id:"failed-suicide",type:"basic",categories:["a"],considerate:{"suicide attempt":"a","attempted suicide":"a"},inconsiderate:{"failed suicide":"a","failed attempt":"a","suicide failure":"a"},note:"Attempted suicide should not be depicted as a failure (source: https://www.speakingofsuicide.com/2013/04/13/language, https://www.afsp.org/news-events/for-the-media/reporting-on-suicide)"},{id:"suicide-note",type:"basic",categories:["a"],considerate:{"a note from the deceased":"a"},inconsiderate:{"suicide note":"a"},note:"Source: https://www.afsp.org/news-events/for-the-media/reporting-on-suicide"},{id:"hang",type:"basic",categories:["a"],considerate:{"the app froze":"a","the app stopped responding":"a","the app stopped responding to events":"a","the app became unresponsive":"a"},inconsiderate:{hang:"a",hanged:"a"},note:"When describing the behavior of computer software, using the word “hanged” needlessly invokes the topic of death by self-harm or lynching.  Consider using the word “froze” or the phrase “stopped responding to events” or “became unresponsive” instead."}];const mr=factory(cr,"en");const fr=mr;const hr={abbo:1,abeed:2,abid:1,abo:1,abortion:1,abuse:1,addict:1,addicts:1,adult:0,africa:0,african:0,africoon:2,alla:1,allah:0,"alligator bait":2,alligatorbait:2,amateur:0,american:0,anal:1,analannie:2,analsex:1,angie:0,angry:0,anus:1,arab:0,arabs:0,arabush:2,arabushs:2,areola:1,argie:2,armo:2,armos:2,aroused:0,arse:2,"arse bandit":2,arsehole:2,asian:0,ass:2,assassin:0,assassinate:0,assassination:0,assault:0,assbagger:2,assblaster:2,assclown:2,asscowboy:2,asses:2,assfuck:2,assfucker:2,asshat:2,asshole:2,assholes:2,asshore:2,assjockey:2,asskiss:2,asskisser:2,assklown:2,asslick:2,asslicker:2,asslover:2,assman:2,assmonkey:2,assmunch:2,assmuncher:2,asspacker:2,asspirate:2,asspuppies:2,assranger:2,asswhore:2,asswipe:2,athletesfoot:1,attack:0,australian:0,babe:1,babies:0,backdoor:0,backdoorman:2,backseat:0,badfuck:2,balllicker:2,balls:1,ballsack:1,banana:0,bananas:0,banging:1,baptist:0,barelylegal:2,barf:2,barface:2,barfface:2,bast:0,bastard:1,"batty boy":2,bazongas:2,bazooms:2,beanbag:2,beanbags:2,beaner:2,beaners:2,beaney:2,beaneys:2,beast:0,beastality:1,beastial:1,beastiality:1,beatoff:2,beatyourmeat:2,beaver:0,bender:0,bent:0,bestial:1,bestiality:1,bi:0,biatch:2,bible:0,bicurious:1,bigass:2,bigbastard:2,bigbutt:2,bigger:0,bisexual:0,bitch:1,bitcher:2,bitches:1,bitchez:2,bitchin:2,bitching:2,bitchslap:2,bitchy:2,biteme:2,black:0,blackman:1,blackout:0,blacks:1,blind:0,blow:0,blowjob:2,bluegum:2,bluegums:2,boang:2,boche:2,boches:2,bogan:2,bohunk:2,bollick:2,bollock:2,bollocks:2,bomb:0,bombers:0,bombing:0,bombs:0,bomd:0,bondage:1,boner:2,bong:2,boob:1,boobies:2,boobs:1,booby:2,boody:2,boom:0,boong:2,boonga:2,boongas:2,boongs:2,boonie:2,boonies:2,bootlip:2,bootlips:2,booty:2,bootycall:2,bosch:0,bosche:2,bosches:2,boschs:2,"bounty bar":1,"bounty bars":1,bountybar:1,bra:0,brea5t:2,breast:0,breastjob:2,breastlover:2,breastman:2,brothel:1,brownie:0,brownies:0,buddhahead:2,buddhaheads:2,buffies:2,buffy:0,bufter:2,bufty:2,bugger:2,buggered:2,buggery:2,bule:2,bules:2,bullcrap:2,bulldike:2,bulldyke:2,bullshit:2,"bum boy":2,"bum chum":2,"bum robber":2,bumblefuck:2,bumfuck:2,bung:2,bunga:2,bungas:2,bunghole:2,buried:0,burn:0,"burr head":2,"burr heads":2,burrhead:2,burrheads:2,butchbabes:2,butchdike:2,butchdyke:2,butt:0,buttbang:2,buttface:2,buttfuck:2,buttfucker:2,buttfuckers:2,butthead:2,buttman:2,buttmunch:2,buttmuncher:2,buttpirate:2,buttplug:1,buttstain:2,byatch:2,cacker:2,"camel jockey":2,"camel jockeys":2,cameljockey:2,cameltoe:2,canadian:0,cancer:0,carpetmuncher:2,carruth:2,catholic:0,catholics:0,cemetery:0,chav:2,"cheese eating surrender monkey":2,"cheese eating surrender monkies":2,"cheeseeating surrender monkey":2,"cheeseeating surrender monkies":2,cheesehead:2,cheeseheads:2,cherrypopper:2,"chi chi man":2,chickslick:2,childrens:0,chin:0,"china swede":2,"china swedes":2,chinaman:2,chinamen:2,chinaswede:2,chinaswedes:2,chinese:0,"ching chong":2,"ching chongs":2,chingchong:2,chingchongs:2,chink:2,chinks:2,chinky:2,choad:2,chode:2,chonkies:2,chonky:2,chonkys:2,christ:0,"christ killer":2,"christ killers":2,christian:0,chug:2,chugs:2,chunger:2,chungers:2,chunkies:2,chunky:2,chunkys:2,church:0,cigarette:0,cigs:0,clamdigger:2,clamdiver:2,clansman:2,clansmen:2,clanswoman:2,clanswomen:2,clit:1,clitoris:1,clogwog:2,cocaine:1,cock:1,cockblock:2,cockblocker:2,cockcowboy:2,cockfight:2,cockhead:2,cockknob:2,cocklicker:2,cocklover:2,cocknob:2,cockqueen:2,cockrider:2,cocksman:2,cocksmith:2,cocksmoker:2,cocksucer:2,cocksuck:2,cocksucked:2,cocksucker:2,cocksucking:2,cocktail:0,cocktease:2,cocky:2,coconut:0,coconuts:0,cohee:2,coitus:1,color:0,colored:0,coloured:0,commie:2,communist:0,condom:1,conservative:0,conspiracy:0,coolie:2,coolies:2,cooly:2,coon:2,"coon ass":2,"coon asses":2,coonass:2,coonasses:2,coondog:2,coons:2,copulate:1,cornhole:2,corruption:0,cra5h:1,crabs:0,crack:1,cracka:2,cracker:1,crackpipe:1,crackwhore:2,crap:2,crapola:2,crapper:2,crappy:2,crash:0,creamy:0,crime:0,crimes:0,criminal:0,criminals:0,crotch:1,crotchjockey:2,crotchmonkey:2,crotchrot:2,cum:2,cumbubble:2,cumfest:2,cumjockey:2,cumm:2,cummer:2,cumming:2,cummings:1,cumquat:2,cumqueen:2,cumshot:2,cunilingus:1,cunillingus:1,cunn:2,cunnilingus:1,cunntt:2,cunt:2,cunteyed:2,cuntfuck:2,cuntfucker:2,cuntlick:2,cuntlicker:2,cuntlicking:2,cuntsucker:2,"curry muncher":2,"curry munchers":2,currymuncher:2,currymunchers:2,cushi:2,cushis:2,cybersex:1,cyberslimer:2,dago:2,dagos:2,dahmer:2,dammit:2,damn:1,damnation:1,damnit:2,darkey:2,darkeys:2,darkie:2,darkies:2,darky:2,datnigga:2,dead:0,deapthroat:2,death:0,deepthroat:2,defecate:1,dego:2,degos:2,demon:1,deposit:0,desire:0,destroy:0,deth:0,devil:1,devilworshipper:1,"diaper head":2,"diaper heads":2,diaperhead:2,diaperheads:2,dick:1,dickbrain:2,dickforbrains:2,dickhead:2,dickless:2,dicklick:2,dicklicker:2,dickman:2,dickwad:2,dickweed:2,diddle:2,die:0,died:0,dies:0,dike:1,dildo:1,dingleberry:2,dink:2,dinks:2,dipshit:2,dipstick:2,dirty:0,disease:0,diseases:0,disturbed:0,dive:0,dix:2,dixiedike:2,dixiedyke:2,doggiestyle:2,doggystyle:2,dong:2,doodoo:2,doom:0,dope:2,"dot head":2,"dot heads":2,dothead:2,dotheads:2,dragqueen:2,dragqween:2,dripdick:2,drug:1,drunk:1,drunken:1,dumb:2,dumbass:2,dumbbitch:2,dumbfuck:2,"dune coon":2,"dune coons":2,dyefly:2,dyke:1,easyslut:2,eatballs:2,eatme:2,eatpussy:2,ecstacy:0,"eight ball":2,"eight balls":2,ejaculate:1,ejaculated:1,ejaculating:1,ejaculation:1,enema:1,enemy:0,erect:0,erection:1,ero:2,escort:0,esqua:2,ethiopian:0,ethnic:0,european:0,evl:2,excrement:1,execute:0,executed:0,execution:0,executioner:0,exkwew:2,explosion:0,facefucker:2,faeces:2,fag:1,fagging:2,faggot:2,fagot:2,failed:0,failure:0,fairies:0,fairy:0,faith:0,fannyfucker:2,fart:1,farted:1,farting:1,farty:2,fastfuck:2,fat:0,fatah:2,fatass:2,fatfuck:2,fatfucker:2,fatso:2,fckcum:2,fear:0,feces:1,felatio:1,felch:2,felcher:2,felching:2,fellatio:2,feltch:2,feltcher:2,feltching:2,fetish:1,fight:0,filipina:0,filipino:0,fingerfood:1,fingerfuck:2,fingerfucked:2,fingerfucker:2,fingerfuckers:2,fingerfucking:2,fire:0,firing:0,fister:2,fistfuck:2,fistfucked:2,fistfucker:2,fistfucking:2,fisting:2,flamer:1,flange:2,flasher:1,flatulence:1,floo:2,flydie:2,flydye:2,fok:2,fondle:1,footaction:1,footfuck:2,footfucker:2,footlicker:2,footstar:2,fore:0,foreskin:1,forni:2,fornicate:1,foursome:1,fourtwenty:1,fraud:0,freakfuck:2,freakyfucker:2,freefuck:2,fruit:0,fruitcake:1,fu:2,fubar:2,fuc:2,fucck:2,fuck:2,fucka:2,fuckable:2,fuckbag:2,fuckbook:2,fuckbuddy:2,fucked:2,fuckedup:2,fucker:2,fuckers:2,fuckface:2,fuckfest:2,fuckfreak:2,fuckfriend:2,fuckhead:2,fuckher:2,fuckin:2,fuckina:2,fucking:2,fuckingbitch:2,fuckinnuts:2,fuckinright:2,fuckit:2,fuckknob:2,fuckme:2,fuckmehard:2,fuckmonkey:2,fuckoff:2,fuckpig:2,fucks:2,fucktard:2,fuckwhore:2,fuckyou:2,"fudge packer":2,fudgepacker:2,fugly:2,fuk:2,fuks:2,funeral:0,funfuck:2,fungus:0,fuuck:2,gable:1,gables:2,gangbang:2,gangbanged:2,gangbanger:2,gangsta:2,"gator bait":2,gatorbait:2,gay:0,gaymuthafuckinwhore:2,gaysex:2,geez:2,geezer:2,geni:2,genital:1,german:0,getiton:2,gin:0,ginzo:2,ginzos:2,gipp:2,gippo:2,gippos:2,gipps:2,girls:0,givehead:2,glazeddonut:2,gob:1,god:1,godammit:2,goddamit:2,goddammit:2,goddamn:2,goddamned:2,goddamnes:2,goddamnit:2,goddamnmuthafucker:2,goldenshower:2,golliwog:2,golliwogs:2,gonorrehea:2,gonzagas:1,gook:2,"gook eye":2,"gook eyes":2,gookeye:2,gookeyes:2,gookies:2,gooks:2,gooky:2,gora:2,goras:2,gotohell:2,goy:1,goyim:1,greaseball:2,greaseballs:2,greaser:2,greasers:2,gringo:2,gringos:2,groe:1,groid:2,groids:2,gross:1,grostulation:1,gub:1,gubba:2,gubbas:2,gubs:2,guinea:1,guineas:1,guizi:1,gummer:2,gun:0,gwailo:2,gwailos:2,gweilo:2,gweilos:2,gyopo:2,gyopos:2,gyp:2,gyped:2,gypo:2,gypos:2,gypp:2,gypped:2,gyppie:2,gyppies:2,gyppo:2,gyppos:2,gyppy:2,gyppys:2,gypsies:2,gypsy:2,gypsys:2,hadji:2,hadjis:2,hairyback:2,hairybacks:2,haji:2,hajis:2,hajji:2,hajjis:2,"half breed":2,"half caste":2,halfbreed:2,halfcaste:2,hamas:1,handjob:2,haole:2,haoles:2,hapa:2,harder:0,hardon:2,harem:0,headfuck:2,headlights:0,hebe:2,hebephila:1,hebephile:1,hebephiles:1,hebephilia:1,hebephilic:1,hebes:2,heeb:2,heebs:2,hell:0,henhouse:0,heroin:1,herpes:1,heterosexual:0,hijack:0,hijacker:0,hijacking:0,hillbillies:2,hillbilly:2,hindoo:2,hiscock:2,hitler:1,hitlerism:2,hitlerist:2,hiv:1,ho:2,hobo:2,hodgie:2,hoes:2,hole:0,holestuffer:2,homicide:1,homo:2,homobangers:2,homosexual:1,honger:2,honk:0,honkers:2,honkey:2,honkeys:2,honkie:2,honkies:2,honky:2,hook:0,hooker:2,hookers:2,hooters:2,hore:2,hori:2,horis:2,hork:2,horn:0,horney:2,horniest:2,horny:1,horseshit:2,hosejob:2,hoser:2,hostage:0,hotdamn:2,hotpussy:2,hottotrot:2,hummer:0,hun:0,huns:0,husky:0,hussy:2,hustler:0,hymen:1,hymie:2,hymies:2,iblowu:2,idiot:2,ike:1,ikes:1,ikey:1,ikeymo:2,ikeymos:2,ikwe:2,illegal:0,illegals:1,incest:1,indon:2,indons:2,injun:2,injuns:2,insest:2,intercourse:1,interracial:1,intheass:2,inthebuff:2,israel:0,israeli:0,israels:0,italiano:1,itch:0,jackass:2,jackoff:2,jackshit:2,jacktheripper:2,jade:0,jap:2,japanese:0,japcrap:2,japie:2,japies:2,japs:2,jebus:2,jeez:2,jerkoff:2,jerries:1,jerry:0,jesus:1,jesuschrist:1,jew:0,jewboy:2,jewed:2,jewess:2,jewish:0,jig:2,jiga:2,jigaboo:2,jigaboos:2,jigarooni:2,jigaroonis:2,jigg:2,jigga:2,jiggabo:2,jiggabos:2,jiggas:2,jigger:2,jiggers:2,jiggs:2,jiggy:2,jigs:2,jihad:1,jijjiboo:2,jijjiboos:2,jimfish:2,jism:2,jiz:2,jizim:2,jizjuice:2,jizm:2,jizz:2,jizzim:2,jizzum:2,joint:0,juggalo:2,jugs:0,"jungle bunnies":2,"jungle bunny":2,junglebunny:2,kacap:2,kacapas:2,kacaps:2,kaffer:2,kaffir:2,kaffre:2,kafir:2,kanake:2,katsap:2,katsaps:2,khokhol:2,khokhols:2,kid:0,kigger:2,kike:2,kikes:2,kill:0,killed:0,killer:0,killing:0,kills:0,kimchi:0,kimchis:2,kink:1,kinky:1,kissass:2,kkk:2,klansman:2,klansmen:2,klanswoman:2,klanswomen:2,knife:0,knockers:1,kock:1,kondum:2,koon:2,kotex:1,krap:2,krappy:2,kraut:1,krauts:2,kuffar:2,kum:2,kumbubble:2,kumbullbe:2,kummer:2,kumming:2,kumquat:2,kums:2,kunilingus:2,kunnilingus:2,kunt:2,kushi:2,kushis:2,kwa:2,"kwai lo":2,"kwai los":2,ky:1,kyke:2,kykes:2,kyopo:2,kyopos:2,lactate:1,laid:0,lapdance:1,latin:0,lebo:2,lebos:2,lesbain:2,lesbayn:2,lesbian:0,lesbin:2,lesbo:2,lez:2,lezbe:2,lezbefriends:2,lezbo:2,lezz:2,lezzo:2,liberal:0,libido:1,licker:1,lickme:2,lies:0,limey:2,limpdick:2,limy:2,lingerie:0,liquor:1,livesex:2,loadedgun:2,lolita:1,looser:2,loser:2,lotion:0,lovebone:2,lovegoo:2,lovegun:2,lovejuice:2,lovemuscle:2,lovepistol:2,loverocket:2,lowlife:2,lsd:1,lubejob:2,lubra:2,lucifer:0,luckycammeltoe:2,lugan:2,lugans:2,lynch:1,mabuno:2,mabunos:2,macaca:2,macacas:2,mad:0,mafia:1,magicwand:2,mahbuno:2,mahbunos:2,mams:2,manhater:2,manpaste:2,marijuana:1,mastabate:2,mastabater:2,masterbate:2,masterblaster:2,mastrabator:2,masturbate:2,masturbating:2,mattressprincess:2,"mau mau":2,"mau maus":2,maumau:2,maumaus:2,meatbeatter:2,meatrack:2,meth:1,mexican:0,mgger:2,mggor:2,mick:1,mickeyfinn:2,mideast:0,milf:2,minority:0,mockey:2,mockie:2,mocky:2,mofo:2,moky:2,moles:0,molest:1,molestation:1,molester:1,molestor:1,moneyshot:2,"moon cricket":2,"moon crickets":2,mooncricket:2,mooncrickets:2,mormon:0,moron:2,moskal:2,moskals:2,moslem:2,mosshead:2,mothafuck:2,mothafucka:2,mothafuckaz:2,mothafucked:2,mothafucker:2,mothafuckin:2,mothafucking:2,mothafuckings:2,motherfuck:2,motherfucked:2,motherfucker:2,motherfuckin:2,motherfucking:2,motherfuckings:2,motherlovebone:2,muff:2,muffdive:2,muffdiver:2,muffindiver:2,mufflikcer:2,mulatto:2,muncher:2,munt:2,murder:1,murderer:1,muslim:0,mzungu:2,mzungus:2,naked:0,nancy:0,narcotic:1,nasty:0,nastybitch:2,nastyho:2,nastyslut:2,nastywhore:2,nazi:1,necro:1,negres:2,negress:2,negro:2,negroes:2,negroid:2,negros:2,nig:2,nigar:2,nigars:2,niger:0,nigerian:1,nigerians:1,nigers:2,nigette:2,nigettes:2,nigg:2,nigga:2,niggah:2,niggahs:2,niggar:2,niggaracci:2,niggard:2,niggarded:2,niggarding:2,niggardliness:2,niggardlinesss:2,niggardly:0,niggards:2,niggars:2,niggas:2,niggaz:2,nigger:2,niggerhead:2,niggerhole:2,niggers:2,niggle:2,niggled:2,niggles:2,niggling:2,nigglings:2,niggor:2,niggress:2,niggresses:2,nigguh:2,nigguhs:2,niggur:2,niggurs:2,niglet:2,nignog:2,nigor:2,nigors:2,nigr:2,nigra:2,nigras:2,nigre:2,nigres:2,nigress:2,nigs:2,nip:2,nipple:1,nipplering:1,nittit:2,nlgger:2,nlggor:2,nofuckingway:2,nook:1,nookey:2,nookie:2,noonan:2,nooner:1,nude:1,nudger:2,nuke:1,nutfucker:2,nymph:1,ontherag:2,oral:1,oreo:0,oreos:0,orga:2,orgasim:2,orgasm:1,orgies:1,orgy:1,osama:0,paddy:1,paederastic:1,paederasts:1,paederasty:1,paki:2,pakis:2,palesimian:2,palestinian:0,"pancake face":2,"pancake faces":2,pansies:2,pansy:2,panti:2,panties:0,payo:2,pearlnecklace:1,peck:1,pecker:1,peckerwood:2,pederastic:1,pederasts:1,pederasty:1,pedo:2,pedophile:1,pedophiles:1,pedophilia:1,pedophilic:1,pee:1,peehole:2,peepee:2,peepshow:1,peepshpw:2,pendy:1,penetration:1,peni5:2,penile:1,penis:1,penises:1,penthouse:0,period:0,perv:2,phonesex:1,phuk:2,phuked:2,phuking:2,phukked:2,phukking:2,phungky:2,phuq:2,pi55:2,picaninny:2,piccaninny:2,pickaninnies:2,pickaninny:2,piefke:2,piefkes:2,piker:2,pikey:2,piky:2,"pillow biter":2,pimp:2,pimped:2,pimper:2,pimpjuic:2,pimpjuice:2,pimpsimp:2,pindick:2,piss:2,pissed:2,pisser:2,pisses:2,pisshead:2,pissin:2,pissing:2,pissoff:2,pistol:1,pixie:1,pixy:1,playboy:1,playgirl:1,pocha:2,pochas:2,pocho:2,pochos:2,pocketpool:2,pohm:2,pohms:2,polack:2,polacks:2,pollock:2,pollocks:2,pom:2,pommie:2,"pommie grant":2,"pommie grants":2,pommies:2,pommy:2,poms:2,poo:2,poof:2,poofta:2,poofter:2,poon:2,poontang:2,poop:2,pooper:2,pooperscooper:2,pooping:2,poorwhitetrash:2,popimp:2,"porch monkey":2,"porch monkies":2,porchmonkey:2,porn:1,pornflick:1,pornking:2,porno:1,pornography:1,pornprincess:2,pot:0,poverty:0,"prairie nigger":2,"prairie niggers":2,premature:0,pric:2,prick:2,prickhead:2,primetime:0,propaganda:0,pros:0,prostitute:1,protestant:1,pu55i:2,pu55y:2,pube:1,pubic:1,pubiclice:2,pud:2,pudboy:2,pudd:2,puddboy:2,puke:2,puntang:2,purinapricness:2,puss:2,pussie:2,pussies:2,pussy:1,pussycat:1,pussyeater:2,pussyfucker:2,pussylicker:2,pussylips:2,pussylover:2,pussypounder:2,pusy:2,quashie:2,que:0,queef:2,queer:1,quickie:2,quim:2,ra8s:2,rabbi:0,racial:0,racist:1,radical:1,radicals:1,raghead:2,ragheads:2,randy:1,rape:1,raped:1,raper:2,rapist:1,rearend:2,rearentry:2,rectum:1,redleg:2,redlegs:2,redlight:0,redneck:2,rednecks:2,redskin:2,redskins:2,reefer:2,reestie:2,refugee:0,reject:0,remains:0,rentafuck:2,republican:0,rere:2,retard:2,retarded:2,ribbed:1,rigger:2,rimjob:2,rimming:2,roach:0,robber:0,"round eyes":2,roundeye:2,rump:0,russki:2,russkie:2,sadis:2,sadom:2,sambo:2,sambos:2,samckdaddy:2,"sand nigger":2,"sand niggers":2,sandm:2,sandnigger:2,satan:1,scag:1,scallywag:2,scat:1,schlong:2,schvartse:2,schvartsen:2,schwartze:2,schwartzen:2,screw:1,screwyou:2,scrotum:1,scum:1,semen:1,seppo:2,seppos:2,septic:1,septics:1,servant:0,sex:1,sexed:2,sexfarm:2,sexhound:2,sexhouse:1,sexing:2,sexkitten:2,sexpot:2,sexslave:2,sextogo:2,sextoy:1,sextoys:1,sexual:1,sexually:1,sexwhore:2,sexy:1,sexymoma:2,sexyslim:2,shag:1,shaggin:2,shagging:2,shat:2,shav:2,shawtypimp:2,sheeney:2,shhit:2,shiksa:2,shinola:1,shit:1,shitcan:2,shitdick:2,shite:2,shiteater:2,shited:2,shitface:2,shitfaced:2,shitfit:2,shitforbrains:2,shitfuck:2,shitfucker:2,shitfull:2,shithapens:2,shithappens:2,shithead:2,shithouse:2,shiting:2,shitlist:2,shitola:2,shitoutofluck:2,shits:2,shitstain:2,shitted:2,shitter:2,shitting:2,shitty:2,shoot:0,shooting:0,shortfuck:2,showtime:0,shylock:2,shylocks:2,sick:0,sissy:2,sixsixsix:2,sixtynine:2,sixtyniner:2,skank:2,skankbitch:2,skankfuck:2,skankwhore:2,skanky:2,skankybitch:2,skankywhore:2,skinflute:2,skum:2,skumbag:2,skwa:2,skwe:2,slant:0,slanteye:2,slanty:2,slapper:2,slaughter:1,slav:0,slave:2,slavedriver:2,sleezebag:2,sleezeball:2,slideitin:2,slime:0,slimeball:2,slimebucket:2,slope:0,slopehead:2,slopeheads:2,sloper:2,slopers:2,slopes:0,slopey:2,slopeys:2,slopies:2,slopy:2,slut:2,sluts:2,slutt:2,slutting:2,slutty:2,slutwear:2,slutwhore:2,smack:1,smackthemonkey:2,smut:2,snatch:1,snatchpatch:2,snigger:0,sniggered:0,sniggering:0,sniggers:1,sniper:0,snot:0,snowback:2,snownigger:2,sob:0,sod:0,sodom:1,sodomise:2,sodomite:1,sodomize:2,sodomy:2,sonofabitch:2,sonofbitch:2,sooties:2,sooty:2,sos:0,soviet:0,spa:0,spade:1,spades:1,spaghettibender:2,spaghettinigger:2,spank:1,spankthemonkey:2,spearchucker:2,spearchuckers:2,sperm:1,spermacide:2,spermbag:2,spermhearder:2,spermherder:2,spic:2,spick:2,spicks:2,spics:2,spig:2,spigotty:2,spik:2,spit:2,spitter:2,splittail:2,spooge:2,spreadeagle:2,spunk:2,spunky:2,sqeh:2,squa:2,squarehead:2,squareheads:2,squaw:2,squinty:2,stagg:1,stiffy:1,strapon:1,stringer:2,stripclub:2,stroke:0,stroking:1,stuinties:2,stupid:2,stupidfuck:2,stupidfucker:2,suck:1,suckdick:2,sucker:2,suckme:2,suckmyass:2,suckmydick:2,suckmytit:2,suckoff:2,suicide:1,swallow:1,swallower:2,swalow:2,"swamp guinea":2,"swamp guineas":2,swastika:1,sweetness:0,syphilis:1,taboo:0,tacohead:2,tacoheads:2,taff:2,tampon:0,tang:2,tantra:1,"tar babies":2,"tar baby":2,tarbaby:2,tard:2,teat:1,terror:0,terrorist:1,teste:2,testicle:1,testicles:1,thicklip:2,thicklips:2,thirdeye:2,thirdleg:2,threesome:1,threeway:2,"timber nigger":2,"timber niggers":2,timbernigger:2,tinker:2,tinkers:2,tinkle:1,tit:1,titbitnipply:2,titfuck:2,titfucker:2,titfuckin:2,titjob:2,titlicker:2,titlover:2,tits:1,tittie:2,titties:2,titty:2,tnt:1,toilet:0,tongethruster:2,tongue:0,tonguethrust:2,tonguetramp:2,tortur:2,torture:1,tosser:2,"towel head":2,"towel heads":2,towelhead:2,trailertrash:2,tramp:1,trannie:2,tranny:2,transexual:0,transsexual:0,transvestite:2,trap:1,triplex:2,trisexual:1,trojan:0,trots:1,tuckahoe:2,tunneloflove:2,turd:1,turnon:2,twat:2,twink:2,twinkie:2,twobitwhore:2,uck:2,uk:0,ukrop:2,"uncle tom":2,unfuckable:2,upskirt:2,uptheass:2,upthebutt:2,urinary:0,urinate:0,urine:0,usama:2,uterus:1,vagina:1,vaginal:1,vatican:0,vibr:2,vibrater:2,vibrator:1,vietcong:0,violence:0,virgin:0,virginbreaker:2,vomit:2,vulva:1,wab:2,wank:2,wanker:2,wanking:2,waysted:2,weapon:0,weenie:2,weewee:2,welcher:2,welfare:2,wetb:2,wetback:2,wetbacks:2,wetspot:2,whacker:2,whash:2,whigger:2,whiggers:2,whiskey:0,whiskeydick:2,whiskydick:2,whit:1,"white trash":2,whitenigger:2,whites:1,whitetrash:2,whitey:2,whiteys:2,whities:2,whiz:2,whop:2,whore:2,whorefucker:2,whorehouse:2,wigga:2,wiggas:2,wigger:2,wiggers:2,willie:2,williewanker:2,willy:1,wn:2,wog:2,wogs:2,womens:0,wop:2,wtf:2,wuss:2,wuzzie:2,xkwe:2,xtc:1,xxx:1,yank:2,yankee:1,yankees:1,yanks:2,yarpie:2,yarpies:2,yellowman:2,yid:2,yids:2,zigabo:2,zigabos:2,zipperhead:2,zipperheads:2};var gr=__webpack_require__(2522);const vr=unist_util_position_point("start");const wr=unist_util_position_point("end");function unist_util_position_position(e){return{start:vr(e),end:wr(e)}}function unist_util_position_point(e){return point;function point(t){const r=t&&t.position&&t.position[e]||{};return{line:r.line||null,column:r.column||null,offset:r.offset>-1?r.offset:null}}}const yr={}.hasOwnProperty;const kr="https://github.com/retextjs/retext-profanities#readme";function factory_factory(e){const t=e.regular||[];const r=unpack();const a="retext-profanities"+(e.lang==="en"?"":"-"+e.lang);return(e={})=>{const n=e.ignore||[];const i=e.sureness||0;const o=Object.keys(r).filter((e=>!n.includes(e)));const l=t.length>0?o.filter((e=>!t.includes(e))):o;const d=t.filter((e=>o.includes(e)));return(e,t)=>{nlcst_search_search(e,l,handle);nlcst_search_search(e,d,handle,true);function handle(e,n,o,l){const d=r[l];const u=nlcst_to_string_toString(e);if(d<i){return}Object.assign(t.message([d===0?"Be careful with":d===1?"Reconsider using":"Don’t use",quotation(u,"`")+",",d===0?"it’s profane in some cases":d===1?"it may be profane":"it’s profane"].join(" "),{start:vr(e[0]),end:wr(e[e.length-1])},[a,l.replace(/\W+/g,"-")].join(":")),{profanitySeverity:d,actual:u,expected:[],url:kr})}}};function unpack(){const t={};let r;for(r in e.cuss){if(yr.call(e.cuss,r)){add(r,e.cuss[r]);if(e.pluralize){add(e.pluralize.singular(r),e.cuss[r]);add(e.pluralize.plural(r),e.cuss[r])}}}function add(r,a){if(!e.ignorePluralize||!e.ignorePluralize.includes(r)){t[r]=a}}return t}}const Er=factory_factory({lang:"en",cuss:hr,pluralize:gr,ignorePluralize:["children","dy","pro","remain","so","dice","fus"],regular:["hell","whore"]});const Dr=Er;function vfile_location_location(e){var t=String(e);var r=[];var a=/\r?\n|\r/g;while(a.test(t)){r.push(a.lastIndex)}r.push(t.length+1);return{toPoint:toPoint,toOffset:toOffset};function toPoint(e){var t=-1;if(e>-1&&e<r[r.length-1]){while(++t<r.length){if(r[t]>e){return{line:t+1,column:e-(r[t-1]||0)+1,offset:e}}}}return{line:undefined,column:undefined,offset:undefined}}function toOffset(e){var t=e&&e.line;var a=e&&e.column;var n;if(typeof t==="number"&&typeof a==="number"&&!Number.isNaN(t)&&!Number.isNaN(a)&&t-1 in r){n=(r[t-2]||0)+a-1||0}return n>-1&&n<r[r.length-1]?n:-1}}const _r=["table","tableRow","tableCell"];const Ar=["inlineCode"];function toNlcst(e,t,r,a={}){if(!e||!e.type){throw new Error("mdast-util-to-nlcst expected node")}if(!t||!t.messages){throw new Error("mdast-util-to-nlcst expected file")}if(!r){throw new Error("mdast-util-to-nlcst expected parser")}if(!e.position||!e.position.start||!e.position.start.column||!e.position.start.line){throw new Error("mdast-util-to-nlcst expected position on nodes")}const n="parse"in r?r:new r;const i=mdast_util_to_nlcst_one({doc:String(t),place:vfile_location_location(t),parser:n,ignore:a.ignore?_r.concat(a.ignore):_r,source:a.source?Ar.concat(a.source):Ar},e);return n.parse(i||[])}function mdast_util_to_nlcst_one(e,t){const r=t.position?t.position.start.offset:undefined;if(!e.ignore.includes(t.type)){if(e.source.includes(t.type)&&r&&t.position){return mdast_util_to_nlcst_patch(e,[e.parser.tokenizeSource(e.doc.slice(r,t.position.end.offset))],r)}if("children"in t){return mdast_util_to_nlcst_all(e,t)}if((t.type==="image"||t.type==="imageReference")&&t.alt){return mdast_util_to_nlcst_patch(e,e.parser.tokenize(t.alt),typeof r==="number"?r+2:undefined)}if(t.type==="break"){return mdast_util_to_nlcst_patch(e,[e.parser.tokenizeWhiteSpace("\n")],r)}if(t.type==="text"){return mdast_util_to_nlcst_patch(e,e.parser.tokenize(t.value),r)}}}function mdast_util_to_nlcst_all(e,t){let r=-1;const a=[];let n;while(++r<t.children.length){const i=t.children[r];const o=vr(i);if(n&&n.line!==null&&o.line!==null&&o.line!==n.line){const t=e.parser.tokenizeWhiteSpace("\n".repeat(o.line-n.line));mdast_util_to_nlcst_patch(e,[t],n.offset);if(t.value.length<2){t.value="\n\n"}a.push(t)}const l=mdast_util_to_nlcst_one(e,i);if(l)a.push(...l);n=wr(i)}return a}function mdast_util_to_nlcst_patch(e,t,r){let a=-1;let n=r;while(++a<t.length){const r=t[a];if("children"in r){mdast_util_to_nlcst_patch(e,r.children,n)}const i=typeof n==="number"?n+nlcst_to_string_toString(r).length:undefined;r.position=n!==undefined&&i!==undefined?{start:e.place.toPoint(n),end:e.place.toPoint(i)}:undefined;n=i}return t}const lib_remarkRetext=function(e,t){return e&&"run"in e?bridge(e,t):mutate(e,t)};const Sr=lib_remarkRetext;function mutate(e,t){const r=e;return(e,a)=>toNlcst(e,a,r,t)}function bridge(e,t){return(r,a,n)=>{const i=e.freeze().Parser;e.run(toNlcst(r,a,i,t),a,(e=>{n(e)}))}}const xr=Sr;var Cr={true:2,false:1,null:0,undefined:0};function sort(e){e.messages.sort(comparator);return e}function comparator(e,t){return check(e,t,"line")||check(e,t,"column")||Cr[t.fatal]-Cr[e.fatal]||compare(e,t,"source")||compare(e,t,"ruleId")||compare(e,t,"reason")||0}function check(e,t,r){return(e[r]||0)-(t[r]||0)}function compare(e,t,r){return String(e[r]||"").localeCompare(t[r]||"")}function color_color(e){return"[33m"+e+"[39m"}const Tr=true;const Fr="skip";const Or=false;const unist_util_visit_parents_visitParents=function(e,t,r,a){if(typeof t==="function"&&typeof r!=="function"){a=r;r=t;t=null}var n=convert(t);var i=a?-1:1;factory(e,null,[])();function factory(e,o,l){var d=typeof e==="object"&&e!==null?e:{};var u;if(typeof d.type==="string"){u=typeof d.tagName==="string"?d.tagName:typeof d.name==="string"?d.name:undefined;Object.defineProperty(visit,"name",{value:"node ("+color_color(d.type+(u?"<"+u+">":""))+")"})}return visit;function visit(){var d=[];var u;var c;var h;if(!t||n(e,o,l[l.length-1]||null)){d=unist_util_visit_parents_toResult(r(e,l));if(d[0]===Or){return d}}if(e.children&&d[0]!==Fr){c=(a?e.children.length:-1)+i;h=l.concat(e);while(c>-1&&c<e.children.length){u=factory(e.children[c],c,h)();if(u[0]===Or){return u}c=typeof u[1]==="number"?u[1]:c+i}}return d}}};function unist_util_visit_parents_toResult(e){if(Array.isArray(e)){return e}if(typeof e==="number"){return[Tr,e]}return[e]}const unist_util_visit_visit=function(e,t,r,a){if(typeof t==="function"&&typeof r!=="function"){a=r;r=t;t=null}unist_util_visit_parents_visitParents(e,t,overload,a);function overload(e,t){var a=t[t.length-1];return r(e,a?a.children.indexOf(e):null,a)}};const Pr={}.hasOwnProperty;function messageControl(e){if(!e||typeof e!=="object"||!e.name){throw new Error("Expected `name` in `options`, got `"+(e||{}).name+"`")}if(!e.marker){throw new Error("Expected `marker` in `options`, got `"+e.marker+"`")}const t="enable"in e&&e.enable?e.enable:[];const r="disable"in e&&e.disable?e.disable:[];let a=e.reset;const n=typeof e.source==="string"?[e.source]:e.source||[e.name];return transformer;function transformer(i,o){const l=vfile_location_location(o).toOffset;const d=!a;const u=detectGaps(i,o);const c={};const h=[];unist_util_visit_visit(i,e.test,visitor);o.messages=o.messages.filter((e=>filter(e)));function visitor(t,r,n){const i=e.marker(t);if(!i||i.name!==e.name){return}const l=i.attributes.split(/\s/g);const d=i.node.position&&i.node.position.start;const u=n&&r!==null&&n.children[r+1]||undefined;const c=u&&u.position&&u.position.end||undefined;let h=-1;const g=l.shift();if(g!=="enable"&&g!=="disable"&&g!=="ignore"){o.fail("Unknown keyword `"+g+"`: expected "+"`'enable'`, `'disable'`, or `'ignore'`",i.node)}if(l.length>0){while(++h<l.length){const e=l[h];if(isKnown(e,g,i.node)){toggle(d,g==="enable",e);if(g==="ignore"){toggle(c,true,e)}}}}else if(g==="ignore"){toggle(d,false);toggle(c,true)}else{toggle(d,g==="enable");a=g!=="enable"}}function filter(e){let t=u.length;if(!e.source||!n.includes(e.source)){return true}if(!e.line){e.line=1}if(!e.column){e.column=1}const r=l(e);while(t--){if(u[t][0]<=r&&u[t][1]>r){return false}}return(!e.ruleId||check(e,c[e.ruleId],e.ruleId))&&check(e,h)}function isKnown(t,r,a){const n=e.known?e.known.includes(t):true;if(!n){o.message("Unknown rule: cannot "+r+" `'"+t+"'`",a)}return n}function getState(e){const n=e?c[e]:h;if(n&&n.length>0){return n[n.length-1].state}if(!e){return!a}return a?t.includes(e):!r.includes(e)}function toggle(e,t,r){let a=r?c[r]:h;if(!a){a=[];c[String(r)]=a}const n=getState(r);if(t!==n){a.push({state:t,point:e})}if(!r){for(r in c){if(Pr.call(c,r)){toggle(e,t,r)}}}}function check(e,n,i){if(n&&n.length>0){let t=n.length;while(t--){const r=n[t];if(e.line&&e.column&&r.point&&r.point.line&&r.point.column&&(r.point.line<e.line||r.point.line===e.line&&r.point.column<=e.column)){return r.state===true}}}if(!i){return Boolean(d||a)}return a?t.includes(i):!r.includes(i)}}}function detectGaps(e,t){const r=e.children||[];const a=r[r.length-1];const n=[];let i=0;let o;unist_util_visit_visit(e,one);if(a&&a.position&&a.position.end&&i===a.position.end.offset&&t.toString().slice(i).trim()!==""){update();update(e&&e.position&&e.position.end&&e.position.end.offset&&e.position.end.offset-1)}return n;function one(e){update(e.position&&e.position.start&&e.position.start.offset);if(!("children"in e)){update(e.position&&e.position.end&&e.position.end.offset)}}function update(e){if(e===null||e===undefined){o=true}else if(i<e){if(o){n.push([i,e]);o=undefined}i=e}}}const Lr=/\s*([a-zA-Z\d-]+)(\s+([\s\S]*))?\s*/;const Rr=new RegExp("(\\s*\\/\\*"+Lr.source+"\\*\\/\\s*)");const Br=new RegExp("(\\s*\x3c!--"+Lr.source+"--\x3e\\s*)");function commentMarker(e){if(isNode(e)&&(e.type==="html"||e.type==="comment"||e.type==="mdxFlowExpression"||e.type==="mdxTextExpression")){let t=2;let r;if(e.type==="comment"){r=e.value.match(Lr);t=1}else if(e.type==="html"){r=e.value.match(Br)}else if(e.type==="mdxFlowExpression"||e.type==="mdxTextExpression"){r=e.value.match(Rr)}if(r&&r[0].length===e.value.length){const a=parseParameters(r[t+1]||"");if(a){return{name:r[t],attributes:(r[t+2]||"").trim(),parameters:a,node:e}}}}return null}function parseParameters(e){const t={};return e.replace(/\s+([-\w]+)(?:=(?:"((?:\\[\s\S]|[^"])+)"|'((?:\\[\s\S]|[^'])+)'|((?:\\[\s\S]|[^"'\s])+)))?/gi,replacer).replace(/\s+/g,"")?null:t;function replacer(e,r,a,n,i){let o=a||n||i||"";if(o==="true"||o===""){o=true}else if(o==="false"){o=false}else if(!Number.isNaN(Number(o))){o=Number(o)}t[r]=o;return""}}function isNode(e){return Boolean(e&&typeof e==="object"&&"type"in e)}const Nr=["html","comment","mdxFlowExpression","mdxTextExpression"];function remarkMessageControl(e){return messageControl(Object.assign({marker:commentMarker,test:Nr},e))}function filter(e={}){if(e.allow&&e.deny){throw new Error("Do not provide both allow and deny configuration parameters")}return remarkMessageControl({name:"alex",reset:Boolean(e.deny),enable:e.deny,disable:e.allow,source:["retext-equality","retext-profanities"]})}function makeText(e){return w().use(tr).use(fr,e).use(Dr,e)}function alex_core(e,t,r){const a=new VFile(e);const n=r.use(filter,t).parse(a);r.runSync(n,a);sort(a);return a}const jr=markdown;function markdown(e,t){const r=splitOptions(t);return alex_core(e,r.filter,w().use(Fe).use(remarkGfm).use(remarkFrontmatter,["yaml","toml"]).use(xr,makeText(r.text)))}function mdx(e,t){const r=splitOptions(t);return alex_core(e,r.filter,unified().use(remarkParse).use(remarkMdx).use(remarkRetext,makeText(r.text)))}function html(e,t){const r=splitOptions(t);return alex_core(e,r.filter,unified().use(rehypeParse).use(rehypeRetext,makeText(r.text)))}function alex_text(e,t){const r=splitOptions(t);return alex_core(e,r.filter,makeText(r.text))}function splitOptions(e){let t;let r;let a;let n;if(Array.isArray(e)){t=e}else if(e){t=e.allow;r=e.deny;a=e.noBinary;n=e.profanitySureness}return{filter:{allow:t,deny:r},text:{noBinary:a,sureness:n}}}const Ir="alex";const qr="https://www.npmjs.com/package/alex";function alex_check(e,t){const{messages:r}=markdown(e,t);return r.map((e=>({name:Ir,url:qr,line:e.line,reason:e.message,type:e.fatal?"failing":"warning"})))}var Ur=__webpack_require__(311);var Gr=__webpack_require__.n(Ur);function pos(e,t){const r=e.split("\n");const a=e.substring(0,t).split("\n").length;const n=(()=>{const e=r.slice(0);e.splice(a-1);return e.join("\n").length+(e.length>0?1:0)})();const i=t-n;return{line:a,col:i}}const Vr="write-good";const zr="https://www.npmjs.com/package/write-good";function writegood_check(e,t){return Gr()(e,t).map((t=>({...pos(e,t.index),name:Vr,url:zr,reason:t.reason})))}var Mr=__webpack_require__(9832);var Hr=__webpack_require__.n(Mr);var $r=__webpack_require__(3721);const Wr="markdown-spellcheck";const Yr="https://www.npmjs.com/package/markdown-spellcheck";function suggest(e){const t=Hr().getCorrectionsForMisspelling(e).slice(0,6);return`"${e}" is misspelled. ${t.length?`How about: ${t.join(", ")}`:""}`}function spellcheck_check(e,t){return $r.Z.spell(e,t).map((t=>({...pos(e,t.index),name:Wr,url:Yr,reason:suggest(t.word)})))}function getOptions(e){const r=t.getInput(e);if(!r||r.toLowerCase()==="true"){return true}if(r.toLowerCase()==="false"){return false}return(0,n.getObjectInput)(e)}const Kr=getOptions(Ir);const Jr=getOptions(Vr);const Zr=getOptions(Wr);function providers_check(e){const t=[];if(Kr){t.push(...alex_check(e,typeof Kr==="object"?Kr:undefined))}if(Jr){t.push(...writegood_check(e,typeof Jr==="object"?Jr:undefined))}if(Zr){t.push(...spellcheck_check(e,typeof Zr==="object"?Zr:undefined))}return t}function getOctokit(){const e=t.getInput("GITHUB_TOKEN",{required:true});return o.getOctokit(e)}async function findPR(e){const{context:t}=o;const r=t.payload;const a=t.eventName;if(a==="pull_request"){return r.pull_request}if(a==="push"){const a=r.head_commit;const list=r=>e.rest.pulls.list({...t.repo,page:r,state:"all",per_page:100});const n=await list();const i=n.data||[];const o=i.find((e=>e.head.sha===a.id));if(o){return o}const{link:l}=n.headers;const d=l?l.match(/[&|?]page=\d+/gim):null;if(d){const e=d.map((e=>parseInt(e.split("=")[1],10)));const t=Math.min(...e);const r=Math.max(...e);for(let e=t;e<=r;e+=1){const{data:t}=await list(e);if(t){const e=t.find((e=>e.head.sha===a.id));if(e){return e}}}}}}async function getChangedFiles(e){const{context:r}=o;const a=r.eventName;let n;let i;if(a==="pull_request"||a==="push"){const t=await findPR(e);if(t){n=t.base.sha;i=t.head.sha}}else{throw new Error(`This action only supports pull requests and pushes, ${a} events are not supported. `+"Please submit an issue on this action's GitHub repo if you believe this in correct.")}t.info(`Base commit: ${n}`);t.info(`Head commit: ${i}`);if(!n||!i){throw new Error(`The base and head commits are missing from the payload for this ${a} event. `+"Please submit an issue on this action's GitHub repo.")}const l=await e.rest.repos.compareCommits({...r.repo,base:n,head:i});if(l.data.status!=="ahead"){t.setFailed(`The head commit for this ${a} event is not ahead of the base commit. `+"Please submit an issue on this action's GitHub repo.")}const d=l.data.files||[];return d.filter((({status:e})=>e==="added"||e==="modified"))}const Qr="Spell Checker";async function createCheck(e,t){const{context:r}=o;const a=r.payload.pull_request;const n=a?a.head.sha:r.payload.after;const i=a?a.head.ref:r.payload.ref;return e.rest.checks.create({...o.context.repo,name:Qr,head_sha:n,head_branch:i,...t})}async function getFileContent(e,t){const{context:r}=o;const a=r.payload.pull_request;const{data:n}=await e.rest.repos.getContent({...r.repo,path:t,ref:a?a.head.ref:r.payload.ref});return Buffer.from(n.content,"base64").toString()}function getPatchedLines(e){const t=[];parsePatch(e).forEach((({lineNumber:e})=>{if(!t.includes(e)){t.push(e)}}));return t}async function spellCheck(e,t,r){const a=await Promise.all(r.map((async({filename:t,patch:r})=>{if(r){const a=await getFileContent(e,t);const n=getPatchedLines(r);const i=providers_check(a).filter((({line:e})=>n.includes(e)));return{filename:t,results:i}}return{filename:t,results:[]}})));let n="success";let i=0;let l=0;let d=0;let u=0;const c=[];a.forEach((({filename:e,results:t})=>{let r=false;let a=false;if(t.length){t.forEach((t=>{if(t.type==="failure"){u+=1;r=true;n="failure"}else{a=true;l+=1}c.push({path:e,start_line:t.line,end_line:t.line,annotation_level:t.type||"warning",message:`${t.reason}`})}))}if(r){d+=1}if(a){i+=1}}));let h="";let g="";const s=e=>e===1?"":"s";if(n==="success"){g=c.length?"Good Spelling":"Perfect Spelling";h=c.length?`**${l} suggestion${s(l)}** ${l===1?"has":"have"} been found in **${i} file${s(i)}**.`:"No issues have been found, great job!"}else{g=`Found Spelling Error${s(u)}`;const e=[];if(u){e.push(`**${u} error${s(u)}** ${u===1?"has":"have"} been found in **${d} file${s(d)}**.`)}if(l){e.push(`**${l} suggestion${s(l)}** ${l===1?"has":"have"} been found in **${i} file${s(i)}**.`)}h=e.join("\n\n")}while(c.length){const r=c.splice(0,50);await e.rest.checks.update({...o.context.repo,check_run_id:t,conclusion:n,status:"completed",completed_at:(new Date).toISOString(),output:{title:g,summary:h,annotations:r}})}}async function run(){try{const e=getOctokit();const r=await getChangedFiles(e);const{include:n,exclude:o}=i()({include:{type:"stringArray"},exclude:{type:"stringArray"}});t.debug(`changed files: ${JSON.stringify(r.map((({filename:e})=>e)),null,2)}`);const l=r.filter((({filename:e})=>{const t=n?n.some((t=>a()(e,t))):true;const r=o?o.some((t=>a()(e,t))):false;return t&&!r}));const d=l.map((({filename:e})=>e));t.info(`checking files: ${JSON.stringify(d,null,2)}`);if(l.length===0){await createCheck(e,{status:"completed",conclusion:"neutral",completed_at:(new Date).toISOString(),output:{title:"No Matched Files",summary:"There were no matched files that needed checking."}})}else{const{data:t}=await createCheck(e,{status:"in_progress",started_at:(new Date).toISOString(),output:{title:"Checking",summary:`Files: ${JSON.stringify(d,null,2)}`}});await spellCheck(e,t.id,l)}}catch(e){t.error(e);t.setFailed(e.message)}}run()})();module.exports=__webpack_exports__})();